"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=true;exports.default=void 0;var _msglogger=_interopRequireDefault(require("./msglogger"));var chartExclusionList={timeseries:true},onFcInstatiated=function onFcInstatiated(event){var name=event.sender.getName().toLowerCase();if(event.sender.getType()==="chartAPI"&&!chartExclusionList[name]){event.sender.registerFactory("messageLogger",(function(component){if(component.getChildren("messageLogger")){component.getChildren("messageLogger")[0].configure(component);return}var msgLoggerObj=new _msglogger.default;msgLoggerObj.configure(component);msgLoggerObj.addToEnv("chart-container",component.getFromEnv("chart-container"));component.attachChild(msgLoggerObj,"messageLogger");component.getFromEnv("chartInstance").showLog=function(){return msgLoggerObj&&msgLoggerObj.show&&msgLoggerObj.show()};component.getFromEnv("chartInstance").hideLog=function(){return msgLoggerObj&&msgLoggerObj.hide&&msgLoggerObj.hide()};component.getFromEnv("chartInstance").clearLog=function(){return msgLoggerObj&&msgLoggerObj.clearLog&&msgLoggerObj.clearLog()};event.sender.addEventListener("realtimeDataUpdate",(function onRealTimeDataUpdate(ev){if(ev.sender.getChildren("messageLogger")){ev.sender.getChildren("messageLogger")[0].addLog(ev.data)}}))}))}};function messageLoggerLinker(FC){FC.addEventListener("instantiated",onFcInstatiated)}var _default={extension:messageLoggerLinker,name:"messageLoggerLinker",type:"extension",requiresFusionCharts:true};exports.default=_default;