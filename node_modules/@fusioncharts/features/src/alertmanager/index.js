"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=true;exports.default=void 0;var _alertmanager=_interopRequireDefault(require("./alertmanager"));var _lib=require("@fusioncharts/core/src/lib");var alertFn=function alertFn(event){if(event.sender.apiInstance.getChildren("alertManager")){event.sender.apiInstance.getChildren("alertManager")[0].processRTData(event.data)}},onFCPostconfigure=function onFCPostconfigure(event){if(event.sender.getType()==="dataset"){var dataset=event.sender,dsConfig=dataset.config,JSONData=dsConfig.JSONData,checkForAlert,chart=dataset.getFromEnv("chart"),alertManager=chart.getChildren("alertManager"),alertManagerConfig;if(!alertManager||!JSONData){return}checkForAlert=(0,_lib.pluckNumber)(JSONData&&JSONData.checkforalerts,1);alertManager=alertManager[0];alertManagerConfig=alertManager.config||(alertManager.config={});alertManagerConfig.datasetMap=alertManagerConfig.datasetMap||{};alertManagerConfig.datasetMap[dsConfig.index]=checkForAlert}},onFCInstantiated=function onFCInstantiated(event){if(event.sender.getType()==="chartAPI"){event.sender.registerFactory("alertManager",(function(component){if(component.getChildren("alertManager")){component.getChildren("alertManager")[0].configure();return}(0,_lib.componentFactory)(component.getFromEnv("chart"),_alertmanager.default,"alertManager",1,[{}])}))}};function alertManagerLinker(FC){FC.addEventListener("instantiated",onFCInstantiated);FC.addEventListener("updateDataReceived",alertFn);FC.addEventListener("postConfigure",onFCPostconfigure)}var _default={extension:alertManagerLinker,name:"alertManagerLinker",type:"extension",requiresFusionCharts:true};exports.default=_default;