"use strict";exports.__esModule=true;exports.default=void 0;var M="M",bottomLineParser=function bottomLineParser(inputJSON){var dataset=inputJSON.component,dataStore=dataset.components.data,isStacked=dataset.getFromEnv("chartConfig").isstacked,pathObj=dataset.getLinePath(dataStore).getPathArr("detailed"),initialPath=pathObj.bottom,length=dataset.getState("_total"),i=dataset.config._childIndex;if(initialPath.length&&Array.isArray(initialPath[0])){var len=initialPath.length;initialPath[0]=Object.assign([],initialPath[1]);initialPath[0][0]=M;initialPath[len-1]=Object.assign([],initialPath[len-2])}return[{initialAttr:{opacity:0,path:initialPath},finalAttr:{opacity:1,path:inputJSON.attr.path},startEnd:{start:isStacked?.5/length*i:0,end:isStacked?.5/length*(i+1):.5},slot:"plot",hookFn:function hookFn(){this.attr({opacity:1})}}]},connectorLineParser=function connectorLineParser(inputJSON){var dataset=inputJSON.component,dataStore=dataset.components.data,isStacked=dataset.getFromEnv("chartConfig").isstacked,is3D=dataset.getFromEnv("chartConfig").is3D,connectorInitPath=dataset.getLinePath(dataStore,null,isStacked||is3D?"base":"zero").getPathArr("top"),finalAttr=inputJSON.attr,length=dataset.getState("_total"),i=dataset.config._childIndex;return[{initialAttr:{opacity:0,path:connectorInitPath},finalAttr:{opacity:1,path:finalAttr.path},startEnd:{start:isStacked?.5/length*i:0,end:isStacked?.5/length*(i+1):.5},slot:"plot",hookFn:function hookFn(){this.attr({opacity:1})}}]},labelUpdatingParser=function labelUpdatingParser(){return[{initialAttr:{opacity:0},finalAttr:{opacity:1},slot:"final"}]},groupAppearingParser=function groupAppearingParser(inputJSON){if(inputJSON.attr.name==="label-group"){return[{initialAttr:{opacity:0},finalAttr:{opacity:1},slot:"final"}]}else if(inputJSON.attr.name==="plot-group"){return[{initialAttr:{opacity:0},finalAttr:{opacity:1},startEnd:{start:.5,end:1},slot:"plot"}]}return[{initialAttr:{opacity:1},finalAttr:{opacity:1},slot:"final"}]},lineAppearingParser=function lineAppearingParser(inputJSON){var dataset=inputJSON.component,dataStore=dataset.components.data,isStacked=dataset.getFromEnv("chartConfig").isstacked,is3D=dataset.getFromEnv("chartConfig").is3D,initialPath=dataset.getLinePath(dataStore,null,isStacked||is3D?"base":"zero"),finalAttr=inputJSON.attr,length=dataset.getState("_total"),i=dataset.config._childIndex;return[{initialAttr:{opacity:0,path:initialPath.getPathArr()},finalAttr:{opacity:1,path:finalAttr.path},startEnd:{start:isStacked?.5/length*i:0,end:isStacked?.5/length*(i+1):.5},slot:"plot",hookFn:function hookFn(){this.attr({opacity:1})}}]};var _default={"*.dataset.area":function datasetArea(){return{"anchor.appearing":[{initialAttr:{opacity:0},finalAttr:{opacity:1},startEnd:{start:.5,end:1},slot:"plot"}],"anchor.updating":[{initialAttr:{opacity:0},finalAttr:{opacity:1},slot:"final"}],"anchor.disappearing":[{finalAttr:{opacity:0,"fill-opacity":0,"stroke-opacity":0},slot:"final"}],"line.appearing":lineAppearingParser,"topBorderPath.appearing":connectorLineParser,"bottomPath.appearing":bottomLineParser,"label.appearing":[{initialAttr:{opacity:0},finalAttr:{opacity:1},slot:"final"}],"label.updating":labelUpdatingParser,"group.appearing":groupAppearingParser,"*":null}}};exports.default=_default;