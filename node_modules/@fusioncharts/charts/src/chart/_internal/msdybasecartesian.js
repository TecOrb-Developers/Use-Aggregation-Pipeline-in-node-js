"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=true;exports.default=exports.setAxisDimention=exports.getSpecificyAxisConf=exports.getSpecificxAxisConf=exports._feedAxesRawData=void 0;var _inheritsLoose2=_interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _mscartesian=_interopRequireDefault(require("./mscartesian"));var _cartesianAxisDualY=_interopRequireDefault(require("../../factories/cartesian-axis-dual-y"));var _lib=require("@fusioncharts/core/src/lib");var _combiDualYDataset=_interopRequireDefault(require("../../factories/combi-dual-y-dataset"));var _equal=_interopRequireDefault(require("@fusioncharts/utils/src/string/equal"));var _safeMax=_interopRequireDefault(require("@fusioncharts/utils/src/array/safe-max"));var _feedAxesRawData,getSpecificxAxisConf,getSpecificyAxisConf,setAxisDimention,mathMax=Math.max;exports.setAxisDimention=setAxisDimention;exports.getSpecificyAxisConf=getSpecificyAxisConf;exports.getSpecificxAxisConf=getSpecificxAxisConf;exports._feedAxesRawData=_feedAxesRawData;var MSDyBaseCartesian=function(_MSCartesian){(0,_inheritsLoose2.default)(MSDyBaseCartesian,_MSCartesian);function MSDyBaseCartesian(){var _this;_this=_MSCartesian.call(this)||this;_this.registerFactory("axis",_cartesianAxisDualY.default,["canvas"]);_this.registerFactory("dataset",_combiDualYDataset.default,["vCanvas"]);return _this}MSDyBaseCartesian.getName=function getName(){return"MSDyBaseCartesian"};var _proto=MSDyBaseCartesian.prototype;_proto.__setDefaultConfig=function __setDefaultConfig(){_MSCartesian.prototype.__setDefaultConfig.call(this);this.config.syncaxislimits=0};_proto._feedAxesRawData=function _feedAxesRawData(){var iapi=this,config=iapi.config,colorM=iapi.getFromEnv("color-manager"),dataObj=iapi.getFromEnv("dataSource"),chartAttrs=iapi.getFromEnv("chart-attrib"),xAxisConf,yAxisConf,sYAxisConf,is3D=iapi.config.is3D,palleteString=is3D?_lib.chartPaletteStr.chart3D:_lib.chartPaletteStr.chart2D,primaryAxisOnleft=config.primaryAxisOnleft=(0,_lib.pluckNumber)(chartAttrs.primaryaxisonleft,1),syncAxisLimits=(0,_lib.pluckNumber)(chartAttrs.syncaxislimits,0),sYAxisTrendlines=[{line:[]}],pYAxisTrendlines=[{line:[]}],trendlinesArr,trendlineObj,arrLen,len,i,j,trendlines=dataObj.trendlines||[],showZeroPlane=(0,_lib.pluckNumber)(chartAttrs.showzeroplane,1),showZeroPlaneValue=(0,_lib.pluckNumber)(chartAttrs.showzeroplanevalue),outCanfontSizeWithUnit=(0,_lib.pluckFontSizeMaintainUnit)(chartAttrs.outcnvbasefontsize,chartAttrs.basefontsize,10);if(!showZeroPlane&&showZeroPlaneValue===_lib.UNDEF){showZeroPlaneValue=0}xAxisConf=iapi.getSpecificxAxisConf();yAxisConf=iapi.getSpecificyAxisConf();if(config.isstacked){yAxisConf.isPercent=(0,_lib.pluckNumber)(config.stack100percent,0);if(iapi.getName().toLowerCase()==="stackedcolumn2dlinedy"||iapi.getName().toLowerCase()==="stackedcolumn3dlinedy"){yAxisConf.isPercent=0}}sYAxisConf={isActive:false,isPercent:iapi.isPercentage,axisIndex:1,uniqueClassName:1,outCanfontFamily:(0,_lib.pluck)(chartAttrs.outcnvbasefont,chartAttrs.basefont,"Verdana,sans"),outCanfontSize:this.computeFontSize(outCanfontSizeWithUnit),outCanfontSizeWithUnit:outCanfontSizeWithUnit,outCancolor:(0,_lib.pluck)(chartAttrs.outcnvbasefontcolor,chartAttrs.basefontcolor,colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/gi,"#$1"),axisNamePadding:chartAttrs.yaxisnamepadding,axisValuePadding:chartAttrs.yaxisvaluespadding,axisNameFont:chartAttrs.syaxisnamefont,axisNameFontSize:chartAttrs.syaxisnamefontsize,axisNameFontSizeWithUnit:chartAttrs.syaxisnamefontsize,axisNameFontColor:chartAttrs.syaxisnamefontcolor,axisNameFontBold:chartAttrs.syaxisnamefontbold,axisNameFontItalic:chartAttrs.syaxisnamefontitalic,axisNameBgColor:chartAttrs.syaxisnamebgcolor,axisNameBorderColor:chartAttrs.syaxisnamebordercolor,axisNameAlpha:chartAttrs.syaxisnamealpha,axisNameFontAlpha:chartAttrs.syaxisnamefontalpha,axisNameBgAlpha:chartAttrs.syaxisnamebgalpha,axisNameBorderAlpha:chartAttrs.syaxisnameborderalpha,axisNameBorderPadding:chartAttrs.syaxisnameborderpadding,axisNameBorderRadius:chartAttrs.syaxisnameborderradius,axisNameBorderThickness:chartAttrs.syaxisnameborderthickness,axisNameBorderDashed:chartAttrs.syaxisnameborderdashed,axisNameBorderDashLen:chartAttrs.syaxisnameborderdashlen,axisNameBorderDashGap:chartAttrs.syaxisnameborderdashgap,axisNameWidth:chartAttrs.syaxisnamewidth,useEllipsesWhenOverflow:chartAttrs.useellipseswhenoverflow,rotateAxisName:(0,_lib.pluckNumber)(chartAttrs.rotateyaxisname,1),axisName:chartAttrs.syaxisname,divLineColor:(0,_lib.pluck)(chartAttrs.divlinecolor,colorM.getColor(palleteString.divLineColor)),divLineAlpha:(0,_lib.pluck)(chartAttrs.divlinealpha,colorM.getColor("divLineAlpha")),divLineThickness:(0,_lib.pluckNumber)(chartAttrs.divlinethickness,1),divLineIsDashed:Boolean((0,_lib.pluckNumber)(chartAttrs.divlinedashed,chartAttrs.divlineisdashed,0)),divLineDashLen:(0,_lib.pluckNumber)(chartAttrs.divlinedashlen,4),divLineDashGap:(0,_lib.pluckNumber)(chartAttrs.divlinedashgap,2),showAlternateGridColor:(0,_lib.pluckNumber)(chartAttrs.showalternatehgridcolor,1),alternateGridColor:(0,_lib.pluck)(chartAttrs.alternatehgridcolor,colorM.getColor("altHGridColor")),alternateGridAlpha:(0,_lib.pluck)(chartAttrs.alternatehgridalpha,colorM.getColor("altHGridAlpha")),numDivLines:chartAttrs.numdivlines,axisMinValue:syncAxisLimits?(0,_lib.pluckNumber)(chartAttrs.syaxisminvalue,chartAttrs.pyaxisminvalue,chartAttrs.yaxisminvalue):chartAttrs.syaxisminvalue,axisMaxValue:syncAxisLimits?(0,_lib.pluckNumber)(chartAttrs.syaxismaxvalue,chartAttrs.pyaxismaxvalue,chartAttrs.yaxismaxvalue):chartAttrs.syaxismaxvalue,setAdaptiveMin:chartAttrs.setadaptivesymin||chartAttrs.setadaptiveymin,adjustDiv:chartAttrs.adjustdiv,labelStep:chartAttrs.yaxisvaluesstep,showAxisValues:(0,_lib.pluckNumber)(chartAttrs.showsyaxisvalues,chartAttrs.showsyaxisvalue,chartAttrs.showyaxisvalues,chartAttrs.showyaxisvalue),showLimits:(0,_lib.pluckNumber)(chartAttrs.showsecondarylimits,chartAttrs.showyaxislimits,chartAttrs.showlimits),showDivLineValues:(0,_lib.pluckNumber)(chartAttrs.showdivlinesecondaryvalue,chartAttrs.showyaxisvalues,chartAttrs.showyaxisvalue,1),showZeroPlane:showZeroPlane,zeroPlaneColor:chartAttrs.zeroplanecolor,zeroPlaneThickness:(0,_lib.pluckNumber)(chartAttrs.zeroplanethickness,chartAttrs.divlinethickness,2),zeroPlaneAlpha:chartAttrs.zeroplanealpha,showZeroPlaneValue:showZeroPlaneValue,trendlineColor:chartAttrs.trendlinecolor,trendlineToolText:chartAttrs.trendlinetooltext,trendlineThickness:chartAttrs.trendlinethickness,trendlineAlpha:chartAttrs.trendlinealpha,showTrendlinesOnTop:chartAttrs.showtrendlinesontop,showAxisLine:is3D?0:(0,_lib.pluckNumber)(chartAttrs.showsyaxisline,chartAttrs.showaxislines,chartAttrs.drawAxisLines,0),axisLineThickness:(0,_lib.pluckNumber)(chartAttrs.syaxislinethickness,chartAttrs.axislinethickness,1),axisLineAlpha:(0,_lib.pluckNumber)(chartAttrs.syaxislinealpha,chartAttrs.axislinealpha,100),axisLineColor:(0,_lib.pluck)(chartAttrs.syaxislinecolor,chartAttrs.axislinecolor,"#000000"),labelFont:chartAttrs.yaxisvaluefont,labelFontSize:this.computeFontSize(chartAttrs.yaxisvaluefontsize),labelFontSizeWithUnit:chartAttrs.yaxisvaluefontsize,labelFontColor:chartAttrs.yaxisvaluefontcolor,labelAlpha:chartAttrs.yaxisvaluealpha,labelFontBold:chartAttrs.yaxisvaluefontbold,labelFontItalic:chartAttrs.yaxisvaluefontitalic,labelBdrColor:chartAttrs.yaxisvaluebordercolor,labelBdrAlpha:chartAttrs.yaxisvalueborderalpha,labelBgAlpha:chartAttrs.yaxisvaluebgalpha,labelLink:chartAttrs.yaxisvaluelink,labelBgColor:chartAttrs.yaxisvaluebgcolor,labelBdrThickness:chartAttrs.yaxisvalueborderthickness,labelBdrPadding:chartAttrs.yaxisvalueborderpadding,labelBdrRadius:chartAttrs.yaxisvalueborderradius,labelBdrDashed:chartAttrs.yaxisvalueborderdashed,labelBdrDashLen:chartAttrs.yaxisvalueborderdashlen,labelBdrDashGap:chartAttrs.yaxisvalueborderdashgap};xAxisConf.vtrendlines=(0,_lib.extend2)([],dataObj.vtrendlines);for(i=0,len=trendlines.length;i<len;i++){trendlinesArr=trendlines[i]&&trendlines[i].line||[];arrLen=trendlinesArr.length;for(j=0;j<arrLen;j++){trendlineObj=trendlinesArr[j]||{};if((0,_equal.default)(trendlineObj.parentyaxis,"s")){sYAxisTrendlines[0].line.push(trendlineObj)}else{pYAxisTrendlines[0].line.push(trendlineObj)}}}yAxisConf.trendlines=(0,_lib.extend2)([],pYAxisTrendlines);sYAxisConf.trendlines=(0,_lib.extend2)([],sYAxisTrendlines);if(primaryAxisOnleft===1){yAxisConf.isVertical=true;yAxisConf.isReverse=true;yAxisConf.isOpposit=false;sYAxisConf.isVertical=true;sYAxisConf.isReverse=true;sYAxisConf.isOpposit=true}else{yAxisConf.isVertical=true;yAxisConf.isReverse=true;yAxisConf.isOpposit=true;sYAxisConf.isVertical=true;sYAxisConf.isReverse=true;sYAxisConf.isOpposit=false}return{yAxisConf:[yAxisConf,sYAxisConf],xAxisConf:[xAxisConf]}};_proto.getSpecificxAxisConf=function getSpecificxAxisConf(){var iapi=this,chartAttrs=iapi.getFromEnv("chart-attrib"),is3D=iapi.config.is3D,xAxisConf=iapi.getBasexAxisConf(),config=iapi.config;xAxisConf.zeroPlaneThickness=(0,_lib.pluckNumber)(chartAttrs.vzeroplanethickness,chartAttrs.vdivlinethickness,2);xAxisConf.zeroPlaneAlpha=(0,_lib.pluckNumber)(chartAttrs.vzeroplanealpha,chartAttrs.vdivlinealpha,config.zeroplanealpha);xAxisConf.showZeroPlaneValue=chartAttrs.showvzeroplanevalue;xAxisConf.showAxisLine=is3D?0:(0,_lib.pluckNumber)(chartAttrs.showxaxisline,chartAttrs.showaxislines,chartAttrs.drawAxisLines,0);xAxisConf.axisLineColor=(0,_lib.pluck)(chartAttrs.xaxislinecolor,chartAttrs.axislinecolor,"#000000");xAxisConf.isReverse=false;xAxisConf.showAlternateGridColor=(0,_lib.pluckNumber)(chartAttrs.showalternatevgridcolor,0);xAxisConf.numDivLines=chartAttrs.numvdivlines;xAxisConf.maxLabelHeight=chartAttrs.maxlabelheight;xAxisConf.axisName=chartAttrs.xaxisname;xAxisConf.setAdaptiveMin=chartAttrs.setadaptivexmin;xAxisConf.showLimits=chartAttrs.showvlimits;xAxisConf.showDivLineValues=(0,_lib.pluckNumber)(chartAttrs.showvdivlinevalues,chartAttrs.showvdivlinevalues);return xAxisConf};_proto.getSpecificyAxisConf=function getSpecificyAxisConf(){var iapi=this,chartAttrs=iapi.getFromEnv("chart-attrib"),is3D=iapi.config.is3D,palleteString=is3D?_lib.chartPaletteStr.chart3D:_lib.chartPaletteStr.chart2D,config=iapi.config,colorM=iapi.getFromEnv("color-manager"),syncAxisLimits=(0,_lib.pluckNumber)(chartAttrs.syncaxislimits,0),showZeroPlane=(0,_lib.pluckNumber)(chartAttrs.showzeroplane,1),showZeroPlaneValue=(0,_lib.pluckNumber)(chartAttrs.showzeroplanevalue),outCanfontSizeWithUnit=(0,_lib.pluckFontSizeMaintainUnit)(chartAttrs.outcnvbasefontsize,chartAttrs.basefontsize,10);if(!showZeroPlane&&showZeroPlaneValue===_lib.UNDEF){showZeroPlaneValue=0}return{outCanfontFamily:(0,_lib.pluck)(chartAttrs.outcnvbasefont,chartAttrs.basefont,"Verdana,sans"),outCanfontSize:this.computeFontSize(outCanfontSizeWithUnit),outCanfontSizeWithUnit:outCanfontSizeWithUnit,outCancolor:(0,_lib.pluck)(chartAttrs.outcnvbasefontcolor,chartAttrs.basefontcolor,colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/gi,"#$1"),axisNamePadding:(0,_lib.pluckNumber)(chartAttrs.pyaxisnamepadding,chartAttrs.yaxisnamepadding),axisValuePadding:(0,_lib.pluckNumber)(chartAttrs.pyaxisvaluespadding,chartAttrs.yaxisvaluespadding),axisNameFont:(0,_lib.pluck)(chartAttrs.pyaxisnamefont,chartAttrs.yaxisnamefont),axisNameFontSize:(0,_lib.pluckNumber)(chartAttrs.pyaxisnamefontsize,this.computeFontSize(chartAttrs.yaxisnamefontsize)),axisNameFontSizeWithUnit:(0,_lib.pluckFontSizeMaintainUnit)(chartAttrs.pyaxisnamefontsize,chartAttrs.yaxisnamefontsize),axisNameFontColor:(0,_lib.pluck)(chartAttrs.pyaxisnamefontcolor,chartAttrs.yaxisnamefontcolor),axisNameFontBold:(0,_lib.pluckNumber)(chartAttrs.pyaxisnamefontbold,chartAttrs.yaxisnamefontbold),axisNameFontItalic:(0,_lib.pluckNumber)(chartAttrs.pyaxisnamefontitalic,chartAttrs.yaxisnamefontitalic),axisNameBgColor:(0,_lib.pluck)(chartAttrs.pyaxisnamebgcolor,chartAttrs.yaxisnamebgcolor),axisNameBorderColor:(0,_lib.pluck)(chartAttrs.pyaxisnamebordercolor,chartAttrs.yaxisnamebordercolor),axisNameAlpha:(0,_lib.pluckNumber)(chartAttrs.pyaxisnamealpha,chartAttrs.yaxisnamealpha),axisNameFontAlpha:(0,_lib.pluckNumber)(chartAttrs.pyaxisnamefontalpha,chartAttrs.yaxisnamefontalpha),axisNameBgAlpha:(0,_lib.pluckNumber)(chartAttrs.pyaxisnamebgalpha,chartAttrs.yaxisnamebgalpha),axisNameBorderAlpha:(0,_lib.pluckNumber)(chartAttrs.pyaxisnameborderalpha,chartAttrs.yaxisnameborderalpha),axisNameBorderPadding:(0,_lib.pluckNumber)(chartAttrs.pyaxisnameborderpadding,chartAttrs.yaxisnameborderpadding),axisNameBorderRadius:(0,_lib.pluckNumber)(chartAttrs.pyaxisnameborderradius,chartAttrs.yaxisnameborderradius),axisNameBorderThickness:(0,_lib.pluckNumber)(chartAttrs.pyaxisnameborderthickness,chartAttrs.yaxisnameborderthickness),axisNameBorderDashed:(0,_lib.pluckNumber)(chartAttrs.pyaxisnameborderdashed,chartAttrs.yaxisnameborderdashed),axisNameBorderDashLen:(0,_lib.pluckNumber)(chartAttrs.pyaxisnameborderdashlen,chartAttrs.yaxisnameborderdashlen),axisNameBorderDashGap:(0,_lib.pluckNumber)(chartAttrs.pyaxisnameborderdashgap,chartAttrs.yaxisnameborderdashgap),axisNameWidth:(0,_lib.pluckNumber)(chartAttrs.pyaxisnamewidth,chartAttrs.yaxisnamewidth),useEllipsesWhenOverflow:chartAttrs.useellipseswhenoverflow,rotateAxisName:(0,_lib.pluckNumber)(chartAttrs.rotateyaxisname,1),axisName:(0,_lib.pluck)(chartAttrs.pyaxisname,chartAttrs.yaxisname),divLineColor:(0,_lib.pluck)(chartAttrs.divlinecolor,colorM.getColor(palleteString.divLineColor)),divLineAlpha:(0,_lib.pluck)(chartAttrs.divlinealpha,colorM.getColor("divLineAlpha")),divLineThickness:(0,_lib.pluckNumber)(chartAttrs.divlinethickness,1),divLineIsDashed:Boolean((0,_lib.pluckNumber)(chartAttrs.divlinedashed,chartAttrs.divlineisdashed,0)),divLineDashLen:(0,_lib.pluckNumber)(chartAttrs.divlinedashlen,4),divLineDashGap:(0,_lib.pluckNumber)(chartAttrs.divlinedashgap,2),showAlternateGridColor:(0,_lib.pluckNumber)(chartAttrs.showalternatehgridcolor,1),alternateGridColor:(0,_lib.pluck)(chartAttrs.alternatehgridcolor,colorM.getColor("altHGridColor")),alternateGridAlpha:(0,_lib.pluck)(chartAttrs.alternatehgridalpha,colorM.getColor("altHGridAlpha")),numDivLines:chartAttrs.numdivlines,axisMinValue:syncAxisLimits?(0,_lib.pluckNumber)(chartAttrs.syaxisminvalue,chartAttrs.pyaxisminvalue,chartAttrs.yaxisminvalue):(0,_lib.pluckNumber)(chartAttrs.pyaxisminvalue,chartAttrs.yaxisminvalue),axisMaxValue:syncAxisLimits?(0,_lib.pluckNumber)(chartAttrs.syaxismaxvalue,chartAttrs.pyaxismaxvalue,chartAttrs.yaxismaxvalue):(0,_lib.pluckNumber)(chartAttrs.pyaxismaxvalue,chartAttrs.yaxismaxvalue),setAdaptiveMin:chartAttrs.setadaptiveymin,adjustDiv:chartAttrs.adjustdiv,labelStep:chartAttrs.yaxisvaluesstep,showAxisValues:(0,_lib.pluckNumber)(chartAttrs.showyaxisvalues,chartAttrs.showyaxisvalue),showLimits:(0,_lib.pluckNumber)(chartAttrs.showyaxislimits,chartAttrs.showlimits,iapi.showLimits),showDivLineValues:(0,_lib.pluckNumber)(chartAttrs.showdivlinevalues,chartAttrs.showdivlinevalue),showZeroPlane:showZeroPlane,zeroPlaneColor:chartAttrs.zeroplanecolor,zeroPlaneThickness:(0,_lib.pluckNumber)(chartAttrs.zeroplanethickness,chartAttrs.divlinethickness,config.zeroplanethickness,2),zeroPlaneAlpha:(0,_lib.pluckNumber)(chartAttrs.zeroplanealpha,chartAttrs.divlinealpha,config.zeroplanealpha),showZeroPlaneValue:showZeroPlaneValue,showZeroPlaneOnTop:config.showzeroplaneontop,trendlineColor:chartAttrs.trendlinecolor,trendlineToolText:chartAttrs.trendlinetooltext,trendlineThickness:chartAttrs.trendlinethickness,trendlineAlpha:chartAttrs.trendlinealpha,showTrendlinesOnTop:chartAttrs.showtrendlinesontop,showAxisLine:is3D?0:(0,_lib.pluckNumber)(chartAttrs.showyaxisline,chartAttrs.showaxislines,chartAttrs.drawAxisLines,0),axisLineThickness:(0,_lib.pluckNumber)(chartAttrs.yaxislinethickness,chartAttrs.axislinethickness,1),axisLineAlpha:(0,_lib.pluckNumber)(chartAttrs.yaxislinealpha,chartAttrs.axislinealpha,100),axisLineColor:(0,_lib.pluck)(chartAttrs.yaxislinecolor,chartAttrs.axislinecolor,"#000000"),forceTrendBelow:!!config.is3D,labelFont:chartAttrs.yaxisvaluefont,labelFontSize:this.computeFontSize(chartAttrs.yaxisvaluefontsize),labelFontSizeWithUnit:chartAttrs.yaxisvaluefontsize,labelFontColor:chartAttrs.yaxisvaluefontcolor,labelAlpha:chartAttrs.yaxisvaluealpha,labelFontBold:chartAttrs.yaxisvaluefontbold,labelFontItalic:chartAttrs.yaxisvaluefontitalic,labelBdrColor:chartAttrs.yaxisvaluebordercolor,labelBgAlpha:chartAttrs.yaxisvaluebgalpha,labelBdrAlpha:chartAttrs.yaxisvalueborderalpha,labelLink:chartAttrs.yaxisvaluelink,labelBgColor:chartAttrs.yaxisvaluebgcolor,labelBdrThickness:chartAttrs.yaxisvalueborderthickness,labelBdrPadding:chartAttrs.yaxisvalueborderpadding,labelBdrRadius:chartAttrs.yaxisvalueborderradius,labelBdrDashed:chartAttrs.yaxisvalueborderdashed,labelBdrDashLen:chartAttrs.yaxisvalueborderdashlen,labelBdrDashGap:chartAttrs.yaxisvalueborderdashgap}};_proto.setAxisDimention=function setAxisDimention(){var iapi=this,config=iapi.config,children=iapi.getChildren(),scrollbarConfig=iapi.getChildren("scrollBar")&&iapi.getChildren("scrollBar")[0]&&iapi.getChildren("scrollBar")[0].config,yAxisArr=children.yAxis,xAxis=children.xAxis&&children.xAxis[0],yAxis=yAxisArr[0],sYAxis=yAxisArr[1],xDepth=config.xDepth||0,canvas=children.canvas[0],canvasConfig=canvas.config,canvasBorderWidth=canvasConfig.canvasBorderWidth,canvasPadding=canvasConfig.canvasPadding,canvasPaddingLeft=canvasConfig.canvasPaddingLeft,canvasPaddingRight=canvasConfig.canvasPaddingRight,canvasPaddingTop=canvasConfig.canvasPaddingTop,yAxisStartXPos,sYAxisStartXPos,hasScrollBar=iapi&&iapi.isScrollEnabled(),shift=config.shift?config.is3D||hasScrollBar&&+scrollbarConfig.isOpposite===xAxis.config.isOpposit?config.shift:0:0,sumValueSpaceTop=config.sumValueSpace&&config.sumValueSpace.top||0,primaryAxisOnleft=config.primaryAxisOnleft,canvasPaddingBottom=canvasConfig.canvasPaddingBottom,maxLeftPadding=mathMax(canvasPaddingLeft,canvasPadding);xAxis&&xAxis.setAxisDimention({x:config.canvasLeft+xDepth+maxLeftPadding,y:xAxis.config.isOpposit?config.canvasTop-canvasBorderWidth-(config.is3D?0:shift)-sumValueSpaceTop:config.canvasBottom+shift+canvasBorderWidth,opposite:xAxis.config.isOpposit?config.canvasBottom+shift+canvasBorderWidth:config.canvasTop-canvasBorderWidth,axisLength:config.canvasWidth-xDepth-maxLeftPadding-mathMax(canvasPaddingRight,canvasPadding)});if(primaryAxisOnleft){config.yAxisStartXPos=config.canvasLeft-canvasBorderWidth;config.sYAxisStartXPos=config.canvasRight+canvasBorderWidth}else{config.yAxisStartXPos=config.canvasRight+canvasBorderWidth;config.sYAxisStartXPos=config.canvasLeft-canvasBorderWidth}yAxisStartXPos=config.yAxisStartXPos;sYAxisStartXPos=config.sYAxisStartXPos;yAxis&&yAxis.setAxisDimention({x:yAxisStartXPos,y:config.canvasTop+canvasPaddingTop,opposite:sYAxisStartXPos,axisLength:config.canvasHeight-canvasPaddingTop-canvasPaddingBottom});sYAxis&&sYAxis.setAxisDimention({x:sYAxisStartXPos,y:config.canvasTop+canvasPaddingTop,opposite:yAxisStartXPos,axisLength:config.canvasHeight-canvasPaddingTop-canvasPaddingBottom})};_proto._manageYAxisSpace=function _manageYAxisSpace(){var iapi=this,config=iapi.config,yAxisArr=iapi.getChildren("yAxis"),yAxis,i,yAxisSpaceAllocation=[],spaceTaken=0,spaceTakenByAxis;for(i=0;i<(yAxisArr&&yAxisArr.length);i++){yAxis=yAxisArr[i];spaceTakenByAxis=yAxis&&yAxis.placeAxis((config.availableWidth-spaceTaken)*.7)||{};if(i===0){spaceTaken=spaceTakenByAxis.left}yAxisSpaceAllocation.push({axisIndex:i,spaceTaken:spaceTakenByAxis})}if(yAxisArr&&yAxisArr[0]){iapi._allocateSpace({left:(0,_safeMax.default)(yAxisSpaceAllocation,(function(d){return d.spaceTaken.left})),right:(0,_safeMax.default)(yAxisSpaceAllocation,(function(d){return d.spaceTaken.right}))})}config.yAxisSpaceAllocation=yAxisSpaceAllocation};return MSDyBaseCartesian}(_mscartesian.default);exports._feedAxesRawData=_feedAxesRawData=MSDyBaseCartesian.prototype._feedAxesRawData;exports.getSpecificxAxisConf=getSpecificxAxisConf=MSDyBaseCartesian.prototype.getSpecificxAxisConf;exports.getSpecificyAxisConf=getSpecificyAxisConf=MSDyBaseCartesian.prototype.getSpecificyAxisConf;exports.setAxisDimention=setAxisDimention=MSDyBaseCartesian.prototype.setAxisDimention;var _default=MSDyBaseCartesian;exports.default=_default;