"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=true;exports.default=void 0;var _assertThisInitialized2=_interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));var _inheritsLoose2=_interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _lib=require("../lib");var _componentInterface=require("../component-interface");var colorComparator=function colorComparator(ob1,ob2){return+ob1.minvalue===+ob2.minvalue?ob1.maxvalue-ob2.maxvalue:ob1.minvalue-ob2.minvalue};var getTransitColor=function getTransitColor(colorArr1,colorArr2,transitOffset){var R1=colorArr1[0],G1=colorArr1[1],B1=colorArr1[2],R=R1+(colorArr2[0]-R1)*transitOffset,G=G1+(colorArr2[1]-G1)*transitOffset,B=B1+(colorArr2[2]-B1)*transitOffset;return{hex:(_lib.COLOR_BLACK+(R<<16|G<<8|B).toString(16)).slice(-6),rgb:[R,G,B]}},UNDEF;var ColorBucket=function(_ComponentInterface){(0,_inheritsLoose2.default)(ColorBucket,_ComponentInterface);function ColorBucket(){var _this;_this=_ComponentInterface.call(this)||this;var colorBucket=(0,_assertThisInitialized2.default)(_this);colorBucket.mapByCategory=false;colorBucket.colorArr=[];colorBucket.noValidRange=true;colorBucket.sortLegend=false;return _this}var _proto=ColorBucket.prototype;_proto.__setDefaultConfig=function __setDefaultConfig(){_ComponentInterface.prototype.__setDefaultConfig.call(this);this.config.defaultObj={code:"CCCCCC",alpha:"100"}};_proto.getType=function getType(){return"colorComponent"};_proto.getName=function getName(){return"colorBucket"};_proto.configure=function configure(options){if(!options){return}var colorBucket=this,mapByCategory=colorBucket.mapByCategory,numberFormatter=options.numberFormatter,colorRange=options.colorRange||{},color=(0,_lib.extend2)([],colorRange.color),chart=this.getLinkedParent(),paletteIndex=Math.min(Math.max((0,_lib.pluckNumber)(colorBucket.getFromEnv("dataSource").chart.palette,0)-1,0),4),defaultPaletteOptions=chart.defaultPaletteOptions&&chart.defaultPaletteOptions.paletteColors[paletteIndex],upperLimit=(0,_lib.pluckNumber)(numberFormatter.getCleanValue(colorRange.maxvalue),Infinity),lowerLimit=(0,_lib.pluckNumber)(numberFormatter.getCleanValue(colorRange.minvalue),-Infinity),colorArr=colorBucket.colorArr,colorCount,i,code,alpha,borderalpha,bordercolor,colorObj,tempvalue,maxValue,minValue,colorLabel;if(options.mapByCategory!==UNDEF){mapByCategory=colorBucket.mapByCategory=!!Number(options.mapByCategory)}if(!mapByCategory){color=color.filter((function(obj){return obj.minvalue||obj.maxvalue}))}else{color=color.filter((function(obj){return obj.code||obj.color}))}color.forEach((function(obj){if(obj.minvalue&&obj.maxvalue&&+obj.maxvalue<+obj.minvalue){tempvalue=obj.maxvalue;obj.maxvalue=obj.minvalue;obj.minvalue=tempvalue}if(!obj.minvalue){obj.minvalue=minValue=lowerLimit;maxValue=numberFormatter.getCleanValue(obj.maxvalue);obj.rangeLabel=minValue===-Infinity?"<"+numberFormatter.dataLabels(maxValue):numberFormatter.dataLabels(minValue)+"-"+numberFormatter.dataLabels(maxValue)}else if(!obj.maxvalue){minValue=numberFormatter.getCleanValue(obj.minvalue);obj.maxvalue=maxValue=upperLimit;obj.rangeLabel=maxValue===Infinity?">"+numberFormatter.dataLabels(minValue):numberFormatter.dataLabels(minValue)+"-"+numberFormatter.dataLabels(maxValue)}else{minValue=numberFormatter.getCleanValue(obj.minvalue);maxValue=numberFormatter.getCleanValue(obj.maxvalue);obj.rangeLabel=numberFormatter.dataLabels(minValue)+"-"+numberFormatter.dataLabels(maxValue)}}));color.sort(colorComparator);if(color&&(colorCount=color.length)){colorArr.length=0;for(i=0;i<colorCount;i+=1){colorObj=color[i];code=(0,_lib.pluck)(colorObj.color,colorObj.code,defaultPaletteOptions&&defaultPaletteOptions[i]);alpha=(0,_lib.pluck)(colorObj.alpha);bordercolor=(0,_lib.pluck)(colorObj.bordercolor);borderalpha=(0,_lib.pluck)(colorObj.borderalpha,100);maxValue=(0,_lib.pluckNumber)(colorObj.maxvalue);minValue=(0,_lib.pluckNumber)(colorObj.minvalue);colorLabel=(0,_lib.pluck)(colorObj.label,colorObj.displayvalue,colorObj.rangeLabel);if(code&&maxValue>=minValue||mapByCategory&&colorLabel){colorArr.push({code:code,alpha:alpha||"100",oriAlpha:alpha,maxvalue:maxValue,minvalue:minValue,label:(0,_lib.parseUnsafeString)(colorLabel),labelId:colorLabel.toLowerCase(),bordercolor:bordercolor,borderAlpha:borderalpha,name:colorObj.name,tllabelfont:colorObj.tllabelfont,tllabelfontsize:colorObj.tllabelfontsize,tllabelfontcolor:colorObj.tllabelfontcolor,trlabelfont:colorObj.trlabelfont,trlabelfontsize:colorObj.trlabelfontsize,trlabelfontcolor:colorObj.trlabelfontcolor,bllabelfont:colorObj.bllabelfont,bllabelfontsize:colorObj.bllabelfontsize,bllabelfontcolor:colorObj.bllabelfontcolor,brlabelfont:colorObj.brlabelfont,brlabelfontsize:colorObj.brlabelfontsize,brlabelfontcolor:colorObj.brlabelfontcolor})}}colorBucket.sortedColorArr=colorBucket.colorArr.slice(0)}else{colorBucket.noValidRange=true;colorBucket.colorArr=[];colorBucket.sortedColorArr=[]}};_proto.getColorObj=function getColorObj(_value){if(_value===UNDEF){return{outOfRange:true}}var colorBucket=this,maxContainingRange,colorArr=colorBucket.sortedColorArr,i=colorBucket.gradient?1:0,colorObj=colorArr[i],updatedColorObj,transitOffset,value=_value;if(colorBucket.mapByCategory){value=(0,_lib.parseUnsafeString)(value).toLowerCase()||value.toString().toLowerCase();while(colorObj){if(colorObj.labelId===value||colorObj.maxvalue>=value&&colorObj.minvalue<=value){return{code:colorObj.code,alpha:colorObj.alpha||"100",oriAlpha:colorObj.oriAlpha,seriesIndex:i,legendItemId:colorObj.legendItemId,tlLabelFont:colorObj.tllabelfont,tlLabelFontSize:colorObj.tllabelfontsize,tlLabelFontColor:colorObj.tllabelfontcolor,trLabelFont:colorObj.trlabelfont,trLabelFontSize:colorObj.trlabelfontsize,trLabelFontColor:colorObj.trlabelfontcolor,blLabelFont:colorObj.bllabelfont,blLabelFontSize:colorObj.bllabelfontsize,blLabelFontColor:colorObj.bllabelfontcolor,brLabelFont:colorObj.brlabelfont,brLabelFontSize:colorObj.brlabelfontsize,brLabelFontColor:colorObj.brlabelfontcolor}}i+=1;colorObj=colorArr[i]}return{outOfRange:true}}else if(colorBucket.gradient){if(colorBucket.scaleMin<=value&&colorBucket.scaleMax>=value){while(colorObj&&colorObj.maxvalue<value){i+=1;colorObj=colorArr[i]}transitOffset=(value-colorObj.minvalue)/colorObj.range;return{code:getTransitColor(colorArr[i-1].codeRGB,colorObj.codeRGB,transitOffset).hex}}return{outOfRange:true}}while(colorObj){if(value<colorObj.minvalue&&!maxContainingRange){if(i===0){updatedColorObj={code:colorObj.code,alpha:colorObj.alpha||"100",oriAlpha:colorObj.oriAlpha,seriesIndex:i,name:colorObj.name,label:colorObj.label,outOfRange:true,bordercolor:colorObj.bordercolor,borderalpha:colorObj.borderAlpha}}else{updatedColorObj={code:colorArr[i-1].code,alpha:colorArr[i-1].alpha||"100",oriAlpha:colorArr[i-1].oriAlpha,seriesIndex:i,name:colorArr[i-1].name,label:colorArr[i-1].label,outOfRange:true,bordercolor:colorArr[i-1].bordercolor,borderalpha:colorArr[i-1].borderAlpha}}}if(value>colorObj.maxvalue&&i===colorArr.length-1){updatedColorObj={code:colorObj.code,alpha:colorObj.alpha||"100",oriAlpha:colorObj.oriAlpha,seriesIndex:i,name:colorObj.name,label:colorObj.label,outOfRange:true,bordercolor:colorObj.bordercolor,borderalpha:colorObj.borderAlpha}}if(colorObj.maxvalue>value&&colorObj.minvalue<=value){updatedColorObj={code:colorObj.code,alpha:colorObj.alpha||"100",oriAlpha:colorObj.oriAlpha,seriesIndex:i,name:colorObj.name,label:colorObj.label,bordercolor:colorObj.bordercolor,borderalpha:colorObj.borderAlpha}}else if(value===colorObj.maxvalue){maxContainingRange={code:colorObj.code,alpha:colorObj.alpha||"100",oriAlpha:colorObj.oriAlpha,seriesIndex:i,name:colorObj.name,label:colorObj.label,bordercolor:colorObj.bordercolor,borderalpha:colorObj.borderAlpha,tlLabelFont:colorObj.tllabelfont,tlLabelFontSize:colorObj.tllabelfontsize,tlLabelFontColor:colorObj.tllabelfontcolor,trLabelFont:colorObj.trlabelfont,trLabelFontSize:colorObj.trlabelfontsize,trLabelFontColor:colorObj.trlabelfontcolor,blLabelFont:colorObj.bllabelfont,blLabelFontSize:colorObj.bllabelfontsize,blLabelFontColor:colorObj.bllabelfontcolor,brLabelFont:colorObj.brlabelfont,brLabelFontSize:colorObj.brlabelfontsize,brLabelFontColor:colorObj.brlabelfontcolor}}if(i===colorArr.length-1&&maxContainingRange){return maxContainingRange}if(updatedColorObj){updatedColorObj.tlLabelFont=colorObj.tllabelfont;updatedColorObj.tlLabelFontSize=colorObj.tllabelfontsize;updatedColorObj.tlLabelFontColor=colorObj.tllabelfontcolor;updatedColorObj.trLabelFont=colorObj.trlabelfont;updatedColorObj.trLabelFontSize=colorObj.trlabelfontsize;updatedColorObj.trLabelFontColor=colorObj.trlabelfontcolor;updatedColorObj.blLabelFont=colorObj.bllabelfont;updatedColorObj.blLabelFontSize=colorObj.bllabelfontsize;updatedColorObj.blLabelFontColor=colorObj.bllabelfontcolor;updatedColorObj.brLabelFont=colorObj.brlabelfont;updatedColorObj.brLabelFontSize=colorObj.brlabelfontsize;updatedColorObj.brLabelFontColor=colorObj.brlabelfontcolor;return updatedColorObj}i+=1;colorObj=colorArr[i]}if(!colorArr.length){return{outOfRange:true}}};_proto.getColorRangeArr=function getColorRangeArr(_minValue,_maxValue){var temp,i,l,minColorObj,lastMaxValue,maxColorObj,returnArr=[],colorObj,lastColorObj,minValue=_minValue,maxValue=_maxValue;if(!this.defaultAsigned){if(minValue>maxValue){temp=minValue;minValue=maxValue;maxValue=temp}if(minValue<maxValue){minColorObj=this.getColorObj(minValue);maxColorObj=this.getColorObj(maxValue);if(minColorObj&&maxColorObj){lastMaxValue=minValue;i=minColorObj.seriesIndex;l=maxColorObj.seriesIndex;for(;i<=l;i+=1){colorObj=(0,_lib.extend2)({},this.colorArr[i]);if(colorObj.minvalue!==lastMaxValue){colorObj.minvalue=lastMaxValue}returnArr.push(colorObj);lastColorObj=colorObj;lastMaxValue=colorObj.maxvalue}lastColorObj&&(lastColorObj.maxvalue=maxValue)}}}return returnArr};return ColorBucket}(_componentInterface.ComponentInterface);var _default=ColorBucket;exports.default=_default;