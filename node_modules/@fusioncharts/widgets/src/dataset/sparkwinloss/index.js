"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=true;exports.default=void 0;var _inheritsLoose2=_interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _lib=require("@fusioncharts/core/src/lib");var _column=_interopRequireDefault(require("@fusioncharts/charts/src/dataset/column"));var _dependencyManager=require("@fusioncharts/core/src/dependency-manager");var _index=_interopRequireDefault(require("./index.animation"));var UNDEF,math=Math,mathMin=math.min,mathMax=math.max,GUTTER_PADDING=2,drawSparkValues=function drawSparkValues(){var dataSet=this,chart=dataSet.getFromEnv("chart"),chartConf=chart.config,style=chartConf.dataLabelStyle,valuePadding=chartConf.valuepadding+GUTTER_PADDING,dataLabelContainer=dataSet.getContainer("labelGroup"),sparkValues=chartConf.sparkValues||(chartConf.sparkValues={}),closeValue=dataSet.getGraphicalElement("closeValue"),animationManager=dataSet.getFromEnv("animationManager"),textAttr={class:"fusioncharts-label","text-anchor":_lib.POSITION_END,fill:style.color,"font-size":style.fontSize,"font-weight":style.fontWeight,"font-style":style.fontStyle,"font-family":style.fontFamily,visibility:"visible"},attr={x:0,y:0};chart.getChildContainer("datalabelsGroup").attr({"clip-rect":null});attr.y=chartConf.canvasHeight*.5+chartConf.canvasTop;textAttr["text-anchor"]=_lib.POSITION_START;attr.x=chartConf.canvasWidth+chartConf.canvasLeft+valuePadding;if(sparkValues.closeValue&&sparkValues.closeValue.label){dataSet.addGraphicalElement("closeValue",animationManager.setAnimation({el:closeValue||"text",attr:{text:sparkValues.closeValue.label,x:attr.x,y:attr.y,fill:sparkValues.closeValue.color||textAttr.fill,"text-anchor":_lib.POSITION_START,"line-height":style.lineHeight,"text-bound":[style.backgroundColor,style.borderColor,style.borderThickness,style.borderPadding,style.borderRadius,style.borderDash],visibility:"visible"},container:dataLabelContainer,component:dataSet,label:"text"}));attr.x+=sparkValues.closeValue.smartObj&&sparkValues.closeValue.smartObj.width+GUTTER_PADDING+valuePadding||0}dataSet.labelDrawn=true};(0,_dependencyManager.addDep)({name:"sparkwinlossAnimation",type:"animationRule",extension:_index.default});var SparkWinLossDataset=function(_ColumnDataset){(0,_inheritsLoose2.default)(SparkWinLossDataset,_ColumnDataset);function SparkWinLossDataset(){var _this;_this=_ColumnDataset.call(this)||this;_this.drawLabel=drawSparkValues;return _this}var _proto=SparkWinLossDataset.prototype;_proto.getType=function getType(){return"dataset"};_proto.getName=function getName(){return"sparkWinLoss"};_proto._setConfigure=function _setConfigure(newDataset,newIndex){var dataSet=this,chart=dataSet.getFromEnv("chart"),chartConfig=chart.config,conf=dataSet.config,JSONData=dataSet.config.JSONData,setDataArr=newDataset||JSONData.data,setDataLen=setDataArr&&setDataArr.length,xAxis=dataSet.getFromEnv("xAxis"),catLen=xAxis.getTicksLen(),len=newDataset&&newDataset.data.length||mathMin(catLen,setDataLen),chartAttr=chart.getFromEnv("dataSource").chart,colorM=dataSet.getFromEnv("color-manager"),index=dataSet.index||dataSet.positionIndex,showplotborder=chartConfig.showplotborder,plotColor=conf.plotColor=colorM.getPlotColor(index),plotFillColor=(0,_lib.pluck)(chartAttr.plotfillcolor,colorM.getColor("plotFillColor")),winColor=(0,_lib.pluck)(chartAttr.wincolor,colorM.getColor("winColor")),lossColor=(0,_lib.pluck)(chartAttr.losscolor,colorM.getColor("lossColor")),drawColor=(0,_lib.pluck)(chartAttr.drawcolor,colorM.getColor("drawColor")),scorelessColor=(0,_lib.pluck)(chartAttr.scorelesscolor,colorM.getColor("scorelessColor")),winHoverColor=chartAttr.winhovercolor,lossHoverColor=chartAttr.losshovercolor,drawHoverColor=chartAttr.drawhovercolor,scoreLessHoverColor=chartAttr.scorelesshovercolor,numWon=0,numLost=0,numDraw=0,tempPlotfillAngle,plotDashLen,plotDashGap,plotBorderThickness=chartConfig.plotborderthickness,isRoundEdges=chartConfig.isroundedges,showHoverEffect=chartConfig.plothovereffect,plotfillAngle=conf.plotfillangle,plotFillAlpha,plotFillRatio,plotBorderAlpha,plotBorderDashStyle,initailPlotBorderDashStyle=conf.plotBorderDashStyle,setData,setValue,dataObj,config,colorArr,hoverColor,hoverAlpha,hoverGradientColor,hoverRatio,hoverAngle,hoverBorderColor,hoverBorderAlpha,hoverBorderThickness,hoverBorderDashed,hoverBorderDashGap,hoverBorderDashLen,hoverDashStyle,hoverColorArr,dataStore=dataSet.components.data,isBar=chart.isBar,is3D=chart.is3D,setDataDashed,setDataPlotDashLen,setDataPlotDashGap,i,maxValue=conf.maxValue||-Infinity,minValue=conf.minValue||+Infinity,showPlotBorder,tempIndex;if(!dataStore){dataStore=dataSet.components.data=[]}_ColumnDataset.prototype._setConfigure.call(this);conf.plotgradientcolor=_lib.BLANKSTRING;showPlotBorder=conf.showPlotBorder=(0,_lib.pluckNumber)(chartAttr.showplotborder,conf.usePattern?1:0);conf.plotborderalpha=plotBorderAlpha=showPlotBorder?(0,_lib.pluck)(chartAttr.plotborderalpha,plotFillAlpha,_lib.HUNDREDSTRING):0;conf.showTooltip=0;chartConfig.showtooltip=0;for(i=0;i<len;i++){if(newDataset){setData=newDataset&&newDataset.data[i];if(newIndex!==UNDEF){tempIndex=newIndex+i;dataObj=dataStore[tempIndex]}else{tempIndex=dataStore.length-len+i;dataObj=dataStore[tempIndex]}}else{dataObj=dataStore[i];setData=setDataArr[i]}config=dataObj&&dataObj.config;if(!dataObj){dataObj=dataStore[i]={}}if(!dataObj.config){config=dataStore[i].config={}}switch((setData.value||"").toLowerCase()){case"w":plotColor=(0,_lib.pluck)(setData.color,winColor,plotFillColor);hoverColor=(0,_lib.pluck)(setData.hovercolor,winHoverColor,plotColor);config.setValue=setValue=1;numWon+=1;break;case"l":plotColor=(0,_lib.pluck)(setData.color,lossColor,plotFillColor);hoverColor=(0,_lib.pluck)(setData.hovercolor,lossHoverColor,plotColor);config.setValue=setValue=-1;numLost+=1;break;case"d":plotColor=(0,_lib.pluck)(setData.color,drawColor,plotFillColor);hoverColor=(0,_lib.pluck)(setData.hovercolor,drawHoverColor,plotColor);config.setValue=setValue=.1;numDraw+=1;break;default:config.setValue=setValue=null}if(Number(setData.scoreless)===1){plotColor=(0,_lib.pluck)(setData.color,scorelessColor,plotFillColor);hoverColor=(0,_lib.pluck)(setData.hovercolor,scoreLessHoverColor,setData.color,scorelessColor,hoverColor)}config.originalPlotColor=(0,_lib.hashify)(plotColor);config.toolText=false;config.setLink=(0,_lib.pluck)(setData.link);config.setDisplayValue=(0,_lib.parseUnsafeString)(setData.displayvalue);setDataDashed=(0,_lib.pluckNumber)(setData.dashed);setDataPlotDashLen=(0,_lib.pluckNumber)(setData.dashlen,plotDashLen);setDataPlotDashGap=plotDashGap=(0,_lib.pluckNumber)(setData.dashgap,conf.plotDashGap);if(setValue!==null){maxValue=mathMax(maxValue,setValue);minValue=mathMin(minValue,setValue)}config.plotBorderDashStyle=plotBorderDashStyle=setDataDashed===1?(0,_lib.getDashStyle)(setDataPlotDashLen,setDataPlotDashGap):setDataDashed===0?"none":initailPlotBorderDashStyle;plotFillAlpha=(0,_lib.pluck)(setData.alpha,conf.plotfillalpha);plotBorderAlpha=(0,_lib.pluck)(setData.alpha,conf.plotborderalpha,plotFillAlpha).toString();if(setValue<0&&!isRoundEdges){tempPlotfillAngle=conf.plotfillAngle;plotfillAngle=isBar?180-plotfillAngle:360-plotfillAngle}config.plotbordercolor=conf.usePattern&&!chartAttr.plotbordercolor?plotColor:conf.plotbordercolor;config.colorArr=colorArr=(0,_lib.getColumnColor)(plotColor+","+conf.plotgradientcolor,plotFillAlpha,plotFillRatio=conf.plotfillratio,plotfillAngle,isRoundEdges,config.plotbordercolor,plotBorderAlpha,isBar?1:0,!!is3D);config.label=(0,_lib.getValidValue)((0,_lib.parseUnsafeString)(xAxis.getLabel((0,_lib.pluckNumber)(tempIndex-len,i)).label));if(showHoverEffect!==0){hoverColor=(0,_lib.pluck)(setData.hovercolor,JSONData.hovercolor,chartAttr.plotfillhovercolor,chartAttr.columnhovercolor,plotColor);hoverAlpha=(0,_lib.pluck)(setData.hoveralpha,JSONData.hoveralpha,chartAttr.plotfillhoveralpha,chartAttr.columnhoveralpha,plotFillAlpha);hoverGradientColor=(0,_lib.pluck)(setData.hovergradientcolor,JSONData.hovergradientcolor,chartAttr.plothovergradientcolor,conf.plotgradientcolor);!hoverGradientColor&&(hoverGradientColor="");hoverRatio=(0,_lib.pluck)(setData.hoverratio,JSONData.hoverratio,chartAttr.plothoverratio,plotFillRatio);hoverAngle=(0,_lib.pluckNumber)(360-setData.hoverangle,360-JSONData.hoverangle,360-chartAttr.plothoverangle,plotfillAngle);hoverBorderColor=(0,_lib.pluck)(setData.borderhovercolor,JSONData.borderhovercolor,chartAttr.plotborderhovercolor,conf.plotbordercolor);hoverBorderAlpha=(0,_lib.pluck)(setData.borderhoveralpha,JSONData.borderhoveralpha,chartAttr.plotborderhoveralpha,plotBorderAlpha,plotFillAlpha);hoverBorderThickness=(0,_lib.pluckNumber)(setData.borderhoverthickness,JSONData.borderhoverthickness,chartAttr.plotborderhoverthickness,plotBorderThickness);hoverBorderDashed=(0,_lib.pluckNumber)(setData.borderhoverdashed,JSONData.borderhoverdashed,chartAttr.plotborderhoverdashed);hoverBorderDashGap=(0,_lib.pluckNumber)(setData.borderhoverdashgap,JSONData.borderhoverdashgap,chartAttr.plotborderhoverdashgap,plotDashLen);hoverBorderDashLen=(0,_lib.pluckNumber)(setData.borderhoverdashlen,JSONData.borderhoverdashlen,chartAttr.plotborderhoverdashlen,plotDashGap);hoverDashStyle=hoverBorderDashed?(0,_lib.getDashStyle)(hoverBorderDashLen,hoverBorderDashGap):plotBorderDashStyle;config.hoverColor=hoverColor;if(showHoverEffect===1&&hoverColor===plotColor){hoverColor=(0,_lib.getLightColor)(hoverColor,70)}hoverColorArr=(0,_lib.getColumnColor)(hoverColor+","+hoverGradientColor,hoverAlpha,hoverRatio,hoverAngle,isRoundEdges,hoverBorderColor,hoverBorderAlpha.toString(),isBar?1:0,!!is3D);config.setRolloutAttr={fill:!is3D?(0,_lib.toRaphaelColor)(colorArr[0]):[(0,_lib.toRaphaelColor)(colorArr[0]),!chartConfig.use3dlighting],stroke:showplotborder&&(0,_lib.toRaphaelColor)(colorArr[1]),"stroke-width":plotBorderThickness,"stroke-dasharray":plotBorderDashStyle};config.setRolloverAttr={fill:!is3D?(0,_lib.toRaphaelColor)(hoverColorArr[0]):[(0,_lib.toRaphaelColor)(hoverColorArr[0]),!chartConfig.use3dlighting],stroke:showplotborder&&(0,_lib.toRaphaelColor)(hoverColorArr[1]),"stroke-width":hoverBorderThickness,"stroke-dasharray":hoverDashStyle}}tempPlotfillAngle&&(plotfillAngle=tempPlotfillAngle);tempIndex++;config._x=i;config._y=setValue}conf.maxValue=1;conf.minValue=-1;if((0,_lib.pluckNumber)(chartAttr.showvalue,1)===1){chartConfig.sparkValues={closeValue:{}};chartConfig.sparkValues.closeValue.label=numWon+"-"+numLost+(numDraw>0?"-"+numDraw:_lib.BLANKSTRING)}else{chartConfig.sparkValues=UNDEF}};return SparkWinLossDataset}(_column.default);var _default=SparkWinLossDataset;exports.default=_default;