"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=true;exports.default=void 0;var _inheritsLoose2=_interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _lib=require("@fusioncharts/core/src/lib");var _dependencyManager=require("@fusioncharts/core/src/dependency-manager");var _column=_interopRequireDefault(require("@fusioncharts/charts/src/dataset/column"));var _index=_interopRequireDefault(require("./index.animation"));var UNDEF,math=Math,mathMin=math.min;(0,_dependencyManager.addDep)({name:"sparkcolumnAnimation",type:"animationRule",extension:_index.default});var SparkColumnDataset=function(_ColumnDataset){(0,_inheritsLoose2.default)(SparkColumnDataset,_ColumnDataset);function SparkColumnDataset(){return _ColumnDataset.apply(this,arguments)||this}var _proto=SparkColumnDataset.prototype;_proto.getType=function getType(){return"dataset"};_proto.getName=function getName(){return"sparkColumn"};_proto.parseAttributes=function parseAttributes(){_ColumnDataset.prototype.parseAttributes.call(this);var dataSet=this,chart=dataSet.getFromEnv("chart"),conf=dataSet.config,JSONData=dataSet.config.JSONData,chartAttr=chart.getFromEnv("chart-attrib");conf.showValues=(0,_lib.pluckNumber)(JSONData.showvalues,chartAttr.showvalues,0)};_proto._setConfigure=function _setConfigure(newDataset){var dataSet=this,chart=dataSet.getFromEnv("chart"),chartAttr=chart.getFromEnv("dataSource").chart,conf=dataSet.config,chartConfig=chart.config,JSONData=dataSet.config.JSONData,setDataArr=newDataset||JSONData.data,setDataLen=setDataArr&&setDataArr.length,xAxis=dataSet.getFromEnv("xAxis"),catLen=xAxis.getTicksLen(),len=newDataset&&newDataset.data.length||mathMin(catLen,setDataLen),showHoverEffect=chartConfig.plothovereffect,colorM=dataSet.getFromEnv("color-manager"),isRoundEdges=chartConfig.useroundedges,plotFillColor,color,borderColor,rawHoverColor,hoverColor,hoverAlpha,hoverGradientColor,hoverBorderColor,hoverBorderAlpha,borderThickness,config,plotFillAlpha,plotBorderAlpha,plotBorderColor,highColor,lowColor,highBorderColor,lowBorderColor,highDisplayValue,lowDisplayValue,macroIndices,parserConfig,setData,dataObj,colorArr,hoverColorArr,i,cLen,cInd,dataStore,maxValue,minValue;conf.plotgradientcolor=_lib.BLANKSTRING;conf.showvalues=(0,_lib.pluckNumber)(JSONData.showvalues,chartAttr.showvalues,0);conf.showShadow=(0,_lib.pluckNumber)(chartAttr.showshadow,0);_ColumnDataset.prototype._setConfigure.call(this);dataStore=dataSet.components.data;maxValue=conf.maxValue;minValue=conf.minValue;plotFillColor=(0,_lib.pluck)(chartAttr.plotfillcolor,colorM.getColor("plotFillColor"));plotFillAlpha=(0,_lib.pluck)(chartAttr.plotfillalpha,_lib.HUNDREDSTRING);plotBorderAlpha=(0,_lib.pluck)(chartAttr.plotborderalpha,_lib.HUNDREDSTRING);plotBorderColor=(0,_lib.pluck)(chartAttr.plotbordercolor,plotFillColor);highColor=(0,_lib.pluck)(chartAttr.highcolor,"000000");lowColor=(0,_lib.pluck)(chartAttr.lowcolor,"000000");highBorderColor=(0,_lib.pluck)(chartAttr.highbordercolor,chartAttr.plotbordercolor,highColor);lowBorderColor=(0,_lib.pluck)(chartAttr.lowbordercolor,chartAttr.plotbordercolor,lowColor);for(i=0;i<len;i++){setData=setDataArr[i];dataObj=dataStore[i];config=dataObj.config;colorArr=null;color=plotFillColor;borderColor=plotBorderColor;if(config.setValue===maxValue){color=highColor;borderColor=highBorderColor;highDisplayValue=config.displayValue}if(dataObj.config.setValue===minValue){color=lowColor;borderColor=lowBorderColor;lowDisplayValue=config.displayValue}config.originalPlotColor=(0,_lib.hashify)(color);config.plotbordercolor=borderColor;config.colorArr=colorArr=(0,_lib.getColumnColor)(color+_lib.COMMASTRING+conf.plotgradientcolor,plotFillAlpha,"0","90",isRoundEdges,borderColor,plotBorderAlpha,0,0);if(showHoverEffect!==0&&colorArr){hoverColor=hoverAlpha=UNDEF;if(config.setValue===maxValue){hoverColor=chartAttr.highhovercolor;hoverAlpha=chartAttr.highhoveralpha}if(dataObj.config.setValue===minValue){hoverColor=chartAttr.lowhovercolor;hoverAlpha=chartAttr.lowhoveralpha}hoverColor=rawHoverColor=(0,_lib.pluck)(setData.hovercolor,JSONData.hovercolor,hoverColor,chartAttr.plotfillhovercolor,chartAttr.columnhovercolor,colorArr[0].FCcolor.color);hoverColor=hoverColor.split(/\s{0,},\s{0,}/);cLen=hoverColor.length;for(cInd=0;cInd<cLen;cInd++){hoverColor[cInd]=(0,_lib.getLightColor)(hoverColor[cInd],70)}hoverColor=hoverColor.join(",");hoverAlpha=(0,_lib.pluck)(setData.hoveralpha,JSONData.hoveralpha,hoverAlpha,chartAttr.plotfillhoveralpha,chartAttr.columnhoveralpha,plotFillAlpha);config.hoverColor=rawHoverColor;config.hoverAlpha=hoverAlpha;hoverGradientColor=(0,_lib.pluck)(setData.hovergradientcolor,JSONData.hovergradientcolor,chartAttr.plothovergradientcolor,conf.plotgradientcolor);!hoverGradientColor&&(hoverGradientColor=_lib.BLANKSTRING);hoverBorderColor=(0,_lib.pluck)(setData.borderhovercolor,JSONData.borderhovercolor,chartAttr.plotborderhovercolor,conf.plotbordercolor);hoverBorderAlpha=(0,_lib.pluck)(setData.borderhoveralpha,JSONData.borderhoveralpha,chartAttr.plotborderhoveralpha,chartAttr.plotfillhoveralpha,plotBorderAlpha,plotFillAlpha);if(showHoverEffect===1&&hoverColor===colorArr[0].FCcolor.color){hoverColor=(0,_lib.getLightColor)(hoverColor,70)}hoverColorArr=(0,_lib.getColumnColor)(hoverColor+_lib.COMMASTRING+hoverGradientColor,hoverAlpha,"0","90",isRoundEdges,hoverBorderColor,hoverBorderAlpha.toString(),0,0);config.setRolloutAttr={fill:(0,_lib.toRaphaelColor)(colorArr[0]),stroke:borderThickness&&(0,_lib.toRaphaelColor)(colorArr[1]),"stroke-width":borderThickness};config.setRolloverAttr={fill:(0,_lib.toRaphaelColor)(hoverColorArr[0]),stroke:borderThickness&&(0,_lib.toRaphaelColor)(hoverColorArr[1]),"stroke-width":borderThickness}}config._x=i;config._y=config.setValue}for(i=0;i<len;i++){var dataObject=dataStore[i],configuration=dataObject.config;if(configuration.setTooltext!==UNDEF){macroIndices=[56,57,60,61];parserConfig={highValue:highDisplayValue,highDataValue:highDisplayValue,lowValue:lowDisplayValue,lowDataValue:lowDisplayValue};configuration.toolText=(0,_lib.parseTooltext)(configuration.setTooltext,macroIndices,parserConfig,setData,chartAttr,JSONData);configuration.finalTooltext=configuration.setTooltext=configuration.toolText}}};return SparkColumnDataset}(_column.default);var _default=SparkColumnDataset;exports.default=_default;