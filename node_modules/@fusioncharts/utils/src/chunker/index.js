"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=true;exports.default=void 0;var _chain=_interopRequireDefault(require("ramda/es/chain"));var _mergeDeepRight=_interopRequireDefault(require("ramda/es/mergeDeepRight"));var _extent6=_interopRequireDefault(require("../array/extent"));var _safeMax=_interopRequireDefault(require("../array/safe-max"));var _safeMin=_interopRequireDefault(require("../array/safe-min"));var _constant=_interopRequireDefault(require("../scale-utils/constant"));var _pair=_interopRequireDefault(require("../scale-utils/array/pair"));var _areaGenerator=_interopRequireDefault(require("../shape-generators/area-generator"));var _lineGenerator=_interopRequireDefault(require("../shape-generators/line-generator"));var BLANK="",isDefinedChunk=function isDefinedChunk(_ref){var chunkName=_ref[0];return chunkName!=="undef"},extractClipRects=(0,_chain.default)((function(_ref2){var name=_ref2[0],clipRects=_ref2[1].clipRects;return clipRects})),byX=function byX(a,b){return a.x-b.x},clipRectBetween=function clipRectBetween(_ref3){var l=_ref3[0],r=_ref3[1];return{x:l.x+l.width,y:(0,_safeMin.default)([l.y,r.y,l.y+l.height,r.y+r.height]),width:r.x-(l.x+l.width),height:(0,_safeMax.default)([l.y,r.y,l.y+l.height,r.y+r.height])-(0,_safeMin.default)([l.y,r.y,l.y+l.height,r.y+r.height])}},validRects=function validRects(rect){return!(rect.width<1||rect.height<1)},removeInvalidClipRects=function removeInvalidClipRects(_ref4){var k=_ref4[0],v=_ref4[1];return[k,Object.assign(v,{clipRects:v.clipRects.filter(validRects)})]},DEFAULT_CHUNK_DECIDER=(0,_constant.default)("def"),CHUNK_RESOLVER=function CHUNK_RESOLVER(chunkNameLeft,chunkNameRight,chunkNames){return chunkNames.indexOf(chunkNameLeft)>chunkNames.indexOf(chunkNameRight)?chunkNameLeft:chunkNameRight},DEFAULT_CHUNKS={def:{},undef:{}};var Chunker=function(){function Chunker(Generator){if(Generator===void 0){Generator=_areaGenerator.default}this.generator=new Generator;this.defined=(0,_constant.default)(true);this.chunkDecider=DEFAULT_CHUNK_DECIDER;this.chunks=DEFAULT_CHUNKS;this.connectUndefineds=false}var _proto=Chunker.prototype;_proto.generate=function generate(data){var _this=this;var chunks=this._getChunks(),definedChunks=Object.entries(chunks).filter(isDefinedChunk),defined=this.getDefined(),filteredData=data.filter(defined),connectUndefineds=this.getConnectUndefineds(),definedSegments=this._computeDefinedSegments(connectUndefineds?data:filteredData),x=this.getXAccessor(),y=this.getYAccessor(),yBase=this.getYBaseAccessor(),clipGenerator=function clipGenerator(segment,_ref5){var _ref5$clipAdjustment=_ref5.clipAdjustment,clipAdjustment=_ref5$clipAdjustment===void 0?0:_ref5$clipAdjustment;var _extent=(0,_extent6.default)(segment,y),yMin=_extent[0],yMax=_extent[1],_extent2=(0,_extent6.default)(segment,x),xMin=_extent2[0],xMax=_extent2[1],_extent3=(0,_extent6.default)(segment,yBase),yBaseMin=_extent3[0],yBaseMax=_extent3[1],_extent4=(0,_extent6.default)([xMin,xMax]),clipX1=_extent4[0],clipX2=_extent4[1],_extent5=(0,_extent6.default)([yMin,yMax,yBaseMin,yBaseMax]),clipY1=_extent5[0],clipY2=_extent5[1],clipY=clipY1-clipAdjustment;return{x:clipX1,y:clipY,width:Math.abs(clipX2-clipX1),height:Math.abs(clipY2+clipAdjustment-clipY)}};var path=BLANK,definedChunkSegments=[],undefinedChunkSegements=[];if(connectUndefineds){path=this.generator.generate(filteredData)}else{path=this.generator.setDefined(defined).generate(data)}definedChunkSegments=definedChunks.map((function(_ref6){var chunkName=_ref6[0],chunkDefinition=_ref6[1];return[chunkName,{path:path,clipRects:_this._computeSegmentChunks(chunkName,definedSegments).map((function(segment){return clipGenerator(segment,chunkDefinition)}))}]}));undefinedChunkSegements=connectUndefineds?(0,_pair.default)(extractClipRects(definedChunkSegments).sort(byX)).map(clipRectBetween).filter(validRects):[];return Object.fromEntries(definedChunkSegments.map(removeInvalidClipRects).concat([["undef",{path:connectUndefineds&&undefinedChunkSegements.length>0?path:"",clipRects:undefinedChunkSegements}]]))};_proto.setXAccessor=function setXAccessor(accessor){this.generator.setXAccessor(accessor);return this};_proto.getXAccessor=function getXAccessor(){return this.generator.getXAccessor()};_proto.setYAccessor=function setYAccessor(accessor){this.generator.setYAccessor(accessor);return this};_proto.getYAccessor=function getYAccessor(){return this.generator.getYAccessor()};_proto.setYTopAccessor=function setYTopAccessor(accessor){this.generator.setYTopAccessor?this.generator.setYTopAccessor(accessor):this.generator.setYAccessor(accessor);return this};_proto.getYTopAccessor=function getYTopAccessor(){return this.generator.getYTopAccessor?this.generator.getYTopAccessor():this.generator.getYAccessor()};_proto.setYBaseAccessor=function setYBaseAccessor(accessor){this.generator.setYBaseAccessor?this.generator.setYBaseAccessor(accessor):this.generator.setYAccessor(accessor);return this};_proto.getYBaseAccessor=function getYBaseAccessor(){return this.generator.getYBaseAccessor?this.generator.getYBaseAccessor():this.generator.getYAccessor()};_proto.setDefined=function setDefined(defined){if(defined===void 0){defined=(0,_constant.default)(true)}this.defined=typeof defined==="function"?defined:(0,_constant.default)(!!defined);return this};_proto.getDefined=function getDefined(){return this.defined};_proto.setCurve=function setCurve(Curve){this.generator.setCurve(Curve);return this};_proto.getCurve=function getCurve(){return this.generator.getCurve()};_proto.getLineChunkerYTop=function getLineChunkerYTop(){return this._areaLineChunker().setXAccessor(this.getXAccessor()).setYAccessor(this.getYTopAccessor())};_proto.getLineChunkerYBase=function getLineChunkerYBase(){return this._areaLineChunker().setXAccessor(this.getXAccessor()).setYAccessor(this.getYBaseAccessor())};_proto.setChunkDecider=function setChunkDecider(decider){if(decider===void 0){decider=DEFAULT_CHUNK_DECIDER}this.chunkDecider=decider;return this};_proto.getChunkDecider=function getChunkDecider(){return this.chunkDecider};_proto.setChunks=function setChunks(chunks){if(chunks===void 0){chunks=DEFAULT_CHUNKS}this._userChunks=Object.assign({},chunks);this.chunks=(0,_mergeDeepRight.default)(chunks,DEFAULT_CHUNKS);return this};_proto.getChunks=function getChunks(){return this._userChunks||this.chunks};_proto._getChunks=function _getChunks(){return this.chunks};_proto.setConnectUndefineds=function setConnectUndefineds(connectUndefineds){if(connectUndefineds===void 0){connectUndefineds=false}this.connectUndefineds=connectUndefineds;return this};_proto.getConnectUndefineds=function getConnectUndefineds(){return this.connectUndefineds};_proto._areaLineChunker=function _areaLineChunker(){return new Chunker(_lineGenerator.default).setChunkDecider(this.getChunkDecider()).setChunks(this.getChunks()).setConnectUndefineds(this.getConnectUndefineds()).setCurve(this.getCurve()).setDefined(this.getDefined())};_proto._computeDefinedSegments=function _computeDefinedSegments(data){var _this2=this;var startNewSegment=true;return data.reduce((function(acc,d){if(!_this2.defined(d)){startNewSegment=true;return acc}if(startNewSegment){acc.push([d]);startNewSegment=false}else{var lastSegment=acc[acc.length-1];lastSegment.push(d)}return acc}),[])};_proto._computeSegmentChunks=function _computeSegmentChunks(chunkName,segments){var _this3=this;var chunkNames=Object.keys(this.chunks);return segments.reduce((function(segmentChunks,segment){var startNewSegment=true;var chunks=segment.reduce((function(acc,d,i){var dataChunkName=_this3.getChunkDecider()(d),dataPrev=segment[i-1],dataNext=segment[i+1];if(dataChunkName===chunkName){if(startNewSegment){acc.push([d]);startNewSegment=false}else{acc[acc.length-1].push(d)}}else{var added=false;if(dataPrev!=null){var segmentChunkName=CHUNK_RESOLVER(_this3.getChunkDecider()(dataPrev),dataChunkName,chunkNames);if(segmentChunkName===chunkName){if(startNewSegment){acc.push([d]);startNewSegment=false}else{acc[acc.length-1].push(d)}added=true;startNewSegment=false}}if(!added&&dataNext!=null){var nextSegmentChunkName=CHUNK_RESOLVER(dataChunkName,_this3.getChunkDecider()(dataNext),chunkNames);if(nextSegmentChunkName===chunkName){acc.push([d]);added=true;startNewSegment=false}else{startNewSegment=true}}else if(!added){startNewSegment=true}}return acc}),[]);if(chunks&&chunks.length){return segmentChunks.concat(chunks)}return segmentChunks}),[])};return Chunker}();var _default=Chunker;exports.default=_default;