"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _log=_interopRequireDefault(require("./log"));var _value=_interopRequireDefault(require("../scale-utils/interpolators/value"));var round=function round(x){return Math.round(x*1e12)/1e12};it("new ScaleLog() has the expected defaults",(function(){var s=new _log.default;expect(s.getDomain()).toEqual([1,10]);expect(s.getRange()).toEqual([0,1]);expect(s.getClamp()).toBeFalsy();expect(s.getBase()).toBe(10);expect(s.getInterpolate()).toEqual(_value.default);expect(s.getInterpolate()(3,5)(.5)).toBe(4);expect(s.getRangeValue(5)).toBeCloseTo(.69897,6);expect(s.getDomainValue(.69897)).toBeCloseTo(5,6);expect(s.getRangeValue(3.162278)).toBeCloseTo(.5,6);expect(s.getDomainValue(.5)).toBeCloseTo(3.162278,6)}));describe("new ScaleLog().setDomain",(function(){it("coerces values to numbers",(function(){var s=(new _log.default).setDomain([new Date(1990,0,1),new Date(1991,0,1)]);expect(typeof s.getDomain()[0]).toBe("number");expect(typeof s.getDomain()[1]).toBe("number");expect(s.getRangeValue(new Date(1989,9,20))).toBeCloseTo(-.2059871,6);expect(s.getRangeValue(new Date(1990,0,1))).toBeCloseTo(0,6);expect(s.getRangeValue(new Date(1990,2,15))).toBeCloseTo(.2039385,6);expect(s.getRangeValue(new Date(1990,4,27))).toBeCloseTo(.4058695,6);expect(s.getRangeValue(new Date(1991,0,1))).toBeCloseTo(1,6);expect(s.getRangeValue(new Date(1991,2,15))).toBeCloseTo(1.1942797,6);s.setDomain(["1","10"]);expect(typeof s.getDomain()[0]).toBe("number");expect(typeof s.getDomain()[1]).toBe("number");expect(s.getRangeValue(5)).toBeCloseTo(.69897,6);s.setDomain([new Number(1),new Number(10)]);expect(typeof s.getDomain()[0]).toBe("number");expect(typeof s.getDomain()[1]).toBe("number");expect(s.getRangeValue(5)).toBeCloseTo(.69897,6)}));it("can take negative values",(function(){var s=(new _log.default).setDomain([-100,-1]);expect(s.getRangeValue(-50)).toBeCloseTo(.150515,6)}));it("preserves specified domain exactly, with no floating point error",(function(){var s=(new _log.default).setDomain([.1,1e3]);expect(s.getDomain()).toEqual([.1,1e3])}))}));describe("new ScaleLog().setRange()",(function(){it("does not coerce values to numbers",(function(){var s=(new _log.default).setRange(["0","2"]);expect(typeof s.getRange()[0]).toBe("string");expect(typeof s.getRange()[1]).toBe("string")}))}));describe("new ScaleLog().setClamp(true)",(function(){it("clamps to the domain",(function(){var s=(new _log.default).setClamp(true);expect(s.getRangeValue(-1)).toBeCloseTo(0,6);expect(s.getRangeValue(5)).toBeCloseTo(.69897,6);expect(s.getRangeValue(15)).toBeCloseTo(1,6);s.setDomain([10,1]);expect(s.getRangeValue(-1)).toBeCloseTo(1,6);expect(s.getRangeValue(5)).toBeCloseTo(.30103,6);expect(s.getRangeValue(15)).toBeCloseTo(0,6)}));it("clamps to the range",(function(){var s=(new _log.default).setClamp(true);expect(s.getDomainValue(-.1)).toBeCloseTo(1,6);expect(s.getDomainValue(.69897)).toBeCloseTo(5,6);expect(s.getDomainValue(1.5)).toBeCloseTo(10,6);s.setDomain([10,1]);expect(s.getDomainValue(-.1)).toBeCloseTo(10,6);expect(s.getDomainValue(.30103)).toBeCloseTo(5,6);expect(s.getDomainValue(1.5)).toBeCloseTo(1,6)}))}));describe("new ScaleLog().getRangeValue(x)",(function(){it("maps a number x to a number y",(function(){var s=(new _log.default).setDomain([1,2]);expect(s.getRangeValue(.5)).toBeCloseTo(-1,6);expect(s.getRangeValue(1)).toBeCloseTo(0,6);expect(s.getRangeValue(1.5)).toBeCloseTo(.5849625,6);expect(s.getRangeValue(2)).toBeCloseTo(1,6);expect(s.getRangeValue(2.5)).toBeCloseTo(1.3219281,6)}))}));describe("new ScaleLog().getDomainValue(y) maps a number y to a number ",(function(){it("maps a number y to a number x",(function(){var s=(new _log.default).setDomain([1,2]);expect(s.getDomainValue(-1)).toBeCloseTo(.5,6);expect(s.getDomainValue(0)).toBeCloseTo(1,6);expect(s.getDomainValue(.5849625)).toBeCloseTo(1.5,6);expect(s.getDomainValue(1)).toBeCloseTo(2,6);expect(s.getDomainValue(1.3219281)).toBeCloseTo(2.5,6)}));it("coerces y to a number",(function(){var s=(new _log.default).setRange(["0","2"]);expect(s.getDomainValue("1")).toBeCloseTo(3.1622777,6);s.setRange([new Date(1990,0,1),new Date(1991,0,1)]);expect(s.getDomainValue(new Date(1990,6,2,13))).toBeCloseTo(3.1631089,6);s.setRange(["#000","#fff"]);expect(Number.isNaN(s.getDomainValue("#999"))).toBeTruthy()}))}));it("new ScaleLog().setBase(b) sets the log base, changing the ticks",(function(){var s=(new _log.default).setDomain([1,32]);expect(s.setBase(2).ticks()).toEqual([1,2,4,8,16,32]);expect(s.setBase(Math.E).ticks().map(round)).toEqual([1,2.718281828459,7.389056098931,20.085536923188]);s.setDomain([.1,100])}));describe("new ScaleLog().nice()",(function(){it("nices the domain, extending it to powers of 10",(function(){var s=(new _log.default).setDomain([1.1,10.9]).nice();expect(s.getDomain()).toEqual([1,100]);s.setDomain([10.9,1.1]).nice();expect(s.getDomain()).toEqual([100,1]);s.setDomain([.7,11.001]).nice();expect(s.getDomain()).toEqual([.1,100]);s.setDomain([123.1,6.7]).nice();expect(s.getDomain()).toEqual([1e3,1]);s.setDomain([.01,.49]).nice();expect(s.getDomain()).toEqual([.01,1]);s.setDomain([1.5,50]).nice();expect(s.getDomain()).toEqual([1,100]);expect(s.getRangeValue(1)).toBeCloseTo(0,6);expect(s.getRangeValue(100)).toBeCloseTo(1,6)}));it("works on degenerate domains",(function(){var s=(new _log.default).setDomain([0,0]).nice();expect(s.getDomain()).toEqual([0,0]);s.setDomain([.5,.5]).nice();expect(s.getDomain()).toEqual([.1,1])}))}));describe("new ScaleLog().ticks()",(function(){it("generates the expected power-of-ten ticks for ascending domains",(function(){var s=new _log.default;expect(s.setDomain([.1,10]).ticks().map(round)).toEqual([.1,1,10]);expect(s.setDomain([.1,1]).ticks().map(round)).toEqual([.1,1])}));it("generates the expected power-of-ten ticks for descending domains",(function(){var s=new _log.default;expect(s.setDomain([1,.1]).ticks().map(round)).toEqual([1,.1])}));it("generates the expected power-of-ten ticks for small domains",(function(){var s=new _log.default;expect(s.setDomain([1,5]).ticks()).toEqual([1]);expect(s.setDomain([5,1]).ticks()).toEqual([1])}));it("generates log ticks",(function(){var s=new _log.default;expect(s.ticks().map(round)).toEqual([1,10]);s.setDomain([100,1]);expect(s.ticks().map(round)).toEqual([100,10,1]);s.setDomain([.49999,.006029505943610648]);expect(s.ticks().map(round)).toEqual([.1,.01]);s.setDomain([.95,105e6]);expect(s.ticks().map(round)).toEqual([1,10,100,1e3,1e4,1e5,1e6,1e7,1e8])}));it("filters powers-of-ten ticks for huge domains",(function(){var s=(new _log.default).setDomain([1e10,1]);expect(s.ticks().map(round)).toEqual([1e10,1e9,1e8,1e7,1e6,1e5,1e4,1e3,100,10,1]);s.setDomain([1e-29,.1]);expect(s.ticks()).toEqual([1e-29,1e-28,1e-27,1e-26,1e-25,1e-24,1e-23,1e-22,1e-21,1e-20,1e-19,1e-18,1e-17,1e-16,1e-15,1e-14,1e-13,1e-12,1e-11,1e-10,1e-9,1e-8,1e-7,1e-6,1e-5,1e-4,.001,.01,.1])}));it("generates ticks that cover the domain",(function(){var s=(new _log.default).setDomain([.01,1e4]);expect(s.ticks(20).map(round)).toEqual([.01,.1,1,10,100,1e3,1e4])}));it("generates ticks that cover the niced domain",(function(){var s=(new _log.default).setDomain([.0124123,1230.4]).nice();expect(s.ticks(20).map(round)).toEqual([.01,.1,1,10,100,1e3,1e4])}));it("returns an empty array when the domain is degenerate",(function(){var s=new _log.default;expect(s.setDomain([0,1]).ticks()).toEqual([]);expect(s.setDomain([1,0]).ticks()).toEqual([]);expect(s.setDomain([0,-1]).ticks()).toEqual([]);expect(s.setDomain([-1,0]).ticks()).toEqual([]);expect(s.setDomain([-1,1]).ticks()).toEqual([]);expect(s.setDomain([0,0]).ticks()).toEqual([])}))}));describe("new ScaleLog().copy()",(function(){it("isolates changes to the domain",(function(){var s=new _log.default,sCopy=s.copy();s.setDomain([10,100]);expect(sCopy.getDomain()).toEqual([1,10]);expect(s.getRangeValue(10)).toBeCloseTo(0,6);expect(sCopy.getRangeValue(1)).toBeCloseTo(0,6);sCopy.setDomain([100,1e3]);expect(s.getRangeValue(100)).toBeCloseTo(1,6);expect(sCopy.getRangeValue(100)).toBeCloseTo(0,6);expect(s.getDomain()).toEqual([10,100]);expect(sCopy.getDomain()).toEqual([100,1e3])}));it("isolates changes to the domain via nice",(function(){var s=(new _log.default).setDomain([1.5,50]),sCopy=s.copy().nice();expect(s.getDomain()).toEqual([1.5,50]);expect(s.getRangeValue(1.5)).toBeCloseTo(0,6);expect(s.getRangeValue(50)).toBeCloseTo(1,6);expect(s.getDomainValue(0)).toBeCloseTo(1.5,6);expect(s.getDomainValue(1)).toBeCloseTo(50,6);expect(sCopy.getDomain()).toEqual([1,100]);expect(sCopy.getRangeValue(1)).toBeCloseTo(0,6);expect(sCopy.getRangeValue(100)).toBeCloseTo(1,6);expect(sCopy.getDomainValue(0)).toBeCloseTo(1,6);expect(sCopy.getDomainValue(1)).toBeCloseTo(100,6)}));it("isolates changes to the range",(function(){var s=new _log.default,sCopy=s.copy();s.setRange([1,2]);expect(s.getDomainValue(1)).toBeCloseTo(1,6);expect(sCopy.getDomainValue(1)).toBeCloseTo(10,6);expect(sCopy.getRange()).toEqual([0,1]);sCopy.setRange([2,3]);expect(s.getDomainValue(2)).toBeCloseTo(10,6);expect(sCopy.getDomainValue(2)).toBeCloseTo(1,6);expect(s.getRange()).toEqual([1,2]);expect(sCopy.getRange()).toEqual([2,3])}));it("isolates changes to clamping",(function(){var s=(new _log.default).setClamp(true),sCopy=s.copy();s.setClamp(false);expect(s.getRangeValue(.5)).toBeCloseTo(-.30103,6);expect(sCopy.getRangeValue(.5)).toBeCloseTo(0,6);expect(sCopy.getClamp()).toBeTruthy();sCopy.setClamp(false);expect(s.getRangeValue(20)).toBeCloseTo(1.30103,6);expect(sCopy.getRangeValue(20)).toBeCloseTo(1.30103,6);expect(s.getClamp()).toBeFalsy()}))}));