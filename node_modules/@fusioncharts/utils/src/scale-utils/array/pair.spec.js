"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _pair=_interopRequireDefault(require("./pair"));describe("toPairs(array)",(function(){it("should return an empty array if input array has fewer than two elements",(function(){expect((0,_pair.default)([])).toEqual([]);expect((0,_pair.default)([1])).toEqual([])}));it("should return pairs of adjacent elements in the given array",(function(){var a={},b={},c={},d={};expect((0,_pair.default)([1,2])).toEqual([[1,2]]);expect((0,_pair.default)([1,2,3])).toEqual([[1,2],[2,3]]);expect((0,_pair.default)([a,b,c,d])).toEqual([[a,b],[b,c],[c,d]])}));it("should include null or undefined elements in pairs",(function(){expect((0,_pair.default)([1,null,2])).toEqual([[1,null],[null,2]]);expect((0,_pair.default)([1,2,undefined])).toEqual([[1,2],[2,undefined]])}))}));describe("toPairs(array, reducer)",(function(){it("should invoke the reducer function for each pair of adjacent elements",(function(){expect((0,_pair.default)([1,3,7],(function(a,b){return b-a}))).toEqual([2,4])}))}));