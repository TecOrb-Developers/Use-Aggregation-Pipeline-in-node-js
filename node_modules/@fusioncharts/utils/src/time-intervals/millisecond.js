"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=true;exports.millisecondObj=exports.default=void 0;var _timeIntervalMs=_interopRequireDefault(require("./time-interval-ms.js"));var _timeIntervalclip=require("./time-intervalclip");var millisecondObj={name:"millisecond",floor:function floor(a){return a},offset:function offset(d,s,clippedDates,timeUniverse){var isPositiveOffset=s>0,dateObj={date:new Date(Number(d))},cloneDate=new Date(Number(dateObj.date));return new Date(Number(isPositiveOffset?(0,_timeIntervalclip.clampDownDateWithinClip)(dateObj.date,new Date(Number(cloneDate.setTime(Number(cloneDate)+Number(s)))),clippedDates,timeUniverse):(0,_timeIntervalclip.clampUpDateWithinClip)(dateObj.date,new Date(Number(cloneDate.setTime(Number(cloneDate)+Number(s)))),clippedDates,timeUniverse)))},count:function count(s,e,clippedDates){var clipArray=(0,_timeIntervalclip.getValidDatesWithin)(clippedDates,s,e),clipDuration=0,clipDates=(0,_timeIntervalclip.getClampRangesAround)(clippedDates,e);clipArray=(0,_timeIntervalclip.getClipArray)(clipDates,clipArray);clipArray.forEach((function(date){clipDuration+=Number(date.to)-Number(date.from)}));return e-s-clipDuration}},millisecond=new _timeIntervalMs.default(millisecondObj);exports.millisecondObj=millisecondObj;var _default=millisecond;exports.default=_default;