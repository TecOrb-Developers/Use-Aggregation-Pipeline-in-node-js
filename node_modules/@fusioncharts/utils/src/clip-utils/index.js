"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=true;exports.segregateClips=segregateClips;exports.getUnclippedValue=getUnclippedValue;exports.getClipType=getClipType;var _timeInterval=_interopRequireDefault(require("../time-intervals/time-interval"));var _month=require("../time-intervals/month");var _year=require("../time-intervals/year");var REPEAT_RESOLVE_ITERATION=5,TIME_UNIT_LENGTH={millisecond:1,second:1e3,minute:60*1e3,hour:60*60*1e3,day:24*60*60*1e3,month:30*24*60*60*1e3,year:365*24*60*60*1e3},monthInterval=new _timeInterval.default(_month.monthObj),yearInterval=new _timeInterval.default(_year.yearObj);function getRepeatClippingMultiplier(value,clipObj,unitExpander){if(unitExpander===void 0){unitExpander=TIME_UNIT_LENGTH}var repeat=clipObj.repeat.multiplier*unitExpander[clipObj.repeat.unit.toLowerCase()],multiplier=Math.floor((value-clipObj.from)/repeat);if(+clipObj.repeat.duration<0){multiplier=Math.min(0,multiplier)}else{multiplier=Math.max(0,multiplier)}return[repeat,multiplier]}function getNearestClipRange(value,clipObj,unitExpander){if(unitExpander===void 0){unitExpander=TIME_UNIT_LENGTH}var timeUnit=clipObj.repeat.unit.toLowerCase(),nextFrom,nearestFrom,nearestTo,interval,rawMultiplier=clipObj.repeat.multiplier||1,_getRepeatClippingMul=getRepeatClippingMultiplier(value,clipObj,unitExpander),repeat=_getRepeatClippingMul[0],multiplier=_getRepeatClippingMul[1];if(timeUnit==="month"||timeUnit==="year"){multiplier=multiplier*rawMultiplier;interval=timeUnit==="year"?yearInterval:monthInterval;nearestFrom=+interval.offset(new Date(clipObj.from),multiplier);nearestTo=+interval.offset(new Date(clipObj.to),multiplier);if(multiplier>=0){if(+nearestFrom>value){while(+nearestFrom>value){nextFrom=interval.offset(nearestFrom,-1*rawMultiplier);if(nextFrom<=value){break}nearestFrom=nextFrom;nearestTo=interval.offset(nearestTo,-1*rawMultiplier)}}else{while(+nearestFrom<value){nextFrom=interval.offset(nearestFrom,rawMultiplier);if(nextFrom>value){break}nearestFrom=nextFrom;nearestTo=interval.offset(nearestTo,rawMultiplier)}}}else{if(+nearestFrom<value){nearestFrom=interval.offset(nearestFrom,-1*rawMultiplier);nearestTo=interval.offset(nearestTo,-1*rawMultiplier)}}return[+nearestFrom,+nearestTo]}return[+clipObj.from+repeat*multiplier,+clipObj.to+repeat*multiplier]}function clamp(value,clipObj,direction){if(clipObj===void 0){clipObj={}}if(direction===void 0){direction="up"}var nearestFrom=+clipObj.from,nearestTo=+clipObj.to;if(clipObj.repeat){var _getNearestClipRange=getNearestClipRange(value,clipObj);nearestFrom=_getNearestClipRange[0];nearestTo=_getNearestClipRange[1]}if(value>=nearestFrom&&value<nearestTo){return direction==="up"?nearestTo:nearestFrom-1}return value}function getUnclippedValue(value,repeatClips,singleClips,options){if(repeatClips===void 0){repeatClips=[]}if(singleClips===void 0){singleClips=[]}if(options===void 0){options={}}if(isNaN(+value))return value;var i,j,len,_options=options,upperLimit=_options.upperLimit,lowerLimit=_options.lowerLimit,clampDirection=_options.clampDirection,curValue=+value,maxModValue=curValue,modValue=curValue,lastCalculatedValue,convergeIteration=REPEAT_RESOLVE_ITERATION,maxIteration=singleClips.length||1;while(maxIteration>0||convergeIteration>0){for(i=0,len=repeatClips.length;i<len;i++){for(j=0;j<len;j++){modValue=clamp(curValue,repeatClips[j],clampDirection);if(modValue!==curValue){if(clampDirection==="down"){maxModValue=Math.min(maxModValue,modValue);if(maxModValue<=lowerLimit){return lowerLimit}}else{maxModValue=Math.max(maxModValue,modValue);if(maxModValue>=upperLimit){return upperLimit}}}}if(maxModValue===curValue)break;curValue=maxModValue}if(lastCalculatedValue===curValue){break}for(i=0,len=singleClips.length;i<len;i++){curValue=clamp(curValue,singleClips[i],clampDirection);if(curValue>=upperLimit){return upperLimit}else if(curValue<=lowerLimit){return lowerLimit}}for(i=0;i<len;i++){if(clampDirection==="down"){if(curValue<singleClips[i].from){maxIteration--}}else{if(curValue>=singleClips[i].to){maxIteration--}}}if(maxModValue===curValue){maxIteration=0}lastCalculatedValue=curValue;convergeIteration--}return curValue}function segregateClips(clipObjects){if(clipObjects===void 0){clipObjects=[]}var repeatClips=[],singleClips=[],clipObj,i,len=clipObjects.length;for(i=0;i<len;i++){clipObj=clipObjects[i];if(clipObj.repeat){repeatClips.push(clipObj)}else{singleClips.push(clipObj)}}return{repeatClips:repeatClips,singleClips:singleClips}}function getClipType(bin,repeatClips,singleClips){if(bin===void 0){bin=[]}if(repeatClips===void 0){repeatClips=[]}if(singleClips===void 0){singleClips=[]}var i,len,binStart=+bin[0],binEnd=+bin[1],clipObj,nearestClipRange,binStartMultiplier,binEndMultiplier;if(getUnclippedValue(binStart,repeatClips,singleClips,{upperLimit:binEnd})>=binEnd){return 2}for(i=0,len=singleClips.length;i<len;i++){clipObj=singleClips[i];if(binStart<=+clipObj.from&&+clipObj.from<binEnd||binStart<+clipObj.to&&+clipObj.to<binEnd){return 1}}for(i=0,len=repeatClips.length;i<len;i++){clipObj=repeatClips[i];binStartMultiplier=getRepeatClippingMultiplier(binStart,clipObj)[1];binEndMultiplier=getRepeatClippingMultiplier(binEnd-1,clipObj)[1];if(binEndMultiplier-binStartMultiplier>1){return 1}nearestClipRange=getNearestClipRange(binStart,clipObj);if(binStart<=nearestClipRange[0]&&nearestClipRange[0]<binEnd||binStart<nearestClipRange[1]&&nearestClipRange[1]<binEnd){return 1}nearestClipRange=getNearestClipRange(binEnd-1,clipObj);if(binStart<=nearestClipRange[0]&&nearestClipRange[0]<binEnd||binStart<nearestClipRange[1]&&nearestClipRange[1]<binEnd){return 1}}return 0}window.getUnclippedValue=getUnclippedValue;