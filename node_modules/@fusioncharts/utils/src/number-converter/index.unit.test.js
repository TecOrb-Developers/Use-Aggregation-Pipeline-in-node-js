"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _index=_interopRequireWildcard(require("./index"));var _enIN=_interopRequireDefault(require("./locales/en-IN"));function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap;var cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}describe("numberConverter",(function(){describe(".formatter(specifier)",(function(){it("should throw an error for invalid formats",(function(){expect((function(){return _index.default.formatter("foo")})).toThrowError(Error,"Invalid number format specifier: foo");expect((function(){return _index.default.formatter(".-2s")})).toThrowError(Error,"Invalid number format specifier: .-2s");expect((function(){return _index.default.formatter(".f")})).toThrowError(Error,"Invalid number format specifier: .f")}));describe(".format(number)",(function(){it("should be able to format a number into a string",(function(){expect(typeof _index.default.formatter("d").format(0)).toBe("string")}));it("should return a formatter which is able to return the normalized specifier",(function(){expect(_index.default.formatter("d")+"").toBe(" >-d")}));it("should clamp unreasonable precision values to reasonable values in decimal format",(function(){expect(_index.default.formatter(".30f").format(0)).toBe("0.00000000000000000000");expect(_index.default.formatter(".0g").format(1)).toBe("1")}));it("should be able to handle very small and very large values in SI format",(function(){expect(_index.default.formatter("s").format(Number.MIN_VALUE)).toBe("0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005y");expect(_index.default.formatter("s").format(Number.MAX_VALUE)).toBe("179769000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Y")}));it("should format 'n' and ',g' specifiers in an equivalent way",(function(){expect(_index.default.formatter("n").format(123456.78)).toBe("123,457");expect(_index.default.formatter(",g").format(123456.78)).toBe("123,457")}));it("should format '012' and '0=12' specifiers in an equivalent way",(function(){expect(_index.default.formatter("012").format(123.456)).toBe("00000123.456");expect(_index.default.formatter("0=12").format(123.456)).toBe("00000123.456")}))}))}));describe(".formatter([~][type])",(function(){describe(".format(number)",(function(){it("should trim insignificant zeros when specifier is '~r'",(function(){var f=_index.default.formatter("~r");expect(f.format(1)).toBe("1");expect(f.format(.1)).toBe("0.1");expect(f.format(.01)).toBe("0.01");expect(f.format(10.0001)).toBe("10.0001");expect(f.format(123.45)).toBe("123.45");expect(f.format(123.456)).toBe("123.456");expect(f.format(123.4567)).toBe("123.457");expect(f.format(9e-6)).toBe("0.000009");expect(f.format(9e-7)).toBe("0.0000009");expect(f.format(9e-8)).toBe("0.00000009");expect(f.format(.111119)).toBe("0.111119");expect(f.format(.1111119)).toBe("0.111112");expect(f.format(.11111119)).toBe("0.111111")}));it("should trim insignificant zeros when specifier is '~e'",(function(){var f=_index.default.formatter("~e");expect(f.format(0)).toBe("0e+0");expect(f.format(42)).toBe("4.2e+1");expect(f.format(42e6)).toBe("4.2e+7");expect(f.format(.042)).toBe("4.2e-2");expect(f.format(-4)).toBe("-4e+0");expect(f.format(-42)).toBe("-4.2e+1")}));it("should trim insignificant zeros when specifier is '~s'",(function(){var f=_index.default.formatter("~s");expect(f.format(0)).toBe("0");expect(f.format(1)).toBe("1");expect(f.format(10)).toBe("10");expect(f.format(100)).toBe("100");expect(f.format(999.5)).toBe("999.5");expect(f.format(999500)).toBe("999.5k");expect(f.format(1e3)).toBe("1k");expect(f.format(1400)).toBe("1.4k");expect(f.format(1500)).toBe("1.5k");expect(f.format(1500.5)).toBe("1.5005k");expect(f.format(1e-15)).toBe("1f");expect(f.format(1e-12)).toBe("1p");expect(f.format(1e-9)).toBe("1n");expect(f.format(1e-6)).toBe("1µ");expect(f.format(.001)).toBe("1m");expect(f.format(1)).toBe("1");expect(f.format(1e3)).toBe("1k");expect(f.format(1e6)).toBe("1M");expect(f.format(1e9)).toBe("1G");expect(f.format(1e12)).toBe("1T");expect(f.format(1e15)).toBe("1P")}));it("should trim insignificant zeros when specifier is '~%'",(function(){var f=_index.default.formatter("~%");expect(f.format(0)).toBe("0%");expect(f.format(.1)).toBe("10%");expect(f.format(.01)).toBe("1%");expect(f.format(.001)).toBe("0.1%");expect(f.format(1e-4)).toBe("0.01%")}));it("should respect commas when trimming",(function(){var f=_index.default.formatter(",~g");expect(f.format(1e4)).toBe("10,000");expect(f.format(10000.1)).toBe("10,000.1")}))}))}));describe(".formatter([type])",(function(){describe(".format(number)",(function(){describe("when [type] is %",(function(){it("should output a whole percentage when specifier is '%'",(function(){var f=_index.default.formatter(".0%");expect(f.format(0)).toBe("0%");expect(f.format(.042)).toBe("4%");expect(f.format(.42)).toBe("42%");expect(f.format(4.2)).toBe("420%");expect(f.format(-.042)).toBe("-4%");expect(f.format(-.42)).toBe("-42%");expect(f.format(-4.2)).toBe("-420%")}));it("should output a percentage with the given precision when specifier is '.%'",(function(){var f=_index.default.formatter(".1%");expect(f.format(.234)).toBe("23.4%");f=_index.default.formatter(".2%");expect(f.format(.234)).toBe("23.40%")}));it("should respect the suffix when specifier is '%'",(function(){expect(_index.default.formatter("020.0%").format(42)).toBe("0000000000000004200%");expect(_index.default.formatter("20.0%").format(42)).toBe("               4200%")}));it("should put the suffix adjacent to the number when specifier is '^%'",(function(){expect(_index.default.formatter("^21.0%").format(.42)).toBe("         42%         ");expect(_index.default.formatter("^21,.0%").format(422)).toBe("       42,200%       ");expect(_index.default.formatter("^21,.0%").format(-422)).toBe("      -42,200%       ")}))}));describe("when [type] is b",(function(){it("should output binary when the specifier is 'b'",(function(){expect(_index.default.formatter("b").format(10)).toBe("1010")}));it("binary with prefix when the specifier is '#b'",(function(){expect(_index.default.formatter("#b").format(10)).toBe("0b1010")}))}));describe("when [type] is c",(function(){it("should output unicode character when specifier is 'c'",(function(){expect(_index.default.formatter("c").format("☃")).toBe("☃");expect(_index.default.formatter("020c").format("☃")).toBe("0000000000000000000☃");expect(_index.default.formatter(" ^20c").format("☃")).toBe("         ☃          ");expect(_index.default.formatter("$c").format("☃")).toBe("$☃")}));it("should not localize a decimal point when specifier is 'c'",(function(){expect(new _index.NumberConverter({decimal:"/"}).formatter("c").format(".")).toBe(".")}))}));describe("when [type] is d",(function(){it("should be able to zero fill",(function(){var f=_index.default.formatter("08d");expect(f.format(0)).toBe("00000000");expect(f.format(42)).toBe("00000042");expect(f.format(42e6)).toBe("42000000");expect(f.format(42e7)).toBe("420000000");expect(f.format(-4)).toBe("-0000004");expect(f.format(-42)).toBe("-0000042");expect(f.format(-42e5)).toBe("-4200000");expect(f.format(-42e6)).toBe("-42000000")}));it("should be able to space fill",(function(){var f=_index.default.formatter("8d");expect(f.format(0)).toBe("       0");expect(f.format(42)).toBe("      42");expect(f.format(42e6)).toBe("42000000");expect(f.format(42e7)).toBe("420000000");expect(f.format(-4)).toBe("      -4");expect(f.format(-42)).toBe("     -42");expect(f.format(-42e5)).toBe("-4200000");expect(f.format(-42e6)).toBe("-42000000")}));it("should be able to underscore fill",(function(){var f=_index.default.formatter("_>8d");expect(f.format(0)).toBe("_______0");expect(f.format(42)).toBe("______42");expect(f.format(42e6)).toBe("42000000");expect(f.format(42e7)).toBe("420000000");expect(f.format(-4)).toBe("______-4");expect(f.format(-42)).toBe("_____-42");expect(f.format(-42e5)).toBe("-4200000");expect(f.format(-42e6)).toBe("-42000000")}));it("should be able to zero fill with sign and group",(function(){var f=_index.default.formatter("+08,d");expect(f.format(0)).toBe("+0,000,000");expect(f.format(42)).toBe("+0,000,042");expect(f.format(42e6)).toBe("+42,000,000");expect(f.format(42e7)).toBe("+420,000,000");expect(f.format(-4)).toBe("-0,000,004");expect(f.format(-42)).toBe("-0,000,042");expect(f.format(-42e5)).toBe("-4,200,000");expect(f.format(-42e6)).toBe("-42,000,000")}));it("should always uses zero precision",(function(){var f=_index.default.formatter(".2d");expect(f.format(0)).toBe("0");expect(f.format(42)).toBe("42");expect(f.format(-4.2)).toBe("-4")}));it("should round non-integers",(function(){var f=_index.default.formatter("d");expect(f.format(4.2)).toBe("4")}));it("should be able to group thousands",(function(){var f=_index.default.formatter(",d");expect(f.format(0)).toBe("0");expect(f.format(42)).toBe("42");expect(f.format(42e6)).toBe("42,000,000");expect(f.format(42e7)).toBe("420,000,000");expect(f.format(-4)).toBe("-4");expect(f.format(-42)).toBe("-42");expect(f.format(-42e5)).toBe("-4,200,000");expect(f.format(-42e6)).toBe("-42,000,000");expect(f.format(1e21)).toBe("1e+21")}));it("shouldbe able to group thousands and zero fill",(function(){expect(_index.default.formatter("01,d").format(0)).toBe("0");expect(_index.default.formatter("01,d").format(0)).toBe("0");expect(_index.default.formatter("02,d").format(0)).toBe("00");expect(_index.default.formatter("03,d").format(0)).toBe("000");expect(_index.default.formatter("04,d").format(0)).toBe("0,000");expect(_index.default.formatter("05,d").format(0)).toBe("0,000");expect(_index.default.formatter("06,d").format(0)).toBe("00,000");expect(_index.default.formatter("08,d").format(0)).toBe("0,000,000");expect(_index.default.formatter("013,d").format(0)).toBe("0,000,000,000");expect(_index.default.formatter("021,d").format(0)).toBe("0,000,000,000,000,000");expect(_index.default.formatter("013,d").format(-42e6)).toBe("-0,042,000,000");expect(_index.default.formatter("012,d").format(1e21)).toBe("0,000,001e+21");expect(_index.default.formatter("013,d").format(1e21)).toBe("0,000,001e+21");expect(_index.default.formatter("014,d").format(1e21)).toBe("00,000,001e+21");expect(_index.default.formatter("015,d").format(1e21)).toBe("000,000,001e+21")}));it("shouldbe able to group thousands and zero fill with overflow",(function(){expect(_index.default.formatter("01,d").format(1)).toBe("1");expect(_index.default.formatter("01,d").format(1)).toBe("1");expect(_index.default.formatter("02,d").format(12)).toBe("12");expect(_index.default.formatter("03,d").format(123)).toBe("123");expect(_index.default.formatter("05,d").format(12345)).toBe("12,345");expect(_index.default.formatter("08,d").format(12345678)).toBe("12,345,678");expect(_index.default.formatter("013,d").format(1234567890123)).toBe("1,234,567,890,123")}));it("should be able to group thousands and space fill",(function(){expect(_index.default.formatter("1,d").format(0)).toBe("0");expect(_index.default.formatter("1,d").format(0)).toBe("0");expect(_index.default.formatter("2,d").format(0)).toBe(" 0");expect(_index.default.formatter("3,d").format(0)).toBe("  0");expect(_index.default.formatter("5,d").format(0)).toBe("    0");expect(_index.default.formatter("8,d").format(0)).toBe("       0");expect(_index.default.formatter("13,d").format(0)).toBe("            0");expect(_index.default.formatter("21,d").format(0)).toBe("                    0")}));it("should be able to group thousands and space fill with overflow",(function(){expect(_index.default.formatter("1,d").format(1)).toBe("1");expect(_index.default.formatter("1,d").format(1)).toBe("1");expect(_index.default.formatter("2,d").format(12)).toBe("12");expect(_index.default.formatter("3,d").format(123)).toBe("123");expect(_index.default.formatter("5,d").format(12345)).toBe("12,345");expect(_index.default.formatter("8,d").format(12345678)).toBe("12,345,678");expect(_index.default.formatter("13,d").format(1234567890123)).toBe("1,234,567,890,123")}));it("should be able to align left",(function(){expect(_index.default.formatter("<1,d").format(0)).toBe("0");expect(_index.default.formatter("<1,d").format(0)).toBe("0");expect(_index.default.formatter("<2,d").format(0)).toBe("0 ");expect(_index.default.formatter("<3,d").format(0)).toBe("0  ");expect(_index.default.formatter("<5,d").format(0)).toBe("0    ");expect(_index.default.formatter("<8,d").format(0)).toBe("0       ");expect(_index.default.formatter("<13,d").format(0)).toBe("0            ");expect(_index.default.formatter("<21,d").format(0)).toBe("0                    ")}));it("should be able to align right",(function(){expect(_index.default.formatter(">1,d").format(0)).toBe("0");expect(_index.default.formatter(">1,d").format(0)).toBe("0");expect(_index.default.formatter(">2,d").format(0)).toBe(" 0");expect(_index.default.formatter(">3,d").format(0)).toBe("  0");expect(_index.default.formatter(">5,d").format(0)).toBe("    0");expect(_index.default.formatter(">8,d").format(0)).toBe("       0");expect(_index.default.formatter(">13,d").format(0)).toBe("            0");expect(_index.default.formatter(">21,d").format(0)).toBe("                    0");expect(_index.default.formatter(">21,d").format(1e3)).toBe("                1,000");expect(_index.default.formatter(">21,d").format(1e21)).toBe("                1e+21")}));it("should be able to align center",(function(){expect(_index.default.formatter("^1,d").format(0)).toBe("0");expect(_index.default.formatter("^1,d").format(0)).toBe("0");expect(_index.default.formatter("^2,d").format(0)).toBe("0 ");expect(_index.default.formatter("^3,d").format(0)).toBe(" 0 ");expect(_index.default.formatter("^5,d").format(0)).toBe("  0  ");expect(_index.default.formatter("^8,d").format(0)).toBe("   0    ");expect(_index.default.formatter("^13,d").format(0)).toBe("      0      ");expect(_index.default.formatter("^21,d").format(0)).toBe("          0          ");expect(_index.default.formatter("^21,d").format(1e3)).toBe("        1,000        ");expect(_index.default.formatter("^21,d").format(1e21)).toBe("        1e+21        ")}));it("should be able to add padding after the sign",(function(){expect(_index.default.formatter("=+1,d").format(0)).toBe("+0");expect(_index.default.formatter("=+1,d").format(0)).toBe("+0");expect(_index.default.formatter("=+2,d").format(0)).toBe("+0");expect(_index.default.formatter("=+3,d").format(0)).toBe("+ 0");expect(_index.default.formatter("=+5,d").format(0)).toBe("+   0");expect(_index.default.formatter("=+8,d").format(0)).toBe("+      0");expect(_index.default.formatter("=+13,d").format(0)).toBe("+           0");expect(_index.default.formatter("=+21,d").format(0)).toBe("+                   0");expect(_index.default.formatter("=+21,d").format(1e21)).toBe("+               1e+21")}));it("should be able to add padding after sign and currency",(function(){expect(_index.default.formatter("=+$1,d").format(0)).toBe("+$0");expect(_index.default.formatter("=+$1,d").format(0)).toBe("+$0");expect(_index.default.formatter("=+$2,d").format(0)).toBe("+$0");expect(_index.default.formatter("=+$3,d").format(0)).toBe("+$0");expect(_index.default.formatter("=+$5,d").format(0)).toBe("+$  0");expect(_index.default.formatter("=+$8,d").format(0)).toBe("+$     0");expect(_index.default.formatter("=+$13,d").format(0)).toBe("+$          0");expect(_index.default.formatter("=+$21,d").format(0)).toBe("+$                  0");expect(_index.default.formatter("=+$21,d").format(1e21)).toBe("+$              1e+21")}));it("should be able to use spaces to denote positive numbers",(function(){expect(_index.default.formatter(" 1,d").format(-1)).toBe("-1");expect(_index.default.formatter(" 1,d").format(0)).toBe(" 0");expect(_index.default.formatter(" 2,d").format(0)).toBe(" 0");expect(_index.default.formatter(" 3,d").format(0)).toBe("  0");expect(_index.default.formatter(" 5,d").format(0)).toBe("    0");expect(_index.default.formatter(" 8,d").format(0)).toBe("       0");expect(_index.default.formatter(" 13,d").format(0)).toBe("            0");expect(_index.default.formatter(" 21,d").format(0)).toBe("                    0");expect(_index.default.formatter(" 21,d").format(1e21)).toBe("                1e+21")}));it("should be able to use a sign explicitly only for negative numbers",(function(){expect(_index.default.formatter("-1,d").format(-1)).toBe("-1");expect(_index.default.formatter("-1,d").format(0)).toBe("0");expect(_index.default.formatter("-2,d").format(0)).toBe(" 0");expect(_index.default.formatter("-3,d").format(0)).toBe("  0");expect(_index.default.formatter("-5,d").format(0)).toBe("    0");expect(_index.default.formatter("-8,d").format(0)).toBe("       0");expect(_index.default.formatter("-13,d").format(0)).toBe("            0");expect(_index.default.formatter("-21,d").format(0)).toBe("                    0")}));it("should format negative zero as zero when specifier is 'd'",(function(){expect(_index.default.formatter("1d").format(-0)).toBe("0");expect(_index.default.formatter("1d").format(-1e-12)).toBe("0")}))}));describe("when [type] is e",(function(){it("should be able to output exponent notation",(function(){var f=_index.default.formatter("e");expect(f.format(0)).toBe("0.000000e+0");expect(f.format(42)).toBe("4.200000e+1");expect(f.format(42e6)).toBe("4.200000e+7");expect(f.format(42e7)).toBe("4.200000e+8");expect(f.format(-4)).toBe("-4.000000e+0");expect(f.format(-42)).toBe("-4.200000e+1");expect(f.format(-42e5)).toBe("-4.200000e+6");expect(f.format(-42e6)).toBe("-4.200000e+7");expect(_index.default.formatter(".0e").format(42)).toBe("4e+1");expect(_index.default.formatter(".3e").format(42)).toBe("4.200e+1")}));it("should be able to format negative zero as zero",(function(){expect(_index.default.formatter("1e").format(-0)).toBe("0.000000e+0");expect(_index.default.formatter("1e").format(-1e-12)).toBe("-1.000000e-12")}));it("should not not group Infinity",(function(){expect(_index.default.formatter(",e").format(Infinity)).toBe("Infinity")}))}));describe("when [type] is f",(function(){it("should be able to output fixed-point notation",(function(){expect(_index.default.formatter(".1f").format(.49)).toBe("0.5");expect(_index.default.formatter(".2f").format(.449)).toBe("0.45");expect(_index.default.formatter(".3f").format(.4449)).toBe("0.445");expect(_index.default.formatter(".5f").format(.444449)).toBe("0.44445");expect(_index.default.formatter(".1f").format(100)).toBe("100.0");expect(_index.default.formatter(".2f").format(100)).toBe("100.00");expect(_index.default.formatter(".3f").format(100)).toBe("100.000");expect(_index.default.formatter(".5f").format(100)).toBe("100.00000")}));it("should be able to output a currency with comma-grouping and sign",(function(){var f=_index.default.formatter("+$,.2f");expect(f.format(0)).toBe("+$0.00");expect(f.format(.429)).toBe("+$0.43");expect(f.format(-.429)).toBe("-$0.43");expect(f.format(-1)).toBe("-$1.00");expect(f.format(1e4)).toBe("+$10,000.00")}));it("should be able to group thousands, space fill, and round to significant digits",(function(){expect(_index.default.formatter("10,.1f").format(123456.49)).toBe(" 123,456.5");expect(_index.default.formatter("10,.2f").format(1234567.449)).toBe("1,234,567.45");expect(_index.default.formatter("10,.3f").format(12345678.4449)).toBe("12,345,678.445");expect(_index.default.formatter("10,.5f").format(123456789.444449)).toBe("123,456,789.44445");expect(_index.default.formatter("10,.1f").format(123456)).toBe(" 123,456.0");expect(_index.default.formatter("10,.2f").format(1234567)).toBe("1,234,567.00");expect(_index.default.formatter("10,.3f").format(12345678)).toBe("12,345,678.000");expect(_index.default.formatter("10,.5f").format(123456789)).toBe("123,456,789.00000")}));it("should be able to display integers in fixed-point notation",(function(){expect(_index.default.formatter("f").format(42)).toBe("42.000000")}));it("should be able to format negative zero as zero",(function(){expect(_index.default.formatter("f").format(-0)).toBe("0.000000");expect(_index.default.formatter("f").format(-1e-12)).toBe("0.000000")}));it("should be able to format negative infinity",(function(){expect(_index.default.formatter("f").format(-Infinity)).toBe("-Infinity")}));it("should not group Infinity",(function(){expect(_index.default.formatter(",f").format(Infinity)).toBe("Infinity")}))}));describe("when [type] is g",(function(){it("should be able to output general notation",(function(){expect(_index.default.formatter(".1g").format(.049)).toBe("0.05");expect(_index.default.formatter(".1g").format(.49)).toBe("0.5");expect(_index.default.formatter(".2g").format(.449)).toBe("0.45");expect(_index.default.formatter(".3g").format(.4449)).toBe("0.445");expect(_index.default.formatter(".5g").format(.444449)).toBe("0.44445");expect(_index.default.formatter(".1g").format(100)).toBe("1e+2");expect(_index.default.formatter(".2g").format(100)).toBe("1.0e+2");expect(_index.default.formatter(".3g").format(100)).toBe("100");expect(_index.default.formatter(".5g").format(100)).toBe("100.00");expect(_index.default.formatter(".5g").format(100.2)).toBe("100.20");expect(_index.default.formatter(".2g").format(.002)).toBe("0.0020")}));it("should be able to  group thousands with general notation",(function(){var f=_index.default.formatter(",.12g");expect(f.format(0)).toBe("0.00000000000");expect(f.format(42)).toBe("42.0000000000");expect(f.format(42e6)).toBe("42,000,000.0000");expect(f.format(42e7)).toBe("420,000,000.000");expect(f.format(-4)).toBe("-4.00000000000");expect(f.format(-42)).toBe("-42.0000000000");expect(f.format(-42e5)).toBe("-4,200,000.00000");expect(f.format(-42e6)).toBe("-42,000,000.0000")}))}));describe("when [type] is n",(function(){it("'n' should be equivalent to ',g'",(function(){var f=_index.default.formatter(".12n");expect(f.format(0)).toBe("0.00000000000");expect(f.format(42)).toBe("42.0000000000");expect(f.format(42e6)).toBe("42,000,000.0000");expect(f.format(42e7)).toBe("420,000,000.000");expect(f.format(-4)).toBe("-4.00000000000");expect(f.format(-42)).toBe("-42.0000000000");expect(f.format(-42e5)).toBe("-4,200,000.00000");expect(f.format(-42e6)).toBe("-42,000,000.0000");expect(f.format(.0042)).toBe("0.00420000000000");expect(f.format(.42)).toBe("0.420000000000");expect(f.format(1e21)).toBe("1.00000000000e+21")}));it("should use zero padding",(function(){expect(_index.default.formatter("01.0n").format(0)).toBe("0");expect(_index.default.formatter("02.0n").format(0)).toBe("00");expect(_index.default.formatter("03.0n").format(0)).toBe("000");expect(_index.default.formatter("05.0n").format(0)).toBe("0,000");expect(_index.default.formatter("08.0n").format(0)).toBe("0,000,000");expect(_index.default.formatter("013.0n").format(0)).toBe("0,000,000,000");expect(_index.default.formatter("021.0n").format(0)).toBe("0,000,000,000,000,000");expect(_index.default.formatter("013.8n").format(-42e6)).toBe("-0,042,000,000")}))}));describe("when [type] is '' (i.e. none)",(function(){it("the given precision should be used as significant precision and insignificant zeros should be trimmed",(function(){expect(_index.default.formatter(".1").format(4.9)).toBe("5");expect(_index.default.formatter(".1").format(.49)).toBe("0.5");expect(_index.default.formatter(".2").format(4.9)).toBe("4.9");expect(_index.default.formatter(".2").format(.49)).toBe("0.49");expect(_index.default.formatter(".2").format(.449)).toBe("0.45");expect(_index.default.formatter(".3").format(4.9)).toBe("4.9");expect(_index.default.formatter(".3").format(.49)).toBe("0.49");expect(_index.default.formatter(".3").format(.449)).toBe("0.449");expect(_index.default.formatter(".3").format(.4449)).toBe("0.445");expect(_index.default.formatter(".5").format(.444449)).toBe("0.44445")}));it("the given presision should not trim significant zeros",(function(){expect(_index.default.formatter(".5").format(10)).toBe("10");expect(_index.default.formatter(".5").format(100)).toBe("100");expect(_index.default.formatter(".5").format(1e3)).toBe("1000");expect(_index.default.formatter(".5").format(21010)).toBe("21010");expect(_index.default.formatter(".5").format(1.10001)).toBe("1.1");expect(_index.default.formatter(".5").format(1100010)).toBe("1.1e+6");expect(_index.default.formatter(".6").format(1.10001)).toBe("1.10001");expect(_index.default.formatter(".6").format(1100010)).toBe("1.10001e+6")}));it("the given precision should trims the decimal point if there are only insignificant zeros",(function(){expect(_index.default.formatter(".5").format(1.00001)).toBe("1");expect(_index.default.formatter(".5").format(1000010)).toBe("1e+6");expect(_index.default.formatter(".6").format(1.00001)).toBe("1.00001");expect(_index.default.formatter(".6").format(1000010)).toBe("1.00001e+6")}));it("should be able to output a currency",(function(){var f=_index.default.formatter("$");expect(f.format(0)).toBe("$0");expect(f.format(.042)).toBe("$0.042");expect(f.format(.42)).toBe("$0.42");expect(f.format(4.2)).toBe("$4.2");expect(f.format(-.042)).toBe("-$0.042");expect(f.format(-.42)).toBe("-$0.42");expect(f.format(-4.2)).toBe("-$4.2")}));it("should be able to output a currency with parentheses for negative values",(function(){var f=_index.default.formatter("($");expect(f.format(0)).toBe("$0");expect(f.format(.042)).toBe("$0.042");expect(f.format(.42)).toBe("$0.42");expect(f.format(4.2)).toBe("$4.2");expect(f.format(-.042)).toBe("($0.042)");expect(f.format(-.42)).toBe("($0.42)");expect(f.format(-4.2)).toBe("($4.2)")}));it("should be able to format negative zero as zero",(function(){expect(_index.default.formatter("").format(-0)).toBe("0")}));it("should be able to format negative infinity",(function(){expect(_index.default.formatter("").format(-Infinity)).toBe("-Infinity")}))}));describe("when [type] is o",(function(){it("should be able to format to octal",(function(){expect(_index.default.formatter("o").format(10)).toBe("12")}));it("should be able to format to octal with prefix",(function(){expect(_index.default.formatter("#o").format(10)).toBe("0o12")}))}));describe("when [type] is p",(function(){it("should be able to output a percentage",(function(){var f=_index.default.formatter("p");expect(f.format(.00123)).toBe("0.123000%");expect(f.format(.0123)).toBe("1.23000%");expect(f.format(.123)).toBe("12.3000%");expect(f.format(.234)).toBe("23.4000%");expect(f.format(1.23)).toBe("123.000%");expect(f.format(-.00123)).toBe("-0.123000%");expect(f.format(-.0123)).toBe("-1.23000%");expect(f.format(-.123)).toBe("-12.3000%");expect(f.format(-1.23)).toBe("-123.000%")}));it("should be able to output a percentage with rounding and sign",(function(){var f=_index.default.formatter("+.2p");expect(f.format(.00123)).toBe("+0.12%");expect(f.format(.0123)).toBe("+1.2%");expect(f.format(.123)).toBe("+12%");expect(f.format(1.23)).toBe("+120%");expect(f.format(-.00123)).toBe("-0.12%");expect(f.format(-.0123)).toBe("-1.2%");expect(f.format(-.123)).toBe("-12%");expect(f.format(-1.23)).toBe("-120%")}))}));describe("when [type] is r",(function(){it("should be able to round to significant digits",(function(){expect(_index.default.formatter(".2r").format(0)).toBe("0.0");expect(_index.default.formatter(".1r").format(.049)).toBe("0.05");expect(_index.default.formatter(".1r").format(-.049)).toBe("-0.05");expect(_index.default.formatter(".1r").format(.49)).toBe("0.5");expect(_index.default.formatter(".1r").format(-.49)).toBe("-0.5");expect(_index.default.formatter(".2r").format(.449)).toBe("0.45");expect(_index.default.formatter(".3r").format(.4449)).toBe("0.445");expect(_index.default.formatter(".3r").format(1)).toBe("1.00");expect(_index.default.formatter(".3r").format(.9995)).toBe("1.00");expect(_index.default.formatter(".5r").format(.444449)).toBe("0.44445");expect(_index.default.formatter("r").format(123.45)).toBe("123.450");expect(_index.default.formatter(".1r").format(123.45)).toBe("100");expect(_index.default.formatter(".2r").format(123.45)).toBe("120");expect(_index.default.formatter(".3r").format(123.45)).toBe("123");expect(_index.default.formatter(".4r").format(123.45)).toBe("123.5");expect(_index.default.formatter(".5r").format(123.45)).toBe("123.45");expect(_index.default.formatter(".6r").format(123.45)).toBe("123.450");expect(_index.default.formatter(".1r").format(.9)).toBe("0.9");expect(_index.default.formatter(".1r").format(.09)).toBe("0.09");expect(_index.default.formatter(".1r").format(.949)).toBe("0.9");expect(_index.default.formatter(".1r").format(.0949)).toBe("0.09");expect(_index.default.formatter(".1r").format(1.29e-8)).toBe("0.00000001");expect(_index.default.formatter(".2r").format(1.29e-8)).toBe("0.000000013");expect(_index.default.formatter(".2r").format(1.29e-9)).toBe("0.0000000013");expect(_index.default.formatter(".3r").format(1.29e-9)).toBe("0.00000000129");expect(_index.default.formatter(".4r").format(1.29e-9)).toBe("0.000000001290");expect(_index.default.formatter(".10r").format(.9999999999)).toBe("0.9999999999");expect(_index.default.formatter(".15r").format(.999999999999999)).toBe("0.999999999999999")}));it("should be able to round very small numbers",(function(){var f=_index.default.formatter(".2r");expect(f.format(1e-22)).toBe("0.00000000000000000000010")}))}));describe("when [type] is s",(function(){it("should be able to output SI-prefix notations with a default precision of 6",(function(){var f=_index.default.formatter("s");expect(f.format(0)).toBe("0.00000");expect(f.format(1)).toBe("1.00000");expect(f.format(10)).toBe("10.0000");expect(f.format(100)).toBe("100.000");expect(f.format(999.5)).toBe("999.500");expect(f.format(999500)).toBe("999.500k");expect(f.format(1e3)).toBe("1.00000k");expect(f.format(100)).toBe("100.000");expect(f.format(1400)).toBe("1.40000k");expect(f.format(1500.5)).toBe("1.50050k");expect(f.format(1e-5)).toBe("10.0000µ");expect(f.format(1e-6)).toBe("1.00000µ")}));it("should be able to output SI-prefix notations with a precision of specified significant digits",(function(){var f=_index.default.formatter(".3s");expect(f.format(0)).toBe("0.00");expect(f.format(1)).toBe("1.00");expect(f.format(10)).toBe("10.0");expect(f.format(100)).toBe("100");expect(f.format(999.5)).toBe("1.00k");expect(f.format(999500)).toBe("1.00M");expect(f.format(1e3)).toBe("1.00k");expect(f.format(1500.5)).toBe("1.50k");expect(f.format(1455e5)).toBe("146M");expect(f.format(145999999.99999934)).toBe("146M");expect(f.format(1e26)).toBe("100Y");expect(f.format(1e-6)).toBe("1.00µ");expect(f.format(.009995)).toBe("10.0m");f=_index.default.formatter(".4s");expect(f.format(999.5)).toBe("999.5");expect(f.format(999500)).toBe("999.5k");expect(f.format(.009995)).toBe("9.995m")}));it("should be able to format numbers smaller than 1e-24 with yocto",(function(){var f=_index.default.formatter(".8s");expect(f.format(1.29e-30)).toBe("0.0000013y");expect(f.format(129e-31)).toBe("0.0000129y");expect(f.format(129e-30)).toBe("0.0001290y");expect(f.format(129e-29)).toBe("0.0012900y");expect(f.format(129e-28)).toBe("0.0129000y");expect(f.format(129e-27)).toBe("0.1290000y");expect(f.format(129e-26)).toBe("1.2900000y");expect(f.format(129e-25)).toBe("12.900000y");expect(f.format(129e-24)).toBe("129.00000y");expect(f.format(129e-23)).toBe("1.2900000z");expect(f.format(-1.29e-30)).toBe("-0.0000013y");expect(f.format(-129e-31)).toBe("-0.0000129y");expect(f.format(-129e-30)).toBe("-0.0001290y");expect(f.format(-129e-29)).toBe("-0.0012900y");expect(f.format(-129e-28)).toBe("-0.0129000y");expect(f.format(-129e-27)).toBe("-0.1290000y");expect(f.format(-129e-26)).toBe("-1.2900000y");expect(f.format(-129e-25)).toBe("-12.900000y");expect(f.format(-129e-24)).toBe("-129.00000y");expect(f.format(-129e-23)).toBe("-1.2900000z")}));it("should be able to format numbers larger than 1e24 with yotta",(function(){var f=_index.default.formatter(".8s");expect(f.format(123e19)).toBe("1.2300000Z");expect(f.format(123e20)).toBe("12.300000Z");expect(f.format(123e21)).toBe("123.00000Z");expect(f.format(123e22)).toBe("1.2300000Y");expect(f.format(123e23)).toBe("12.300000Y");expect(f.format(123e24)).toBe("123.00000Y");expect(f.format(123e25)).toBe("1230.0000Y");expect(f.format(123e26)).toBe("12300.000Y");expect(f.format(123e27)).toBe("123000.00Y");expect(f.format(1.23e30)).toBe("1230000.0Y");expect(f.format(-123e19)).toBe("-1.2300000Z");expect(f.format(-123e20)).toBe("-12.300000Z");expect(f.format(-123e21)).toBe("-123.00000Z");expect(f.format(-123e22)).toBe("-1.2300000Y");expect(f.format(-123e23)).toBe("-12.300000Y");expect(f.format(-123e24)).toBe("-123.00000Y");expect(f.format(-123e25)).toBe("-1230.0000Y");expect(f.format(-123e26)).toBe("-12300.000Y");expect(f.format(-123e27)).toBe("-123000.00Y");expect(f.format(-1.23e30)).toBe("-1230000.0Y")}));it("should be able to output SI-prefix notation with a currency symbol",(function(){var f=_index.default.formatter("$.2s");expect(f.format(0)).toBe("$0.0");expect(f.format(25e4)).toBe("$250k");expect(f.format(-25e7)).toBe("-$250M");expect(f.format(25e10)).toBe("$250G");f=_index.default.formatter("$.3s");expect(f.format(0)).toBe("$0.00");expect(f.format(1)).toBe("$1.00");expect(f.format(10)).toBe("$10.0");expect(f.format(100)).toBe("$100");expect(f.format(999.5)).toBe("$1.00k");expect(f.format(999500)).toBe("$1.00M");expect(f.format(1e3)).toBe("$1.00k");expect(f.format(1500.5)).toBe("$1.50k");expect(f.format(1455e5)).toBe("$146M");expect(f.format(145999999.99999934)).toBe("$146M");expect(f.format(1e26)).toBe("$100Y");expect(f.format(1e-6)).toBe("$1.00µ");expect(f.format(.009995)).toBe("$10.0m");f=_index.default.formatter("$.4s");expect(f.format(999.5)).toBe("$999.5");expect(f.format(999500)).toBe("$999.5k");expect(f.format(.009995)).toBe("$9.995m")}));it("should be able to  SI-prefix notation precision consistently for small and large numbers",(function(){var f=_index.default.formatter(".0s");expect(f.format(1e-5)).toBe("10µ");expect(f.format(1e-4)).toBe("100µ");expect(f.format(.001)).toBe("1m");expect(f.format(.01)).toBe("10m");expect(f.format(.1)).toBe("100m");expect(f.format(1)).toBe("1");expect(f.format(10)).toBe("10");expect(f.format(100)).toBe("100");expect(f.format(1e3)).toBe("1k");expect(f.format(1e4)).toBe("10k");expect(f.format(1e5)).toBe("100k");f=_index.default.formatter(".4s");expect(f.format(1e-5)).toBe("10.00µ");expect(f.format(1e-4)).toBe("100.0µ");expect(f.format(.001)).toBe("1.000m");expect(f.format(.01)).toBe("10.00m");expect(f.format(.1)).toBe("100.0m");expect(f.format(1)).toBe("1.000");expect(f.format(10)).toBe("10.00");expect(f.format(100)).toBe("100.0");expect(f.format(1e3)).toBe("1.000k");expect(f.format(1e4)).toBe("10.00k");expect(f.format(1e5)).toBe("100.0k")}));it("should be able to group zero fill by the thousands when a width is specified",(function(){var f=_index.default.formatter("020,s");expect(f.format(42)).toBe("000,000,000,042.0000");expect(f.format(42e12)).toBe("00,000,000,042.0000T")}));it("should be able to group thousands for very large numbers",(function(){var f=_index.default.formatter(",s");expect(f.format(42e30)).toBe("42,000,000Y")}))}));describe("when [type] is x",(function(){it("should be able to return the expected hexadecimal (lowercase) string",(function(){expect(_index.default.formatter("x").format(3735928559)).toBe("deadbeef")}));it("should be able to returns the expected hexadecimal (lowercase) string with prefix",(function(){expect(_index.default.formatter("#x").format(3735928559)).toBe("0xdeadbeef")}));it("should be able to group by the thousands",(function(){expect(_index.default.formatter(",x").format(3735928559)).toBe("de,adb,eef")}));it("should not group the prefix",(function(){expect(_index.default.formatter("#,x").format(46685601519)).toBe("0xade,adb,eef")}));it("should put the sign before the prefix",(function(){expect(_index.default.formatter("+#x").format(3735928559)).toBe("+0xdeadbeef");expect(_index.default.formatter("+#x").format(-3735928559)).toBe("-0xdeadbeef");expect(_index.default.formatter(" #x").format(3735928559)).toBe(" 0xdeadbeef");expect(_index.default.formatter(" #x").format(-3735928559)).toBe("-0xdeadbeef")}));it("should be abe to format hexadecimal currency",(function(){expect(_index.default.formatter("$,x").format(3735928559)).toBe("$de,adb,eef")}));it("should always have a precision of zero",(function(){expect(_index.default.formatter(".2x").format(3735928559)).toBe("deadbeef");expect(_index.default.formatter(".2x").format(-4.2)).toBe("-4")}));it("should be able to round non-integers",(function(){expect(_index.default.formatter("x").format(2.4)).toBe("2")}));it("should be able to format negative zero as zero",(function(){expect(_index.default.formatter("x").format(-0)).toBe("0");expect(_index.default.formatter("x").format(-1e-12)).toBe("0")}));it("should not consider -0xeee to be positive",(function(){expect(_index.default.formatter("x").format(-3822)).toBe("-eee")}));it("should be able to return the expected hexadecimal (uppercase) string",(function(){expect(_index.default.formatter("X").format(3735928559)).toBe("DEADBEEF")}));it("should be able to return the expected hexadecimal (uppercase) string with prefix",(function(){expect(_index.default.formatter("#X").format(3735928559)).toBe("0xDEADBEEF")}));it("should be able to format negative zero as zero",(function(){expect(_index.default.formatter("X").format(-0)).toBe("0");expect(_index.default.formatter("X").format(-1e-12)).toBe("0")}));it("should not consider -0xeee to be positive",(function(){expect(_index.default.formatter("X").format(-3822)).toBe("-EEE")}));it("should apply the prefix after padding for the given width",(function(){expect(_index.default.formatter("20x").format(3735928559)).toBe("            deadbeef");expect(_index.default.formatter("#20x").format(3735928559)).toBe("          0xdeadbeef");expect(_index.default.formatter("020x").format(3735928559)).toBe("000000000000deadbeef");expect(_index.default.formatter("#020x").format(3735928559)).toBe("0x0000000000deadbeef")}))}))}))}));describe(".formatPrefix(specifier, value)",(function(){describe(".format(number)",(function(){it("should format with the SI prefix appropriate to the specified value when specifier is 's'",(function(){expect(_index.default.formatPrefix(",.0s",1e-6).format(42e-5)).toBe("420µ");expect(_index.default.formatPrefix(",.0s",1e-6).format(.0042)).toBe("4,200µ");expect(_index.default.formatPrefix(",.3s",.001).format(42e-5)).toBe("0.420m")}));it("should use yocto for very small reference values when specifier is 's'",(function(){expect(_index.default.formatPrefix(",.0s",1e-27).format(1e-24)).toBe("1y")}));it("should use yotta for very small reference values when specifier is 's'",(function(){expect(_index.default.formatPrefix(",.0s",1e27).format(1e24)).toBe("1Y")}));it("should format with the specified SI prefix when specifier is '$,s'",(function(){var f=_index.default.formatPrefix(" $12,.1s",1e6);expect(f.format(-42e6)).toBe("      -$42.0M");expect(f.format(+42e5)).toBe("        $4.2M")}))}))}))}));describe("new NumberConverter({decimal: decimal})",(function(){it("should observe the specified decimal point",(function(){expect(new _index.NumberConverter({decimal:"|"}).formatter("06.2f").format(2)).toBe("002|00");expect(new _index.NumberConverter({decimal:"/"}).formatter("06.2f").format(2)).toBe("002/00")}))}));describe("new NumberConverter({currency: [prefix, suffix]})",(function(){it("should observe the specified currency prefix and suffix",(function(){expect(new _index.NumberConverter({decimal:".",prefix:"฿",suffix:""}).formatter("$06.2f").format(2)).toBe("฿02.00");expect(new _index.NumberConverter({decimal:".",prefix:"",suffix:"฿"}).formatter("$06.2f").format(2)).toBe("02.00฿")}));it("should place the currency suffix after the SI suffix",(function(){expect(new _index.NumberConverter({decimal:",",prefix:"",suffix:" €"}).formatter("$.3s").format(12e8)).toBe("1,20G €")}))}));describe("new NumberConverter({grouping: ...})",(function(){it("should not perform grouping if grouping is null",(function(){expect(new _index.NumberConverter({decimal:".",grouping:null}).formatter("012,.2f").format(2)).toBe("000000002.00")}));it("should observe specified group sizes",(function(){expect(new _index.NumberConverter({decimal:".",grouping:[3],thousands:","}).formatter("012,.2f").format(2)).toBe("0,000,002.00");expect(new _index.NumberConverter({decimal:".",grouping:[2],thousands:","}).formatter("012,.2f").format(2)).toBe("0,00,00,02.00");expect(new _index.NumberConverter({decimal:".",grouping:[2,3],thousands:","}).formatter("012,.2f").format(2)).toBe("00,000,02.00");expect(new _index.NumberConverter({decimal:".",grouping:[3,2,2,2,2,2,2],thousands:","}).formatter(",d").format(1e12)).toBe("10,00,00,00,00,000")}))}));describe("new NumberConverter({thousands: separator})",(function(){it("should respect the specified group separator",(function(){expect(new _index.NumberConverter({decimal:".",grouping:[3],thousands:" "}).formatter("012,.2f").format(2)).toBe("0 000 002.00");expect(new _index.NumberConverter({decimal:".",grouping:[3],thousands:"/"}).formatter("012,.2f").format(2)).toBe("0/000/002.00")}))}));describe("new NumberConverter(enIN)",(function(){it("should correctly format numbers using the Indian numbering system",(function(){var formatter=new _index.NumberConverter(_enIN.default).formatter(",");expect(formatter.format(10)).toBe("10");expect(formatter.format(100)).toBe("100");expect(formatter.format(1e3)).toBe("1,000");expect(formatter.format(1e4)).toBe("10,000");expect(formatter.format(1e5)).toBe("1,00,000");expect(formatter.format(1e6)).toBe("10,00,000");expect(formatter.format(1e7)).toBe("1,00,00,000");expect(formatter.format(10000000.4543)).toBe("1,00,00,000.4543");expect(formatter.format(1000.321)).toBe("1,000.321");expect(formatter.format(10.5)).toBe("10.5");expect(formatter.format(-10)).toBe("-10");expect(formatter.format(-100)).toBe("-100");expect(formatter.format(-1e3)).toBe("-1,000");expect(formatter.format(-1e4)).toBe("-10,000");expect(formatter.format(-1e5)).toBe("-1,00,000");expect(formatter.format(-1e6)).toBe("-10,00,000");expect(formatter.format(-1e7)).toBe("-1,00,00,000");expect(formatter.format(-10000000.4543)).toBe("-1,00,00,000.4543");expect(formatter.format(-1000.321)).toBe("-1,000.321");expect(formatter.format(-10.5)).toBe("-10.5")}))}));