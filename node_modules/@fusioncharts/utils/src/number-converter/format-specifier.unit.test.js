"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _formatSpecifier=_interopRequireDefault(require("./format-specifier"));var _index=_interopRequireDefault(require("./index"));describe("FormatSpecifier",(function(){it("should throw an error for invalid formats",(function(){expect((function(){return new _formatSpecifier.default("foo")})).toThrowError(Error,"Invalid number format specifier: foo");expect((function(){return new _formatSpecifier.default(".-2s")})).toThrowError(Error,"Invalid number format specifier: .-2s");expect((function(){return new _formatSpecifier.default(".f")})).toThrowError(Error,"Invalid number format specifier: .f")}));it("should have the expected defaults",(function(){var s=new _formatSpecifier.default("");expect(s.fill).toBe(" ");expect(s.align).toBe(">");expect(s.sign).toBe("-");expect(s.symbol).toBe("");expect(s.zero).toBe(false);expect(s.width).toBe(undefined);expect(s.comma).toBe(false);expect(s.precision).toBe(undefined);expect(s.trim).toBe(false);expect(s.type).toBe("")}));it("should preserve information about unknown types",(function(){var s=new _formatSpecifier.default("q");expect(s.trim).toBe(false);expect(s.type).toBe("q")}));it("should preserve shorthand formats",(function(){var s=new _formatSpecifier.default("");expect(s.trim).toBe(false);expect(s.type).toBe("")}));it("should reflect current field values in its string representation",(function(){var s=new _formatSpecifier.default("");s.fill="_";expect(s+"").toBe("_>-");s.align="^";expect(s+"").toBe("_^-");s.sign="+";expect(s+"").toBe("_^+");s.symbol="$";expect(s+"").toBe("_^+$");s.zero=true;expect(s+"").toBe("_^+$0");s.width=12;expect(s+"").toBe("_^+$012");s.comma=true;expect(s+"").toBe("_^+$012,");s.precision=2;expect(s+"").toBe("_^+$012,.2");s.type="f";expect(s+"").toBe("_^+$012,.2f");s.trim=true;expect(s+"").toBe("_^+$012,.2~f");expect(_index.default.formatter(s).format(42)).toBe("+$0,000,000,042")}));it("should clamp precision to zero in its string representation",(function(){var s=new _formatSpecifier.default("");expect((s.precision=-1,s)+"").toBe(" >-.0")}));it("should clamp width to one in its string representation",(function(){var s=new _formatSpecifier.default("");expect((s.width=-1,s)+"").toBe(" >-1")}))}));