"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=true;exports.DEFAULT_THRESHOLD_PIXELS=exports._calculateIndexOfIntervals=exports.default=void 0;var _equals=_interopRequireDefault(require("ramda/src/equals"));var DEFAULT_THRESHOLD_PIXELS=4,clamp=function clamp(number,min,max){return Math.min(Math.max(number,min),max)},date=function date(d){return new Date(d)},_getStandardBin=function _getStandardBin(arr,value){var firstIndex=0,lastIndex=arr.length-1,lastLessThan=lastIndex,middleIndex=Math.floor((lastIndex+firstIndex)/2),ms=value instanceof Array?value[2]:value.unit.ms*value.multiplier;while(firstIndex<lastIndex){if(ms<arr[middleIndex][2]){lastLessThan=lastIndex=middleIndex-1}else if(ms>arr[middleIndex][2]){firstIndex=middleIndex+1}else{lastLessThan=middleIndex;break}middleIndex=Math.floor((lastIndex+firstIndex)/2)}if(value instanceof Array){return arr[lastLessThan]}if(arr[lastLessThan][2]===ms){return arr[lastLessThan]}return[arr[lastLessThan-1][0],value.multiplier,ms]},_calculateIndexOfIntervals=function _calculateIndexOfIntervals(thresholdIntervals){var intervalIndexMap={},i,len=thresholdIntervals.length;for(i=len-1;i>=0;i--){intervalIndexMap[thresholdIntervals[i][0].name()]=i}return intervalIndexMap};exports._calculateIndexOfIntervals=_calculateIndexOfIntervals;exports.DEFAULT_THRESHOLD_PIXELS=DEFAULT_THRESHOLD_PIXELS;var BinDecider=function(){function BinDecider(standardBins){this.setStandardBins(standardBins);this.binRange=[0,1];this.binDomain=[0,1];this.thresholdPixels=DEFAULT_THRESHOLD_PIXELS;this.intervalIndexMap=_calculateIndexOfIntervals(this.getStandardBins());this.minBin=[]}var _proto=BinDecider.prototype;_proto.setStandardBins=function setStandardBins(standardBins){this.standardBins=standardBins};_proto.getStandardBins=function getStandardBins(){return this.standardBins};_proto.setScale=function setScale(scales){this.scale=scales};_proto.getScale=function getScale(){return this.scale};_proto._computeRangeThreshold=function _computeRangeThreshold(rangeThreshold){var range=this.getBinRange(),r0=range[0],r1=range[1],tw=clamp(rangeThreshold,1,Math.abs(r0-r1)),d0=+this.getScale().getDomainValue(0),d1=+this.getScale().getDomainValue(tw),dWidth=Math.abs(d1-d0),binMin=this.getBinMin(),binMax=this.getBinMax(),index=this.standardBins.findIndex((function(v){return v[2]>=dWidth})),idx=index===-1?this.standardBins.length-1:index;if(this.standardBins[idx][2]<binMin[2]){this._threshold=binMin}else if(binMax&&this.standardBins[idx][2]>binMax[2]&&binMax[2]>=binMin[2]){this._threshold=binMax}else{this._threshold=this.standardBins[idx]}};_proto.setBinRange=function setBinRange(range){this.binRange=range.slice();this.getScale().setRange(this.binRange);this.getScale().setDomain(this.binDomain);this._computeRangeThreshold(this.thresholdPixels);return this};_proto.getBinRange=function getBinRange(){return this.binRange};_proto.setBinDomain=function setBinDomain(domain){this.binDomain=domain.slice();this.getScale().setRange(this.binRange);this.getScale().setDomain(this.binDomain);this._computeRangeThreshold(this.thresholdPixels);return this};_proto.getBinDomain=function getBinDomain(){return this.binDomain.slice().map(date)};_proto.setBinMin=function setBinMin(minBin){var standardMinBin=_getStandardBin(this.standardBins,minBin);if(!(0,_equals.default)(standardMinBin,minBin)){this.minBin=standardMinBin;this._computeRangeThreshold(this.thresholdPixels)}return this};_proto.getBinMin=function getBinMin(){return this.minBin};_proto.setBinMax=function setBinMax(maxBin){this.maxBin=_getStandardBin(this.standardBins,maxBin)};_proto.getBinMax=function getBinMax(){return this.maxBin};_proto.setRangeThreshold=function setRangeThreshold(rangeThreshold){if(rangeThreshold===void 0){rangeThreshold=DEFAULT_THRESHOLD_PIXELS}if(rangeThreshold!==this.thresholdPixels){this._computeRangeThreshold(this.thresholdPixels=rangeThreshold)}return this};_proto.getRangeThreshold=function getRangeThreshold(){return this._threshold};return BinDecider}();var _default=BinDecider;exports.default=_default;