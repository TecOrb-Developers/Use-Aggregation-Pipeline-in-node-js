const CleanWebpackPlugin = require('clean-webpack-plugin'),
  CopyWebpackPlugin = require('copy-webpack-plugin'),
  path = require('path'),
  pkg = require('./package.json'),
  WrapperPlugin = require('wrapper-webpack-plugin'),
  UglifyJsPlugin = require('uglifyjs-webpack-plugin');

let moduleWrapperHeader = `
(function (factory) {
  if (typeof module === 'object' && typeof module.exports !== "undefined") {
      module.exports = factory;
  } else {
      var FusionCharts = window.FusionCharts;
      factory(FusionCharts);
  }
}(function (FusionCharts) {
`,
  moduleWrapperFooter = `
}));
`,

  moduleConfig = {
    rules: [{
      test: /\.js$/,
      exclude: /node_modules/,
      use: {
        loader: 'babel-loader',
        options: {
          presets: ['env']
        }
      }
    }]
  };

function getPlugins (isSource, copyFlag) {
  var plugins = [new WrapperPlugin({
    test: /\.js$/,
    header: moduleWrapperHeader,
    footer: moduleWrapperFooter
  })];

  if (copyFlag) {
    plugins.push(new CleanWebpackPlugin(['dist']),
      new CopyWebpackPlugin([{
        from: 'external',
        to: '../../dist'
      }, {
        from: 'vendors',
        to: './'
      }]));
  }

  if (!isSource) {
    plugins.push(
      new UglifyJsPlugin({
        cache: true,
        parallel: true,
        sourceMap: true,
        uglifyOptions: {
          ecma: 5,
          ie8: true,
          mangle: true,
          compress: false,
          keep_classnames: true,
          keep_fnames: true
        }
      })
    );
  }
  return plugins;
}

module.exports = [{
  entry: './' + pkg.main,
  output: {
    path: path.resolve(__dirname, 'dist/js'),
    filename: 'fusioncharts.ext.accessibility.js'
  },
  module: moduleConfig,
  mode: 'none',
  devtool: 'source-map',
  plugins: getPlugins(false, true)
}, {
  entry: './src/texts/fusioncharts.ext.accessibility-resources-strings-en.js',
  output: {
    path: path.resolve(__dirname, 'dist/js'),
    filename: 'fusioncharts.ext.accessibility-resources-strings-en.js'
  },
  module: moduleConfig,
  mode: 'none',
  devtool: 'source-map',
  plugins: getPlugins(true)
}];
