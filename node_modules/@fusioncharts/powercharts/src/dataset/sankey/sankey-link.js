"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=true;exports.default=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _inheritsLoose2=_interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _componentInterface=require("@fusioncharts/core/src/component-interface");var _sankeyRibbon=require("./sankey-ribbon");var _lib=require("@fusioncharts/core/src/lib");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))}keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach((function(key){(0,_defineProperty2.default)(target,key,source[key])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}}return target}var CUSTOM="custom",UNIFORM="uniform",BLANKSTRING="",SMALLSQUARE="&#9632;",MEDIUMSQUARE="&#x25FC;",getTooltext=function getTooltext(config,link,chartConfig){var uniChar=_lib.isIpad?SMALLSQUARE:MEDIUMSQUARE,macroIndices=[148,149,142,150,151,152,153],manager=link.getLinkedParent(),legend=link.getFromEnv("legend"),pathArr,drawCustomLegendIcon=chartConfig&&chartConfig.drawcustomlegendicon,newPathArr=[],i,j,symbolBBox,legendItemSymbol,pathStart=[],finalPath,fromLegendItem=drawCustomLegendIcon&&legend&&legend.config&&legend.config.isActive?legend.getItem(manager.config.legendItemMap[link.config.from]):null,fromgraphicalElement=fromLegendItem&&fromLegendItem.getGraphicalElement(),toLegendItem=drawCustomLegendIcon&&legend&&legend.config&&legend.config.isActive?legend.getItem(manager.config.legendItemMap[link.config.to]):null,tographicalElement=toLegendItem&&toLegendItem.getGraphicalElement(),parserConfig,linkToolText;finalPath=BLANKSTRING;if(fromLegendItem){if(fromgraphicalElement){legendItemSymbol=fromgraphicalElement&&fromgraphicalElement.legendItemSymbol;pathArr=legendItemSymbol&&legendItemSymbol.attrs.path.split(/(?=[LMCA])/);symbolBBox=legendItemSymbol&&legendItemSymbol.node.getBBox();if(pathArr&&pathArr.length){for(i=0;i<pathArr.length;i++){pathStart.push(pathArr[i][0]);pathArr[i]=pathArr[i].substring(1,pathArr[i].length);if(i===pathArr.length-1){pathArr[i]=pathArr[i].substring(0,pathArr[i].length-1)}newPathArr[i]=pathArr[i].split(",")}}if(newPathArr&&newPathArr.length){for(i=0;i<newPathArr.length;i++){if(newPathArr[i].length){for(j=0;j<newPathArr[i].length;j++){newPathArr[i][j]=Number(newPathArr[i][j]);if(pathStart[i]!=="A"){if(j===0){newPathArr[i][j]=newPathArr[i][j]-symbolBBox.x}else if(j===1){newPathArr[i][j]=newPathArr[i][j]-symbolBBox.y}}else if(pathStart[i]==="A"){if(j===5){newPathArr[i][j]=newPathArr[i][j]-symbolBBox.x}else if(j===6){newPathArr[i][j]=newPathArr[i][j]-symbolBBox.y}}}}finalPath+=pathStart[i]+newPathArr[i].toString()}}finalPath=finalPath+"Z"}}parserConfig={linkDataValue:config.value,fromPlotIdentifier:fromLegendItem?"<svg height= "+symbolBBox.height+" width = "+symbolBBox.width+" overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n      <path d= "+finalPath+" fill = "+fromgraphicalElement.legendItemSymbol.node.getAttribute("fill")+" stroke = "+fromgraphicalElement.legendItemSymbol.node.getAttribute("stroke")+"\n      stroke-opacity = "+fromgraphicalElement.legendItemSymbol.node.getAttribute("stroke-opacity")+" fill-opacity = "+fromgraphicalElement.legendItemSymbol.node.getAttribute("fill-opacity")+" \n      stroke-width = "+fromgraphicalElement.legendItemSymbol.node.getAttribute("stroke-width")+" stroke-linecap = "+fromgraphicalElement.legendItemSymbol.node.getAttribute("stroke-linecap")+"></path>\n    </svg>":"<span style='color: "+(0,_lib.parseColor)(config.sourceFill)+";'>"+uniChar+"&nbsp;</span>",toPlotIdentifier:toLegendItem?"<svg height= "+symbolBBox.height+" width = "+symbolBBox.width+" overflow= 'visible' xmlns=\"http://www.w3.org/2000/svg\">\n      <path d= "+finalPath+" fill = "+tographicalElement.legendItemSymbol.node.getAttribute("fill")+" stroke = "+tographicalElement.legendItemSymbol.node.getAttribute("stroke")+"\n      stroke-opacity = "+tographicalElement.legendItemSymbol.node.getAttribute("stroke-opacity")+" fill-opacity = "+tographicalElement.legendItemSymbol.node.getAttribute("fill-opacity")+" \n      stroke-width = "+tographicalElement.legendItemSymbol.node.getAttribute("stroke-width")+" stroke-linecap = "+tographicalElement.legendItemSymbol.node.getAttribute("stroke-linecap")+"></path>\n    </svg>":"<span style='color: "+(0,_lib.parseColor)(config.targetFill)+";'>"+uniChar+"&nbsp;</span>",flowDirection:"&rarr;"};linkToolText=(0,_lib.parseTooltext)(config.toolText,macroIndices,config,parserConfig);config.setLinkTooltext=linkToolText;if(!config.toolText){return"<div style='padding: 2px; vertical-align: middle;'>\n        <span style='color: "+(0,_lib.parseColor)(config.sourceFill)+";'>"+uniChar+"&nbsp;</span>"+config.props.source.label+"\n        &rarr;\n        <span style='color: "+(0,_lib.parseColor)(config.targetFill)+"'>"+uniChar+"&nbsp;</span>"+config.props.target.label+"\n        &nbsp;\n        "+config.value+"\n      </div>"}return"<div style='padding: 2px; vertical-align: middle;'>\n        "+config.setLinkTooltext+"\n      </div>"};var SankeyLink=function(_SmartRenderer){(0,_inheritsLoose2.default)(SankeyLink,_SmartRenderer);function SankeyLink(){return _SmartRenderer.apply(this,arguments)||this}var _proto=SankeyLink.prototype;_proto.getType=function getType(){return"link"};_proto.getName=function getName(){return"sankey-link"};_proto.configureAttributes=function configureAttributes(inputConfig){if(inputConfig===void 0){inputConfig={}}Object.assign(this.config,inputConfig)};_proto.allocatePosition=function allocatePosition(){var link=this,linkConfig=link.config,mode=linkConfig.mode,style=linkConfig.style,props=linkConfig.props,linkPadding=linkConfig.linkPadding,linkType=linkConfig.linkType,curvature=linkConfig.curvature,_link$getFromEnv=link.getFromEnv("chartConfig"),orientation=_link$getFromEnv.orientation,linkCosmetics=style.link[mode],pathStr,sourcePoint={x:props.x0,y:props.y0,width:props.linkWidth},source=props.source,target=props.target,sourceNodeLayer=source.props.layer,targetNodeLayer=target.props.layer,sourceNodeLen,targetNodeLen,targetPoint={x:props.x1,y:props.y1,width:props.linkWidth>1?props.linkWidth:2},columnGap=link.getLinkedParent().config.columnGap;sourceNodeLen=Math.max(orientation==="vertical"?source.props.x1-source.props.x0:source.props.y1-source.props.y0,0);targetNodeLen=Math.max(orientation==="vertical"?source.props.x1-source.props.x0:source.props.y1-source.props.y0,0);if(linkType!==CUSTOM&&linkType!==UNIFORM){if(props.linkWidth>columnGap*Math.abs(targetNodeLayer-sourceNodeLayer)/3||sourcePoint.width>.7*sourceNodeLen||targetPoint.width>.7*targetNodeLen){linkType=CUSTOM}else{linkType=UNIFORM}}pathStr=(0,_sankeyRibbon.sankeyRibbon)(sourcePoint,targetPoint,{orientation:orientation,padding:linkPadding,curvature:curvature,linkType:linkType});linkConfig.linkAttr=_objectSpread({path:pathStr,"stroke-width":linkType===UNIFORM?props.linkWidth>1?props.linkWidth:2:"none"},linkCosmetics);if(linkType===CUSTOM){linkConfig.linkAttr.fill=linkConfig.linkAttr.stroke;linkConfig.linkAttr.stroke="none"}};_proto.draw=function draw(){var link=this,linkConfig=link.config,chartConfig=link.getFromEnv("chartConfig"),id=linkConfig.id,linkAttr=linkConfig.linkAttr;link.addGraphicalElement({el:"path",attr:linkAttr,container:{id:"sankey-link-group",label:"linkGroup",isParent:true},tooltext:getTooltext(link.config,link,chartConfig),component:link,id:id,label:"sankey-link"})};return SankeyLink}(_componentInterface.SmartRenderer);var _default=SankeyLink;exports.default=_default;