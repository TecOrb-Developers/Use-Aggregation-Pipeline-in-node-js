"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=true;exports.default=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _inheritsLoose2=_interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _componentInterface=require("@fusioncharts/core/src/component-interface");var _lib=require("@fusioncharts/core/src/lib");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))}keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach((function(key){(0,_defineProperty2.default)(target,key,source[key])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}}return target}var START="start",END="end",INSIDE="inside",MIDDLE="middle",defaultTransform="t0,0",SMALLSQUARE="&#9632;",MEDIUMSQUARE="&#x25FC;",getTooltext=function getTooltext(config,node,chartConfig){var uniChar=_lib.isIpad?SMALLSQUARE:MEDIUMSQUARE,macroIndices=[3,133,134,143,144,145],manager=node.getLinkedParent(),legend=node.getFromEnv("legend"),pathArr,drawCustomLegendIcon=chartConfig&&chartConfig.drawcustomlegendicon,newPathArr=[],i,j,symbolBBox,plotToolText,legendItemSymbol,pathStart=[],finalPath,legendItem=drawCustomLegendIcon&&legend&&legend.config&&legend.config.isActive?legend.getItem(manager.config.legendItemMap[node.config.label]):null,graphicalElement=legendItem&&legendItem.getGraphicalElement(),parserConfig,toolText;finalPath=_lib.BLANKSTRING;if(legendItem){legendItemSymbol=graphicalElement&&graphicalElement.legendItemSymbol;pathArr=legendItemSymbol&&legendItemSymbol.attrs.path.split(/(?=[LMCA])/);symbolBBox=legendItemSymbol&&legendItemSymbol.node.getBBox();if(pathArr&&pathArr.length){for(i=0;i<pathArr.length;i++){pathStart.push(pathArr[i][0]);pathArr[i]=pathArr[i].substring(1,pathArr[i].length);if(i===pathArr.length-1){pathArr[i]=pathArr[i].substring(0,pathArr[i].length-1)}newPathArr[i]=pathArr[i].split(",")}}if(newPathArr&&newPathArr.length){for(i=0;i<newPathArr.length;i++){if(newPathArr[i].length){for(j=0;j<newPathArr[i].length;j++){newPathArr[i][j]=Number(newPathArr[i][j]);if(pathStart[i]!=="A"){if(j===0){newPathArr[i][j]=newPathArr[i][j]-symbolBBox.x}else if(j===1){newPathArr[i][j]=newPathArr[i][j]-symbolBBox.y}}else if(pathStart[i]==="A"){if(j===5){newPathArr[i][j]=newPathArr[i][j]-symbolBBox.x}else if(j===6){newPathArr[i][j]=newPathArr[i][j]-symbolBBox.y}}}}finalPath+=pathStart[i]+newPathArr[i].toString()}}finalPath=finalPath+"Z"}parserConfig={label:config.label,value:config.value,nodeValue:config.props.value,nodeDataValue:config.value,plotFillColor:config.rawCosmetics&&"#"+config.rawCosmetics.fill,plotFillAlpha:config.rawCosmetics&&config.rawCosmetics.alpha,plotIdentifier:legendItem?"<svg height= "+symbolBBox.height+" width = "+symbolBBox.width+" overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n      <path d= "+finalPath+" fill = "+graphicalElement.legendItemSymbol.node.getAttribute("fill")+" stroke = "+graphicalElement.legendItemSymbol.node.getAttribute("stroke")+"\n      stroke-opacity = "+graphicalElement.legendItemSymbol.node.getAttribute("stroke-opacity")+" fill-opacity = "+graphicalElement.legendItemSymbol.node.getAttribute("fill-opacity")+" \n      stroke-width = "+graphicalElement.legendItemSymbol.node.getAttribute("stroke-width")+" stroke-linecap = "+graphicalElement.legendItemSymbol.node.getAttribute("stroke-linecap")+"></path>\n    </svg>":"<span style='color: "+(0,_lib.parseColor)(config.rawCosmetics.fill)+";'>"+uniChar+"&nbsp;</span>"};toolText=(0,_lib.parseTooltext)(config.toolText,macroIndices,parserConfig,{value:config.value,nodeValue:config.props.value,nodeDataValue:config.value,plotFillColor:config.rawCosmetics&&"#"+config.rawCosmetics.fill,plotFillAlpha:config.rawCosmetics&&config.rawCosmetics.alpha,plotIdentifier:legendItem?"<svg height= "+symbolBBox.height+" width = "+symbolBBox.width+" overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n        <path d= "+finalPath+" fill = "+graphicalElement.legendItemSymbol.node.getAttribute("fill")+" stroke = "+graphicalElement.legendItemSymbol.node.getAttribute("stroke")+"\n        stroke-opacity = "+graphicalElement.legendItemSymbol.node.getAttribute("stroke-opacity")+" fill-opacity = "+graphicalElement.legendItemSymbol.node.getAttribute("fill-opacity")+" \n        stroke-width = "+graphicalElement.legendItemSymbol.node.getAttribute("stroke-width")+" stroke-linecap = "+graphicalElement.legendItemSymbol.node.getAttribute("stroke-linecap")+"></path>\n      </svg>":"<span style='color: "+(0,_lib.parseColor)(config.rawCosmetics.fill)+";'>"+uniChar+"&nbsp;</span>"});plotToolText=(0,_lib.parseTooltext)(config.plotToolText,macroIndices,parserConfig,{value:config.value,nodeValue:config.props.value,nodeDataValue:config.value,plotFillColor:config.rawCosmetics&&"#"+config.rawCosmetics.fill,plotFillAlpha:config.rawCosmetics&&config.rawCosmetics.alpha,plotIdentifier:legendItem?"<svg height= "+symbolBBox.height+" width = "+symbolBBox.width+" overflow='visible' xmlns=\"http://www.w3.org/2000/svg\">\n        <path d= "+finalPath+" fill = "+graphicalElement.legendItemSymbol.node.getAttribute("fill")+" stroke = "+graphicalElement.legendItemSymbol.node.getAttribute("stroke")+"\n        stroke-opacity = "+graphicalElement.legendItemSymbol.node.getAttribute("stroke-opacity")+" fill-opacity = "+graphicalElement.legendItemSymbol.node.getAttribute("fill-opacity")+" \n        stroke-width = "+graphicalElement.legendItemSymbol.node.getAttribute("stroke-width")+" stroke-linecap = "+graphicalElement.legendItemSymbol.node.getAttribute("stroke-linecap")+"></path>\n      </svg>":"<span style='color: "+(0,_lib.parseColor)(config.rawCosmetics.fill)+";'>"+uniChar+"&nbsp;</span>"});config.setToolText=toolText;config.setPlotTooltext=config.setToolText?config.setToolText:plotToolText;if(!config.plotToolText){return"<div style='padding: 2px; vertical-align: middle;'>\n          <span style='color: "+(0,_lib.parseColor)(config.rawCosmetics.fill)+";'>"+uniChar+"&nbsp;</span>"+config.label+"\n          &nbsp;\n          &nbsp;\n          "+config.value+"\n        </div>"}return"<div style='padding: 2px; vertical-align: middle;'>\n        <span style='color: "+(0,_lib.parseColor)(config.rawCosmetics.fill)+";'>"+uniChar+"&nbsp;</span>\n        "+config.setPlotTooltext+"\n      </div>"},BLANK="",SPACE=" ";var SankeyNode=function(_SmartRenderer){(0,_inheritsLoose2.default)(SankeyNode,_SmartRenderer);function SankeyNode(){return _SmartRenderer.apply(this,arguments)||this}var _proto=SankeyNode.prototype;_proto.getType=function getType(){return"node"};_proto.getName=function getName(){return"sankey-node"};_proto.configureAttributes=function configureAttributes(inputConfig){if(inputConfig===void 0){inputConfig={}}var nodeConfig=this.config;Object.assign(nodeConfig,inputConfig)};_proto.allocatePosition=function allocatePosition(){var node=this,_node$config=node.config,props=_node$config.props,style=_node$config.style,mode=_node$config.mode,labelPosition=_node$config.labelPosition,showLabel=_node$config.showLabel,formattedLabel=_node$config.formattedLabel,showValue=_node$config.showValue,value=_node$config.value,rotateLabel=_node$config.rotateLabel,labelPadding=_node$config.labelPadding,nodeCosmetics=style.node[mode],labelCosmetics=style.label[mode],orientation=node.getFromEnv("orientation"),sl=node.getFromEnv("smartLabel"),labelXPos,labelYPos,anchor,labelSepChar=node.getLinkedParent().config.labelSepChar,text=formattedLabel.text+(showValue?labelSepChar+SPACE+value:BLANK);if(!showLabel||!formattedLabel.text){text=showValue?value:BLANK;sl.setStyle(style.label.normal);formattedLabel=sl.getSmartText(text)}node.config.nodeAttr=_objectSpread({x:props.x0,y:props.y0,width:Math.max(0,props.x1-props.x0),height:Math.max(0,props.y1-props.y0)},nodeCosmetics);if(orientation==="horizontal"){if(!rotateLabel){if(labelPosition===START){labelXPos=props.x0-labelPadding;anchor=END}else if(labelPosition===INSIDE){labelXPos=Math.abs(props.x0+props.x1)/2;anchor=MIDDLE}else{labelXPos=props.x1+labelPadding;anchor=START}labelYPos=Math.abs(props.y1+props.y0)/2;node.config.labelAttr=_objectSpread({x:labelXPos,y:labelYPos,text:text,transform:defaultTransform,"text-anchor":anchor},labelCosmetics)}else{if(labelPosition===START){labelXPos=props.x0-labelPadding-formattedLabel.height/2}else if(labelPosition===INSIDE){labelXPos=Math.abs(props.x0+props.x1)/2}else{labelXPos=props.x1+labelPadding+formattedLabel.height/2}labelYPos=Math.abs(props.y1+props.y0)/2;node.config.labelAttr=_objectSpread({x:labelXPos,y:labelYPos,text:text,"text-anchor":MIDDLE,transform:(0,_lib.getSuggestiveRotation)(-90,labelXPos,labelYPos)},labelCosmetics)}}else{if(!rotateLabel){if(labelPosition===START){labelYPos=props.y0-labelPadding-formattedLabel.height/2}else if(labelPosition===INSIDE){labelYPos=Math.abs(props.y0+props.y1)/2}else{labelYPos=props.y1+labelPadding+formattedLabel.height/2}anchor=MIDDLE;labelXPos=(props.x0+props.x1)/2;node.config.labelAttr=_objectSpread({x:labelXPos,y:labelYPos,text:text,transform:defaultTransform,"text-anchor":anchor},labelCosmetics)}else{if(labelPosition===START){labelYPos=props.y0-labelPadding;anchor=START}else if(labelPosition===INSIDE){labelYPos=Math.abs(props.y0+props.y1)/2;anchor=MIDDLE}else{labelYPos=props.y1+labelPadding;anchor=END}labelXPos=Math.abs(props.x1+props.x0)/2;node.config.labelAttr=_objectSpread({x:labelXPos,y:labelYPos,text:text,"text-anchor":anchor,transform:(0,_lib.getSuggestiveRotation)(-90,labelXPos,labelYPos)},labelCosmetics)}}};_proto.draw=function draw(){var node=this,chartConfig=node.getFromEnv("chartConfig"),_node$config2=node.config,id=_node$config2.id,labelAttr=_node$config2.labelAttr,nodeAttr=_node$config2.nodeAttr,textOutline=_node$config2.textOutline,tooltext=getTooltext(node.config,node,chartConfig);nodeAttr.height=nodeAttr.height>1?nodeAttr.height:1;node.addGraphicalElement({el:"rect",attr:nodeAttr,container:{id:"sankey-node-group",label:"nodeGroup",isParent:true},tooltext:tooltext,component:node,id:id,label:"node-rect"});labelAttr.text&&node.addGraphicalElement({el:"text",attr:labelAttr,container:{id:"sankey-node-label-group",label:"nodeLabelGroup",isParent:true},tooltext:tooltext,component:node,id:id,css:{},outlineText:textOutline,label:"node-label"})};return SankeyNode}(_componentInterface.SmartRenderer);var _default=SankeyNode;exports.default=_default;