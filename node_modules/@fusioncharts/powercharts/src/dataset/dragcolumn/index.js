"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=true;exports.updateDataValue=exports._restore=exports._getJSONData=exports.default=void 0;var _inheritsLoose2=_interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));var _column=_interopRequireDefault(require("@fusioncharts/charts/src/dataset/column"));var _lib=require("@fusioncharts/core/src/lib");var _index=_interopRequireDefault(require("./index.animation"));var _dependencyManager=require("@fusioncharts/core/src/dependency-manager");var SETROLLOVERATTR=_lib.preDefStr.setRolloverAttrStr,SETROLLOUTATTR=_lib.preDefStr.setRolloutAttrStr,ROLLOUT="DataPlotRollOut",ROLLOVER="DataPlotRollOver",MOUSEOVER="mouseOver",MOUSEOUT="mouseOut",DEFAULT="default",DATAPLOTCLICK=_lib.preDefStr.DATAPLOTCLICK,dragMouseAttr=_lib.hasSVG&&"ns-resize"||"n-resize",_getJSONData,_restore,UNDEF,updateDataValue=function updateDataValue(event,chart){var element=this,yAxis=chart.getChildren("yAxis")[0],container=chart.getFromEnv("chart-container"),eventArgs=element.data("eventArgs"),mouseCoordinate;mouseCoordinate=(0,_lib.getMouseCoordinate)(container,event,chart);eventArgs.value=yAxis.getValue(mouseCoordinate.chartY);element.data("eventArgs",eventArgs)};exports.updateDataValue=updateDataValue;exports._restore=_restore;exports._getJSONData=_getJSONData;(0,_dependencyManager.addDep)({name:"dragColumnAnimation",type:"animationRule",extension:_index.default});var DragColumnDataset=function(_ColumnDataset){(0,_inheritsLoose2.default)(DragColumnDataset,_ColumnDataset);function DragColumnDataset(){return _ColumnDataset.apply(this,arguments)||this}var _proto=DragColumnDataset.prototype;_proto.getType=function getType(){return"dataset"};_proto.getName=function getName(){return"dragColumn"};_proto.configureAttributes=function configureAttributes(datasetJSON){var dataset=this,conf=dataset.config,chartAttr=dataset.getFromEnv("chart-attrib"),JSONData=conf.JSONData;conf.allowDrag=(0,_lib.pluckNumber)(JSONData.allowdrag,1);conf.allowNegDrag=(0,_lib.pluckNumber)(JSONData.allownegativedrag,1);conf.allowAxisChange=(0,_lib.pluckNumber)(chartAttr.allowaxischange,1);conf.snapToDivOnly=(0,_lib.pluckNumber)(chartAttr.snaptodivonly,0);conf.snapToDiv=conf.snapToDivOnly?1:(0,_lib.pluckNumber)(chartAttr.snaptodiv,1);conf.doNotSnap=(0,_lib.pluckNumber)(chartAttr.donotsnap,0);conf.snapToDivRelaxation=(0,_lib.pluckNumber)(chartAttr.snaptodivrelaxation,10);if(conf.doNotSnap){conf.snapToDiv=conf.snapToDivOnly=0}_ColumnDataset.prototype.configureAttributes.call(this,datasetJSON)};_proto._plotConfigure=function _plotConfigure(i,setData){var conf=this.config,dataStore=this.components.data,dataObj,config;_ColumnDataset.prototype._plotConfigure.call(this,i,setData);dataObj=dataStore[i];config=dataObj.config;config.allowDrag=(0,_lib.pluckNumber)(setData.allowdrag,conf.allowDrag);config.allowNegDrag=(0,_lib.pluckNumber)(setData.allownegativedrag,conf.allowNegDrag)};_proto.drag=function drag(action,oriEvent,index,coordinateData){var dataset=this,coordinate=coordinateData,datasetConf=dataset.config,chart=dataset.getFromEnv("chart"),chartConfig=chart.config,canvasTop=chartConfig.canvasTop,canvasBottom=chartConfig.canvasBottom,setElement,config,toolTipController=dataset.getFromEnv("toolTipController"),NumberFormatter=dataset.getFromEnv("number-formatter"),dataStore=dataset.components.data,yActual,value,formattedVal,allowNegDrag,yPos,angle,height,rolloverdata,lowerDragBoundary,chartY,fill,rolloutedata,canvas=dataset.getFromEnv("paper").canvas,style=canvas.style,yAxis=dataset.getFromEnv("yAxis"),yBasePos=yAxis.yBasePos,plotIndex,eventArgs,eventArgsArr,yaxisName=chartConfig.yaxisname,xaxisName=chartConfig.xaxisname,parserConfig={xaxisName:xaxisName,yaxisName:yaxisName},ticks=yAxis.getTicks(),data,tolerance=chartConfig.dragTolerance+1,setTooltext,toolText,allowDrag,pointerMouseAttr=DEFAULT,macroIndices=[1,2,3,4,5,6,7],JSONData=datasetConf.JSONData,chartAttr=dataset.getFromEnv("chart-attrib"),useplotgradientcolor=chartConfig.useplotgradientcolor,useroundedges=chartConfig.useroundedges,chartContainer=dataset.getFromEnv("chart-container"),snapToDivRelaxation=(0,_lib.mathAbs)(yAxis.getValue(yAxis.getPixel(0)-datasetConf.snapToDivRelaxation)),snapPixel=datasetConf.snapToDivOnly?(0,_lib.mathAbs)(ticks[1]-ticks[0])*.5:snapToDivRelaxation;coordinate=coordinate||(0,_lib.getMouseCoordinate)(chartContainer,oriEvent,chart);switch(action){case"dragstart":data=dataStore[index];config=data.config;setElement=data.graphics.element;yPos=data._yPos;height=data._height;yActual=config.setValue<0?yPos+height:yPos;allowDrag=config.allowDrag;chartY=coordinate.chartY;if(allowDrag&&chartY>=yActual-tolerance&&chartY<=yActual+tolerance){config.dragStart=true;config._pointerDy=0;config._dragStartY=chartY;config._dragBuffer=yActual-chartY;data.startValue=config.setValue;data.name=datasetConf.seriesname;data.datasetIndex=datasetConf.index;data.dragged=true}else{config.dragStart=false}break;case"dragmove":data=dataStore[index];config=data.config;if(config.dragStart){setElement=data.graphics.element;plotIndex=config.plotIndex;allowNegDrag=config.allowNegDrag;lowerDragBoundary=allowNegDrag?canvasBottom:yBasePos;chartY=coordinate.chartY;config._rollOverResponseSetterFire=false;style.cursor=dragMouseAttr;config._pointerDy++;chartY+=config._dragBuffer;if(chartY<canvasTop){chartY=canvasTop}else if(chartY>lowerDragBoundary){chartY=lowerDragBoundary}yPos=yBasePos<chartY?yBasePos:chartY;height=(0,_lib.mathAbs)(yBasePos-chartY);data._yPos=yPos;data._height=height;yActual=yPos>=yBasePos?yPos+height:yPos;config._y=value=config.setValue=yAxis.getValue(yActual);formattedVal=NumberFormatter.dataLabels(value);config.toolTipValue=formattedVal;config.displayValue=(0,_lib.pluck)(config.setDisplayValue,formattedVal);if(useplotgradientcolor&&!useroundedges){config.colorArr[0].FCcolor.angle=angle=yPos<yBasePos?90:270}setElement.attr({y:data._yPos,height:data._height});dataset.parseLabelAttributes(data);dataset.drawLabel(plotIndex,plotIndex+1);data.graphics.element=setElement;toolTipController.hide(datasetConf.currentToolTip);if(config._pointerDy===1){eventArgs={index:index,dataIndex:index,datasetIndex:data.datasetIndex,startValue:data.startValue,datasetName:data.name,color:config.originalPlotColor,gradientColor:datasetConf.plotgradientcolor,alpha:config.plotFillAlpha,borderColor:datasetConf.plotbordercolor,borderAlpha:config.plotBorderAlpha,borderThickness:chartConfig.plotborderthickness,borderDashed:config.dashed,hoverColor:config.hoverColor,hoverAlpha:config.hoverAlpha,borderHoverColor:config.hoverBorderColor,borderHoverAlpha:config.hoverBorderAlpha};chart.fireChartInstanceEvent("dataplotDragStart",eventArgs)}}break;case"dragend":var plotHeight;data=dataStore[index];config=data.config;plotHeight=data._height;if(config.dragStart){yPos=data._yPos;setElement=data.graphics.element;setTooltext=(0,_lib.getValidValue)((0,_lib.parseUnsafeString)((0,_lib.pluck)(data.tooltext,JSONData.plottooltext,chartAttr.plottooltext),false));chartY=coordinate.chartY;dataset.setMaxMin(data);if(config.givenPlotShowValue===0){config.showValue=0}else if(config.givenPlotShowValue===1){config.showValue=1}else if(config.givenPlotShowValue!==1&&datasetConf.showValues){if(Math.sqrt(plotHeight*plotHeight)<config.minplotheightforvalue){config.showValue=0}else{config.showValue=1}}if(datasetConf.snapToDiv||datasetConf.snapToDivOnly){config.setValue=(0,_lib.snapPoint)({snapPixel:snapPixel,datasetConf:datasetConf},ticks,data);chartY=yAxis.getPixel(config.setValue);yPos=yBasePos<chartY?yBasePos:chartY;height=(0,_lib.mathAbs)(yBasePos-chartY);data._yPos=yPos;data._height=height;setElement.attr({y:yPos,height:height});formattedVal=NumberFormatter.dataLabels(config.setValue);config.toolTipValue=formattedVal;config.displayValue=(0,_lib.pluck)(config.setDisplayValue,formattedVal);dataset.parseLabelAttributes(data);dataset.drawLabel(plotIndex,plotIndex+1)}eventArgs={index:index,dataIndex:index,datasetIndex:data.datasetIndex,startValue:data.startValue,endValue:config.setValue,datasetName:data.name,color:config.originalPlotColor,gradientColor:datasetConf.plotgradientcolor,alpha:config.plotFillAlpha,borderColor:datasetConf.plotbordercolor,borderAlpha:config.plotBorderAlpha,borderThickness:chartConfig.plotborderthickness,borderDashed:config.dashed,hoverColor:config.hoverColor,hoverAlpha:config.hoverAlpha,borderHoverColor:config.hoverBorderColor,borderHoverAlpha:config.hoverBorderAlpha,id:config.id};eventArgsArr=[chart.getFromEnv("chartInstance").id,eventArgs.dataIndex,eventArgs.datasetIndex,eventArgs.datasetName,eventArgs.startValue,eventArgs.endValue];updateDataValue.call(setElement,oriEvent,chart);if(config._pointerDy){chart.fireChartInstanceEvent("dataplotDragEnd",eventArgs);chart.fireChartInstanceEvent("chartupdated",eventArgs,eventArgsArr)}if(useplotgradientcolor&&!useroundedges){angle=yPos>=yBasePos?90:270;if((rolloverdata=setElement.data(SETROLLOVERATTR))&&rolloverdata.fill){fill=rolloverdata.fill;fill=fill.split("-");fill[0]=angle;rolloverdata.fill=fill.join("-")}if((rolloutedata=setElement.data(SETROLLOUTATTR))&&rolloutedata.fill){fill=rolloutedata.fill;fill=fill.split("-");fill[0]=angle;rolloutedata.fill=fill.join("-")}}config._dragBuffer=0;config._pointerDy=0;if(setTooltext!==UNDEF){parserConfig.formattedValue=config.toolTipValue;parserConfig.label=config.label;toolText=(0,_lib.parseTooltext)(setTooltext,macroIndices,parserConfig,{value:config.toolTipValue},UNDEF,JSONData);config.setTooltext=toolText;setTooltext=toolText;config.toolText=toolText}toolText=config.finalTooltext=config.toolText!==false?config.toolText+(setTooltext?"":config.toolTipValue):"";if(!(chartY>=yActual-tolerance&&chartY<=yActual+tolerance)){style.cursor=pointerMouseAttr}config.dragStart=false}}};_proto._firePlotEvent=function _firePlotEvent(eventType,plotIndex,e){var dataset=this,chart=dataset.getFromEnv("chart"),datasetConf=dataset.config,currentToolTip=datasetConf.currentToolTip,chartConfig=dataset.getFromEnv("chartConfig"),drawTrendRegion=chartConfig.drawTrendRegion,paper=dataset.getFromEnv("paper"),canvas=paper.canvas,style=canvas.style,toolTipController=dataset.getFromEnv("toolTipController"),data=dataset.components.data[plotIndex],config=data.config,setElement=data.graphics.element,toolText=config.finalTooltext||config.toolText,originalEvent=e.originalEvent,pointerMouseAttr=DEFAULT,tolerance,coordinate=(0,_lib.getMouseCoordinate)(dataset.getFromEnv("chart-container"),originalEvent,chart),chartY=coordinate.chartY,yPos=data._yPos,height=data._height,yAxis=dataset.getFromEnv("yAxis"),yBasePos=yAxis.yBasePos,allowDrag=config.allowDrag,yActual,colTop=yPos,colBottom=yPos+height;tolerance=chartConfig.dragTolerance+1;yActual=yPos>=yBasePos?yPos+height:yPos;if(setElement){switch(eventType){case"fc-mouseover":if(chartY<=colBottom-tolerance&&chartY>=colTop+tolerance&&!drawTrendRegion&&toolText){if(currentToolTip){toolTipController.draw(originalEvent,toolText,currentToolTip)}else{currentToolTip=datasetConf.currentToolTip=toolTipController.draw(originalEvent,toolText)}}if(!config._rollOverResponseSetterFire&&chartY<=colBottom&&chartY>=colTop){DragColumnDataset._rolloverResponseSetter(chart,setElement,e,this);config._rollOverResponseSetterFire=true}break;case"fc-mouseout":style.cursor=pointerMouseAttr;config._rollOverResponseSetterFire&&DragColumnDataset._rolloutResponseSetter(chart,setElement,e,this);config._rollOverResponseSetterFire=false;toolTipController.hide(datasetConf.currentToolTip);break;case"fc-click":chart.plotEventHandler(setElement,e,DATAPLOTCLICK);break;case"fc-mousemove":if(!config.dragStart){yActual=config.setValue<0?yPos+height:yPos;if(allowDrag&&chartY>=yActual-tolerance&&chartY<=yActual+tolerance){style.cursor=dragMouseAttr;toolTipController.hide(datasetConf.currentToolTip)}else{style.cursor=pointerMouseAttr;if(config._rollOverResponseSetterFire&&!drawTrendRegion&&toolText){if(currentToolTip){toolTipController.draw(originalEvent,toolText,currentToolTip)}else{currentToolTip=datasetConf.currentToolTip=toolTipController.draw(originalEvent,toolText)}}}if(!config._rollOverResponseSetterFire&&chartY<=colBottom&&chartY>=colTop){DragColumnDataset._rolloverResponseSetter(chart,setElement,e);config._rollOverResponseSetterFire=true}else if(config._rollOverResponseSetterFire&&!(chartY<=colBottom&&chartY>=colTop)){toolTipController.hide(datasetConf.currentToolTip);config._rollOverResponseSetterFire=false;DragColumnDataset._rolloutResponseSetter(chart,setElement,e,this)}}break}}};DragColumnDataset._rolloverResponseSetter=function _rolloverResponseSetter(chart,elem,event,dataset){var elData=elem&&elem.getData(),animationManager=chart.getFromEnv("animationManager");if(elem&&elData.showHoverEffect!==0&&elData.draged!==true&&elem){animationManager.setAnimationState(MOUSEOVER);animationManager.setAnimation({el:elem,label:"rect",component:dataset,attr:elem.getData().setRolloverAttr});chart.plotEventHandler(elem,event,ROLLOVER)}};DragColumnDataset._rolloutResponseSetter=function _rolloutResponseSetter(chart,elem,event,dataset){var elData=elem&&elem.getData(),animationManager=chart.getFromEnv("animationManager");if(elem&&elData.showHoverEffect!==0&&elData.draged!==true){animationManager.setAnimationState(MOUSEOUT);animationManager.setAnimation({el:elem,label:"rect",component:dataset,attr:elem.getData().setRolloutAttr});chart.plotEventHandler(elem,event,ROLLOUT)}};_proto.getJSONData=function getJSONData(){var dataset=this,JSONData=dataset.config.JSONData.data,dataStore=dataset.components.data,dataArr=[],obj={},updatedDataObj,dataObj,prop,len,i;for(i=0,len=JSONData.length;i<len;i++){dataObj=JSONData[i];updatedDataObj=dataStore[i];obj={};for(prop in dataObj){if(prop==="value"){obj[prop]=updatedDataObj.config.setValue}else{obj[prop]=dataObj[prop]}}dataArr.push(obj)}return{data:dataArr}};_proto.restore=function restore(){var dataset=this;dataset.setData(dataset.config.JSONData,true)};return DragColumnDataset}(_column.default);exports._getJSONData=_getJSONData=DragColumnDataset.prototype.getJSONData;exports._restore=_restore=DragColumnDataset.prototype.restore;var _default=DragColumnDataset;exports.default=_default;