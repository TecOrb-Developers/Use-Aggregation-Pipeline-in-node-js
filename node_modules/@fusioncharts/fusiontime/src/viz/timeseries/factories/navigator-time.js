"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=true;exports.default=void 0;var _merge=_interopRequireDefault(require("ramda/es/merge"));var _timeNavigator=_interopRequireDefault(require("../../../_internal/components/time-navigator"));var _lib=require("@fusioncharts/core/src/lib");var _panelConfigurer=_interopRequireDefault(require("./_utils/panel-configurer"));var DEFAULT_AXIS_X={orientation:"bottom",align:"bottom",visible:true,overlap:true,dayinmajor:true,stickycontextlabel:false,scalemode:"random",skipinfo:{minor:true},offset:{x:2,y:2}},DEFAULT_AXIS_Y={orientation:"left",align:"left",visible:true,overlap:false},hydrateX=(0,_merge.default)(DEFAULT_AXIS_X),hydrateY=(0,_merge.default)(DEFAULT_AXIS_Y);var _default=function _default(chart){var chartConfig=chart.config,contextAxesX=chartConfig.contextAxesX,contextAxesY=chartConfig.contextAxesY,contextPanels=chartConfig.contextPanels.map((function(panel){return(0,_merge.default)(panel,{x:panel.x.map((function(xCfg){return(0,_merge.default)(hydrateX(xCfg),(0,_panelConfigurer.default)(contextAxesX,xCfg.index))})),y:panel.y.map((function(yCfg){return(0,_merge.default)(hydrateY(yCfg),(0,_merge.default)((0,_panelConfigurer.default)(contextAxesY,yCfg.index),{plottype:"line"}))}))})})),tableMap=chartConfig.contextTableMap;var mergedContextPanels,timeNavigator;mergedContextPanels=contextPanels.map((function(cfg,i){var info=(0,_merge.default)(cfg,{tableMap:tableMap});(0,_lib.componentFactory)(chart,_timeNavigator.default,"timeNavigator",chartConfig.navigatorEnabled?1:0,[{contextScale:info.x[i].scale.copy(),xConfigs:info.x,yConfigs:info.y,plotConfigs:info.plots,dataTable:info.dataTable,tableMap:info.tableMap,focusScale:chart.getFromEnv("focusScalesX")[0]}]);return info}));chartConfig.contextPanels=mergedContextPanels;if(timeNavigator=chart.getChildren("timeNavigator")&&chart.getChildren("timeNavigator")[0]){if(!timeNavigator||timeNavigator.getState("removed"))return;timeNavigator.attachHandlers();timeNavigator.addExtEventListener("focusLimitChanged",(function(){timeNavigator.asyncDraw()}),chart)}};exports.default=_default;