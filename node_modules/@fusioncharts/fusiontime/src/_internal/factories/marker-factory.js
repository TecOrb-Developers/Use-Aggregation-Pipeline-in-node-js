"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=true;exports.default=_default;var _dataMarker=_interopRequireDefault(require("./../components/data-marker"));var _stringHasContent=_interopRequireDefault(require("@fusioncharts/utils/src/type/string-has-content"));var _arrayHasContent=_interopRequireDefault(require("@fusioncharts/utils/src/type/array-has-content"));var _equals=_interopRequireDefault(require("ramda/es/equals"));var _isObject=_interopRequireDefault(require("@fusioncharts/utils/src/type/is-object"));var _timeConverter=_interopRequireDefault(require("@fusioncharts/utils/src/time-converter"));var _clipUtils=require("@fusioncharts/utils/src/clip-utils");function _default(dataset){var dataSource=dataset.getFromEnv("dataSource"),seriesname=dataset.config.series,dataMarker,_dataset$getFromEnv$=dataset.getFromEnv("focusScalesX")[0].applicableClippings,repeatClips=_dataset$getFromEnv$.repeatClips,singleClips=_dataset$getFromEnv$.singleClips,_dataset$config=dataset.config,measures=_dataset$config.measures,_dataset$config$serie=_dataset$config.seriesInfo,seriesInfo=_dataset$config$serie===void 0?{}:_dataset$config$serie,enableMarkers=_dataset$config.enableMarkers,visibility=_dataset$config.visibility,isStock=_dataset$config.isStock,isRange=_dataset$config.isRange,dataMarkerInstance,markers=[];if(enableMarkers&&(dataMarker=dataSource.datamarker)){dataMarker.forEach((function(data){var cloneData=Object.assign({},data),value=cloneData.value,series=cloneData.series,isConditionsMet=true,parsedTime=_timeConverter.default.parser(data.timeformat).parse(data.time);if(isNaN(+parsedTime)||(0,_clipUtils.getUnclippedValue)(parsedTime,repeatClips,singleClips)!==+parsedTime){return}if(value){if((0,_stringHasContent.default)(value)){value=[value]}if((0,_arrayHasContent.default)(value)){value=value.filter(_stringHasContent.default);if((isRange||isStock)&&(0,_isObject.default)(measures[0])){var measuresArr=Object.values(measures[0]);for(var i=0;i<value.length&&isConditionsMet;++i){isConditionsMet=measuresArr.includes(value[i])}}else{isConditionsMet=(0,_equals.default)(value,measures)}}}if(Object.keys(seriesInfo).length&&(0,_isObject.default)(series)){var keys=Object.keys(series),_i=keys.length,key;while(isConditionsMet&&_i--){key=keys[_i];if((0,_stringHasContent.default)(series[key])){if(series[key]!==seriesInfo[key])isConditionsMet=false}}}if(isConditionsMet){if(isStock||isRange){cloneData.measures=measures}else{cloneData.seriesname=seriesname}markers.push(cloneData)}}));if(markers.length!==0){dataMarkerInstance=dataset.attachChild(_dataMarker.default,"dataMarker");dataMarkerInstance.configure({data:markers,isStock:isStock,isRange:isRange,visibility:visibility})}}}