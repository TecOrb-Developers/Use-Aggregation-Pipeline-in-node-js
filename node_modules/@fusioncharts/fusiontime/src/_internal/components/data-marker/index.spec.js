"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _index=_interopRequireDefault(require("./index"));describe("To verify _checkPointOverMarker method",(function(){var dataMarker=new _index.default;var pinMarker=new _index.default;pinMarker.config.dataInfo=dataMarker.config.dataInfo=[{x:0,y:100},{x:40,y:100},{x:80,y:120},{x:120,y:120}];dataMarker.config.markerInfo=[{},{},{},{}];pinMarker.config.markerInfo=[{type:"pin"},{type:"pin"},{},{}];it("FM-TC-11: To verify if the method returns correct n'th marker index for specific case of pointer x,y inside the marker",(function(){var hovered=dataMarker._checkPointOverMarker(1,40,94);expect(hovered&&hovered.pointIndex).toBe(1)}));it("FM-TC-12: To verify if the method returns n'th plot when pointer x, y is on the edge of the plot",(function(){var point=pinMarker._checkPointOverMarker(1,40,100);expect(point&&point.pointIndex).toBe(1);point=dataMarker._checkPointOverMarker(1,48,74);expect(point&&point.pointIndex).toBe(1);point=dataMarker._checkPointOverMarker(1,40,74);expect(point&&point.pointIndex).toBe(1)}));it("FM-TC-13: To verify if the method does not return n'th plot when pointer x, y is out of the plot",(function(){var point=dataMarker._checkPointOverMarker(0,9,110);expect(point&&point.pointIndex).not.toBe(0);point=dataMarker._checkPointOverMarker(0,9,129);expect(point&&point.pointIndex).not.toBe(0);point=pinMarker._checkPointOverMarker(0,8,126);expect(point&&point.pointIndex).not.toBe(0);point=pinMarker._checkPointOverMarker(0,-8,126);expect(point&&point.pointIndex).not.toBe(0)}))}));