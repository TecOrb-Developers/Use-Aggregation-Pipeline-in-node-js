"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var config_dev_1 = __importDefault(require("../../config/config.dev"));
var color = {
    white: '\x1b[37m',
    yellow: '\x1b[33m',
    blue: '\x1b[34m',
    red: '\x1b[31m',
    Cyan: '\x1b[36m',
    green: '\x1b[32m',
    reset: '\x1b[0m'
};
var loggerNames = ['log', 'warn', 'info', 'error', 'success'];
var level = loggerNames.indexOf(config_dev_1["default"].logger.level);
function getColorLog(levelColor, args) {
    return __spreadArrays([
        "" + color[levelColor] + args[0],
        color.reset
    ], args.slice(1));
}
var logger = {
    log: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (0 < level)
            return;
        console.log.apply(console, args);
    },
    warn: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (1 < level)
            return;
        console.log.apply(console, getColorLog('yellow', args));
    },
    info: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (2 < level)
            return;
        console.log.apply(console, getColorLog('blue', args));
    },
    error: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (3 < level)
            return;
        console.log.apply(console, getColorLog('red', args));
        process.exit();
    },
    success: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (4 < level)
            return;
        console.log.apply(console, getColorLog('green', args));
    }
};
exports["default"] = logger;
