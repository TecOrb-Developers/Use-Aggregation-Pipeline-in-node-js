"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var path_1 = __importDefault(require("path"));
var module_1 = __importDefault(require("module"));
var compiler_1 = __importDefault(require("../compiler"));
var logger_1 = __importDefault(require("../lib/logger"));
var ExecModule = /** @class */ (function () {
    function ExecModule(configOptions, pathHost) {
        require.extensions['.ts'] = this.registerExtensions.bind(this);
        this.configOptions = configOptions;
        this.root = configOptions.config.root;
        this.pathHost = pathHost;
    }
    ExecModule.prototype.run = function (sourceFiles) {
        // run service
        // const module = new Module('/Users/cxd/Documents/my-lib/npm_lock2yarn/t.ts');
        // module.filename = '/Users/cxd/Documents/my-lib/npm_lock2yarn/t.ts';
        // module.paths = Module._nodeModulePaths(this.root);
        // Module._preloadModules([]); // 预加载自己定义的一些模块
        // process.execArgv = [
        //   '/Users/cxd/Documents/my-lib/npm_lock2yarn/node_modules/_ts-node@8.8.1@ts-node/dist/bin.js',
        //   '-H',
        // ];
        process.argv = [
            'node',
            // '/Users/cxd/Documents/my-lib/npm_lock2yarn/node_modules/.bin/ts-node',
            // '/Users/cxd/Documents/my-lib/npm_lock2yarn/t.ts',
            path_1["default"].join(this.root, sourceFiles[0]),
        ]; // Module.runMain会用到此参数去跑对应的文件
        // let code: string;
        // if (code !== undefined && !interactive) {
        //   evalAndExit(service, state, module, code, print);
        // } else {
        //   console.log('run module');
        //   Module.runMain();
        // }
        logger_1["default"].log('run module');
        module_1["default"].runMain();
    };
    ExecModule.prototype.registerExtensions = function (m, fileName) {
        logger_1["default"].log('it will require module', fileName);
        // const old = require.extensions['.ts'] || originalHandler;
        // if (filename.includes('node_modules')) return old(m, filename);
        var old = require.extensions['.js'];
        var _compile = m._compile;
        var configOptions = this.configOptions;
        var pathHost = this.pathHost;
        m._compile = function (code, fileName) {
            logger_1["default"].log('_compile', fileName);
            return _compile.call(this, new compiler_1["default"](configOptions, pathHost).compile(code, fileName), fileName);
        };
        return old(m, fileName);
    };
    return ExecModule;
}());
exports["default"] = ExecModule;
